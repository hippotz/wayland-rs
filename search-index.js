var searchIndex = {};
searchIndex["wayland_client"] = {"doc":"Client-side Wayland connector","items":[[3,"State","wayland_client","A token store",null,null],[3,"StateProxy","","A Proxy representing a `Store` with ongoing borrows",null,null],[3,"StateToken","","A token for accessing the store contents",null,null],[3,"EnvHandler","","Utility type to handle the registry and global objects",null,null],[3,"EnvNotify","","An implementation to receive globals notifications for the EnvHandler",null,null],[12,"new_global","","A new global was advertized by the server",0,null],[12,"del_global","","A global was removed by the server",0,null],[12,"ready","","The EnvHandler is ready",0,null],[3,"EventQueue","","An event queue managing wayland events",null,null],[3,"EventQueueHandle","","Handle to an event queue",null,null],[3,"ReadEventsGuard","","A guard over a read intention.",null,null],[4,"ConnectError","","Enum representing the possible reasons why connecting to the wayland server failed",null,null],[13,"NoWaylandLib","","The library was compiled with the `dlopen` feature, and the `libwayland-client.so` library could not be found at runtime",1,null],[13,"NoCompositorListening","","Any needed library was found, but the listening socket of the server could not be found.",1,null],[4,"FatalError","","Enum representing possible errors fatal to a wayland session",null,null],[13,"Io","","Session aborted after an I/O error",2,null],[13,"Protocol","","Session aborted after a protocol error",2,null],[12,"interface","wayland_client::FatalError","name of the interface of the proxy that generated this error",2,null],[12,"proxy_id","","internal id of the proxy that generated this error",2,null],[12,"error_code","","code of the error, as defined by the `Error` enum of the interface of the proxy. It can directly be fed to the `from_raw` static method of this enum.",2,null],[4,"RegisterStatus","wayland_client","Status of a registration attempt of a proxy.",null,null],[13,"Registered","","The proxy was properly registered to this event queue & handler.",3,null],[13,"Unmanaged","","The proxy was not registered because it is not managed by `wayland-client`.",3,null],[13,"Dead","","The proxy was not registered because it is already destroyed.",3,null],[4,"RequestResult","","Possible outcome of the call of a request on a proxy",null,null],[13,"Sent","","Message has been buffered and will be sent to server",4,null],[13,"Destroyed","","This proxy is already destroyed, request has been ignored",4,null],[4,"Liveness","","Represents the state of liveness of a wayland object",null,null],[13,"Alive","","This object is alive and its requests can be called",5,null],[13,"Dead","","This object is dead, calling its requests will do nothing and return and error.",5,null],[13,"Unmanaged","","This object is not managed by `wayland-client`, you can call its methods but this might crash the program if it was actually dead.",5,null],[5,"connect_to","","Connect to the compositor socket",null,{"inputs":[{"name":"osstr"}],"output":{"name":"result"}}],[5,"default_connect","","Connect to the compositor socket",null,{"inputs":[],"output":{"name":"result"}}],[0,"protocol","","The wayland core protocol",null,null],[0,"wl_display","wayland_client::protocol","core global object",null,null],[3,"WlDisplay","wayland_client::protocol::wl_display","",null,null],[4,"Error","","global error values",null,null],[13,"InvalidObject","","server couldn't find object",6,null],[13,"InvalidMethod","","method doesn't exist on the specified interface",6,null],[13,"NoMemory","","server is out of memory",6,null],[0,"wl_registry","wayland_client::protocol","global registry object",null,null],[3,"WlRegistry","wayland_client::protocol::wl_registry","",null,null],[3,"Implementation","","",null,null],[12,"global","","announce global object",7,null],[12,"global_remove","","announce removal of global object",7,null],[0,"wl_callback","wayland_client::protocol","callback object",null,null],[3,"WlCallback","wayland_client::protocol::wl_callback","",null,null],[3,"Implementation","","",null,null],[12,"done","","done event",8,null],[0,"wl_compositor","wayland_client::protocol","the compositor singleton",null,null],[3,"WlCompositor","wayland_client::protocol::wl_compositor","",null,null],[0,"wl_shm_pool","wayland_client::protocol","a shared memory pool",null,null],[3,"WlShmPool","wayland_client::protocol::wl_shm_pool","",null,null],[0,"wl_shm","wayland_client::protocol","shared memory support",null,null],[3,"WlShm","wayland_client::protocol::wl_shm","",null,null],[3,"Implementation","","",null,null],[12,"format","","pixel format description",9,null],[4,"Error","","wl_shm error values",null,null],[13,"InvalidFormat","","buffer format is not known",10,null],[13,"InvalidStride","","invalid size or stride during pool or buffer creation",10,null],[13,"InvalidFd","","mmapping the file descriptor failed",10,null],[4,"Format","","pixel formats",null,null],[13,"Argb8888","","32-bit ARGB format, [31:0] A:R:G:B 8:8:8:8 little endian",11,null],[13,"Xrgb8888","","32-bit RGB format, [31:0] x:R:G:B 8:8:8:8 little endian",11,null],[13,"C8","","8-bit color index format, [7:0] C",11,null],[13,"Rgb332","","8-bit RGB format, [7:0] R:G:B 3:3:2",11,null],[13,"Bgr233","","8-bit BGR format, [7:0] B:G:R 2:3:3",11,null],[13,"Xrgb4444","","16-bit xRGB format, [15:0] x:R:G:B 4:4:4:4 little endian",11,null],[13,"Xbgr4444","","16-bit xBGR format, [15:0] x:B:G:R 4:4:4:4 little endian",11,null],[13,"Rgbx4444","","16-bit RGBx format, [15:0] R:G:B:x 4:4:4:4 little endian",11,null],[13,"Bgrx4444","","16-bit BGRx format, [15:0] B:G:R:x 4:4:4:4 little endian",11,null],[13,"Argb4444","","16-bit ARGB format, [15:0] A:R:G:B 4:4:4:4 little endian",11,null],[13,"Abgr4444","","16-bit ABGR format, [15:0] A:B:G:R 4:4:4:4 little endian",11,null],[13,"Rgba4444","","16-bit RBGA format, [15:0] R:G:B:A 4:4:4:4 little endian",11,null],[13,"Bgra4444","","16-bit BGRA format, [15:0] B:G:R:A 4:4:4:4 little endian",11,null],[13,"Xrgb1555","","16-bit xRGB format, [15:0] x:R:G:B 1:5:5:5 little endian",11,null],[13,"Xbgr1555","","16-bit xBGR 1555 format, [15:0] x:B:G:R 1:5:5:5 little endian",11,null],[13,"Rgbx5551","","16-bit RGBx 5551 format, [15:0] R:G:B:x 5:5:5:1 little endian",11,null],[13,"Bgrx5551","","16-bit BGRx 5551 format, [15:0] B:G:R:x 5:5:5:1 little endian",11,null],[13,"Argb1555","","16-bit ARGB 1555 format, [15:0] A:R:G:B 1:5:5:5 little endian",11,null],[13,"Abgr1555","","16-bit ABGR 1555 format, [15:0] A:B:G:R 1:5:5:5 little endian",11,null],[13,"Rgba5551","","16-bit RGBA 5551 format, [15:0] R:G:B:A 5:5:5:1 little endian",11,null],[13,"Bgra5551","","16-bit BGRA 5551 format, [15:0] B:G:R:A 5:5:5:1 little endian",11,null],[13,"Rgb565","","16-bit RGB 565 format, [15:0] R:G:B 5:6:5 little endian",11,null],[13,"Bgr565","","16-bit BGR 565 format, [15:0] B:G:R 5:6:5 little endian",11,null],[13,"Rgb888","","24-bit RGB format, [23:0] R:G:B little endian",11,null],[13,"Bgr888","","24-bit BGR format, [23:0] B:G:R little endian",11,null],[13,"Xbgr8888","","32-bit xBGR format, [31:0] x:B:G:R 8:8:8:8 little endian",11,null],[13,"Rgbx8888","","32-bit RGBx format, [31:0] R:G:B:x 8:8:8:8 little endian",11,null],[13,"Bgrx8888","","32-bit BGRx format, [31:0] B:G:R:x 8:8:8:8 little endian",11,null],[13,"Abgr8888","","32-bit ABGR format, [31:0] A:B:G:R 8:8:8:8 little endian",11,null],[13,"Rgba8888","","32-bit RGBA format, [31:0] R:G:B:A 8:8:8:8 little endian",11,null],[13,"Bgra8888","","32-bit BGRA format, [31:0] B:G:R:A 8:8:8:8 little endian",11,null],[13,"Xrgb2101010","","32-bit xRGB format, [31:0] x:R:G:B 2:10:10:10 little endian",11,null],[13,"Xbgr2101010","","32-bit xBGR format, [31:0] x:B:G:R 2:10:10:10 little endian",11,null],[13,"Rgbx1010102","","32-bit RGBx format, [31:0] R:G:B:x 10:10:10:2 little endian",11,null],[13,"Bgrx1010102","","32-bit BGRx format, [31:0] B:G:R:x 10:10:10:2 little endian",11,null],[13,"Argb2101010","","32-bit ARGB format, [31:0] A:R:G:B 2:10:10:10 little endian",11,null],[13,"Abgr2101010","","32-bit ABGR format, [31:0] A:B:G:R 2:10:10:10 little endian",11,null],[13,"Rgba1010102","","32-bit RGBA format, [31:0] R:G:B:A 10:10:10:2 little endian",11,null],[13,"Bgra1010102","","32-bit BGRA format, [31:0] B:G:R:A 10:10:10:2 little endian",11,null],[13,"Yuyv","","packed YCbCr format, [31:0] Cr0:Y1:Cb0:Y0 8:8:8:8 little endian",11,null],[13,"Yvyu","","packed YCbCr format, [31:0] Cb0:Y1:Cr0:Y0 8:8:8:8 little endian",11,null],[13,"Uyvy","","packed YCbCr format, [31:0] Y1:Cr0:Y0:Cb0 8:8:8:8 little endian",11,null],[13,"Vyuy","","packed YCbCr format, [31:0] Y1:Cb0:Y0:Cr0 8:8:8:8 little endian",11,null],[13,"Ayuv","","packed AYCbCr format, [31:0] A:Y:Cb:Cr 8:8:8:8 little endian",11,null],[13,"Nv12","","2 plane YCbCr Cr:Cb format, 2x2 subsampled Cr:Cb plane",11,null],[13,"Nv21","","2 plane YCbCr Cb:Cr format, 2x2 subsampled Cb:Cr plane",11,null],[13,"Nv16","","2 plane YCbCr Cr:Cb format, 2x1 subsampled Cr:Cb plane",11,null],[13,"Nv61","","2 plane YCbCr Cb:Cr format, 2x1 subsampled Cb:Cr plane",11,null],[13,"Yuv410","","3 plane YCbCr format, 4x4 subsampled Cb (1) and Cr (2) planes",11,null],[13,"Yvu410","","3 plane YCbCr format, 4x4 subsampled Cr (1) and Cb (2) planes",11,null],[13,"Yuv411","","3 plane YCbCr format, 4x1 subsampled Cb (1) and Cr (2) planes",11,null],[13,"Yvu411","","3 plane YCbCr format, 4x1 subsampled Cr (1) and Cb (2) planes",11,null],[13,"Yuv420","","3 plane YCbCr format, 2x2 subsampled Cb (1) and Cr (2) planes",11,null],[13,"Yvu420","","3 plane YCbCr format, 2x2 subsampled Cr (1) and Cb (2) planes",11,null],[13,"Yuv422","","3 plane YCbCr format, 2x1 subsampled Cb (1) and Cr (2) planes",11,null],[13,"Yvu422","","3 plane YCbCr format, 2x1 subsampled Cr (1) and Cb (2) planes",11,null],[13,"Yuv444","","3 plane YCbCr format, non-subsampled Cb (1) and Cr (2) planes",11,null],[13,"Yvu444","","3 plane YCbCr format, non-subsampled Cr (1) and Cb (2) planes",11,null],[0,"wl_buffer","wayland_client::protocol","content for a wl_surface",null,null],[3,"WlBuffer","wayland_client::protocol::wl_buffer","",null,null],[3,"Implementation","","",null,null],[12,"release","","compositor releases buffer",12,null],[0,"wl_data_offer","wayland_client::protocol","offer to transfer data",null,null],[3,"WlDataOffer","wayland_client::protocol::wl_data_offer","",null,null],[3,"Implementation","","",null,null],[12,"offer","","advertise offered mime type",13,null],[12,"source_actions","","notify the source-side available actions",13,null],[12,"action","","notify the selected action",13,null],[4,"Error","","",null,null],[13,"InvalidFinish","","finish request was called untimely",14,null],[13,"InvalidActionMask","","action mask contains invalid values",14,null],[13,"InvalidAction","","action argument has an invalid value",14,null],[13,"InvalidOffer","","offer doesn't accept this request",14,null],[0,"wl_data_source","wayland_client::protocol","offer to transfer data",null,null],[3,"WlDataSource","wayland_client::protocol::wl_data_source","",null,null],[3,"Implementation","","",null,null],[12,"target","","a target accepts an offered mime type",15,null],[12,"send","","send the data",15,null],[12,"cancelled","","selection was cancelled",15,null],[12,"dnd_drop_performed","","the drag-and-drop operation physically finished",15,null],[12,"dnd_finished","","the drag-and-drop operation concluded",15,null],[12,"action","","notify the selected action",15,null],[4,"Error","","",null,null],[13,"InvalidActionMask","","action mask contains invalid values",16,null],[13,"InvalidSource","","source doesn't accept this request",16,null],[0,"wl_data_device","wayland_client::protocol","data transfer device",null,null],[3,"WlDataDevice","wayland_client::protocol::wl_data_device","",null,null],[3,"Implementation","","",null,null],[12,"data_offer","","introduce a new wl_data_offer",17,null],[12,"enter","","initiate drag-and-drop session",17,null],[12,"leave","","end drag-and-drop session",17,null],[12,"motion","","drag-and-drop session motion",17,null],[12,"drop","","end drag-and-drop session successfully",17,null],[12,"selection","","advertise new selection",17,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",18,null],[0,"wl_data_device_manager","wayland_client::protocol","data transfer interface",null,null],[3,"WlDataDeviceManager","wayland_client::protocol::wl_data_device_manager","",null,null],[3,"DndAction","","drag and drop actions",null,null],[0,"wl_shell","wayland_client::protocol","create desktop-style surfaces",null,null],[3,"WlShell","wayland_client::protocol::wl_shell","",null,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",19,null],[0,"wl_shell_surface","wayland_client::protocol","desktop-style metadata interface",null,null],[3,"WlShellSurface","wayland_client::protocol::wl_shell_surface","",null,null],[3,"Resize","","edge values for resizing",null,null],[3,"Transient","","details of transient behaviour",null,null],[3,"Implementation","","",null,null],[12,"ping","","ping client",20,null],[12,"configure","","suggest resize",20,null],[12,"popup_done","","popup interaction is done",20,null],[4,"FullscreenMethod","","different method to set the surface fullscreen",null,null],[13,"Default","","no preference, apply default policy",21,null],[13,"Scale","","scale, preserve the surface's aspect ratio and center on output",21,null],[13,"Driver","","switch output mode to the smallest mode that can fit the surface, add black borders to compensate size mismatch",21,null],[13,"Fill","","no upscaling, center on output and add black borders to compensate size mismatch",21,null],[0,"wl_surface","wayland_client::protocol","an onscreen surface",null,null],[3,"WlSurface","wayland_client::protocol::wl_surface","",null,null],[3,"Implementation","","",null,null],[12,"enter","","surface enters an output",22,null],[12,"leave","","surface leaves an output",22,null],[4,"Error","","wl_surface error values",null,null],[13,"InvalidScale","","buffer scale value is invalid",23,null],[13,"InvalidTransform","","buffer transform value is invalid",23,null],[0,"wl_seat","wayland_client::protocol","group of input devices",null,null],[3,"WlSeat","wayland_client::protocol::wl_seat","",null,null],[3,"Capability","","seat capability bitmask",null,null],[3,"Implementation","","",null,null],[12,"capabilities","","seat capabilities changed",24,null],[12,"name","","unique identifier for this seat",24,null],[0,"wl_pointer","wayland_client::protocol","pointer input device",null,null],[3,"WlPointer","wayland_client::protocol::wl_pointer","",null,null],[3,"Implementation","","",null,null],[12,"enter","","enter event",25,null],[12,"leave","","leave event",25,null],[12,"motion","","pointer motion event",25,null],[12,"button","","pointer button event",25,null],[12,"axis","","axis event",25,null],[12,"frame","","end of a pointer event sequence",25,null],[12,"axis_source","","axis source event",25,null],[12,"axis_stop","","axis stop event",25,null],[12,"axis_discrete","","axis click event",25,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",26,null],[4,"ButtonState","","physical button state",null,null],[13,"Released","","the button is not pressed",27,null],[13,"Pressed","","the button is pressed",27,null],[4,"Axis","","axis types",null,null],[13,"VerticalScroll","","vertical axis",28,null],[13,"HorizontalScroll","","horizontal axis",28,null],[4,"AxisSource","","axis source types",null,null],[13,"Wheel","","a physical wheel",29,null],[13,"Finger","","finger on a touch surface",29,null],[13,"Continuous","","continuous coordinate space",29,null],[0,"wl_keyboard","wayland_client::protocol","keyboard input device",null,null],[3,"WlKeyboard","wayland_client::protocol::wl_keyboard","",null,null],[3,"Implementation","","",null,null],[12,"keymap","","keyboard mapping",30,null],[12,"enter","","enter event",30,null],[12,"leave","","leave event",30,null],[12,"key","","key event",30,null],[12,"modifiers","","modifier and group state",30,null],[12,"repeat_info","","repeat rate and delay",30,null],[4,"KeymapFormat","","keyboard mapping format",null,null],[13,"NoKeymap","","no keymap; client must understand how to interpret the raw keycode",31,null],[13,"XkbV1","","libxkbcommon compatible; to determine the xkb keycode, clients must add 8 to the key event keycode",31,null],[4,"KeyState","","physical key state",null,null],[13,"Released","","key is not pressed",32,null],[13,"Pressed","","key is pressed",32,null],[0,"wl_touch","wayland_client::protocol","touchscreen input device",null,null],[3,"WlTouch","wayland_client::protocol::wl_touch","",null,null],[3,"Implementation","","",null,null],[12,"down","","touch down event and beginning of a touch sequence",33,null],[12,"up","","end of a touch event sequence",33,null],[12,"motion","","update of touch point coordinates",33,null],[12,"frame","","end of touch frame event",33,null],[12,"cancel","","touch session cancelled",33,null],[0,"wl_output","wayland_client::protocol","compositor output region",null,null],[3,"WlOutput","wayland_client::protocol::wl_output","",null,null],[3,"Mode","","mode information",null,null],[3,"Implementation","","",null,null],[12,"geometry","","properties of the output",34,null],[12,"mode","","advertise available modes for the output",34,null],[12,"done","","sent all information about output",34,null],[12,"scale","","output scaling properties",34,null],[4,"Subpixel","","subpixel geometry information",null,null],[13,"Unknown","","unknown geometry",35,null],[13,"None","","no geometry",35,null],[13,"HorizontalRgb","","horizontal RGB",35,null],[13,"HorizontalBgr","","horizontal BGR",35,null],[13,"VerticalRgb","","vertical RGB",35,null],[13,"VerticalBgr","","vertical BGR",35,null],[4,"Transform","","transform from framebuffer to output",null,null],[13,"Normal","","no transform",36,null],[13,"_90","","90 degrees counter-clockwise",36,null],[13,"_180","","180 degrees counter-clockwise",36,null],[13,"_270","","270 degrees counter-clockwise",36,null],[13,"Flipped","","180 degree flip around a vertical axis",36,null],[13,"Flipped90","","flip and rotate 90 degrees counter-clockwise",36,null],[13,"Flipped180","","flip and rotate 180 degrees counter-clockwise",36,null],[13,"Flipped270","","flip and rotate 270 degrees counter-clockwise",36,null],[0,"wl_region","wayland_client::protocol","region interface",null,null],[3,"WlRegion","wayland_client::protocol::wl_region","",null,null],[0,"wl_subcompositor","wayland_client::protocol","sub-surface compositing",null,null],[3,"WlSubcompositor","wayland_client::protocol::wl_subcompositor","",null,null],[4,"Error","","",null,null],[13,"BadSurface","","the to-be sub-surface is invalid",37,null],[0,"wl_subsurface","wayland_client::protocol","sub-surface interface to a wl_surface",null,null],[3,"WlSubsurface","wayland_client::protocol::wl_subsurface","",null,null],[4,"Error","","",null,null],[13,"BadSurface","","wl_surface is not a sibling or the parent",38,null],[0,"protocol_interfaces","wayland_client","Interfaces for the core protocol",null,null],[7,"wl_display_requests","wayland_client::protocol_interfaces","",null,null],[7,"wl_display_events","","",null,null],[7,"wl_display_interface","","",null,null],[7,"wl_registry_requests","","",null,null],[7,"wl_registry_events","","",null,null],[7,"wl_registry_interface","","",null,null],[7,"wl_callback_events","","",null,null],[7,"wl_callback_interface","","",null,null],[7,"wl_compositor_requests","","",null,null],[7,"wl_compositor_interface","","",null,null],[7,"wl_shm_pool_requests","","",null,null],[7,"wl_shm_pool_interface","","",null,null],[7,"wl_shm_requests","","",null,null],[7,"wl_shm_events","","",null,null],[7,"wl_shm_interface","","",null,null],[7,"wl_buffer_requests","","",null,null],[7,"wl_buffer_events","","",null,null],[7,"wl_buffer_interface","","",null,null],[7,"wl_data_offer_requests","","",null,null],[7,"wl_data_offer_events","","",null,null],[7,"wl_data_offer_interface","","",null,null],[7,"wl_data_source_requests","","",null,null],[7,"wl_data_source_events","","",null,null],[7,"wl_data_source_interface","","",null,null],[7,"wl_data_device_requests","","",null,null],[7,"wl_data_device_events","","",null,null],[7,"wl_data_device_interface","","",null,null],[7,"wl_data_device_manager_requests","","",null,null],[7,"wl_data_device_manager_interface","","",null,null],[7,"wl_shell_requests","","",null,null],[7,"wl_shell_interface","","",null,null],[7,"wl_shell_surface_requests","","",null,null],[7,"wl_shell_surface_events","","",null,null],[7,"wl_shell_surface_interface","","",null,null],[7,"wl_surface_requests","","",null,null],[7,"wl_surface_events","","",null,null],[7,"wl_surface_interface","","",null,null],[7,"wl_seat_requests","","",null,null],[7,"wl_seat_events","","",null,null],[7,"wl_seat_interface","","",null,null],[7,"wl_pointer_requests","","",null,null],[7,"wl_pointer_events","","",null,null],[7,"wl_pointer_interface","","",null,null],[7,"wl_keyboard_requests","","",null,null],[7,"wl_keyboard_events","","",null,null],[7,"wl_keyboard_interface","","",null,null],[7,"wl_touch_requests","","",null,null],[7,"wl_touch_events","","",null,null],[7,"wl_touch_interface","","",null,null],[7,"wl_output_requests","","",null,null],[7,"wl_output_events","","",null,null],[7,"wl_output_interface","","",null,null],[7,"wl_region_requests","","",null,null],[7,"wl_region_interface","","",null,null],[7,"wl_subcompositor_requests","","",null,null],[7,"wl_subcompositor_interface","","",null,null],[7,"wl_subsurface_requests","","",null,null],[7,"wl_subsurface_interface","","",null,null],[11,"fmt","wayland_client","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"flush","wayland_client::protocol::wl_display","Non-blocking write to the server",39,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"create_event_queue","","Create a new EventQueue",39,{"inputs":[{"name":"self"}],"output":{"name":"eventqueue"}}],[11,"last_error","","Get the last error that occured on the session",39,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_fd","","Get the raw File Descriptor associated with the connection",39,{"inputs":[{"name":"self"}],"output":{"name":"rawfd"}}],[11,"disconnect","","Close the wayland connection",39,{"inputs":[{"name":"self"}],"output":null}],[11,"register","wayland_client","Register a proxy to this event queue.",40,null],[11,"state","","Get a handle to the internal state",40,{"inputs":[{"name":"self"}],"output":{"name":"state"}}],[11,"dispatch","","Dispatches events from the internal buffer.",41,{"inputs":[{"name":"self"}],"output":{"name":"ioresult"}}],[11,"dispatch_pending","","Dispatches pending events from the internal buffer.",41,{"inputs":[{"name":"self"}],"output":{"name":"ioresult"}}],[11,"sync_roundtrip","","Synchronous roundtrip",41,{"inputs":[{"name":"self"}],"output":{"name":"ioresult"}}],[11,"prepare_read","","Prepare an conccurent read",41,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"deref","","",41,{"inputs":[{"name":"self"}],"output":{"name":"eventqueuehandle"}}],[11,"deref_mut","","",41,{"inputs":[{"name":"self"}],"output":{"name":"eventqueuehandle"}}],[11,"read_events","","Read events",42,{"inputs":[{"name":"self"}],"output":{"name":"ioresult"}}],[11,"cancel","","Cancel the read",42,{"inputs":[{"name":"self"}],"output":null}],[11,"drop","","",42,{"inputs":[{"name":"self"}],"output":null}],[11,"init","","Insert a new EnvHandler in this event queue and register the registry to it",43,{"inputs":[{"name":"eventqueuehandle"},{"name":"wlregistry"}],"output":{"name":"statetoken"}}],[11,"init_with_notify","","Insert a new EnvHandler in this event queue with a notify implementation",43,{"inputs":[{"name":"eventqueuehandle"},{"name":"wlregistry"},{"name":"envnotify"},{"name":"id"}],"output":{"name":"statetoken"}}],[11,"ready","","Is the handler ready",43,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"globals","","List of advertised globals",43,null],[11,"clone_inner","","Retrieve an owned copy of the environment",43,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"deref","","",43,{"inputs":[{"name":"self"}],"output":{"name":"h"}}],[0,"egl","","EGL utilities",null,null],[3,"WlEglSurface","wayland_client::egl","EGL surface",null,null],[5,"is_available","","Checks if the wayland-egl lib is available and can be used",null,{"inputs":[],"output":{"name":"bool"}}],[11,"new","","Create an EGL surface from a wayland surface",44,{"inputs":[{"name":"wlsurface"},{"name":"i32"},{"name":"i32"}],"output":{"name":"wleglsurface"}}],[11,"new_from_raw","","Create an EGL surface from a raw pointer to a wayland surface",44,null],[11,"get_size","","Fetch current size of the EGL surface",44,null],[11,"resize","","Resize the EGL surface",44,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"ptr","","Raw pointer to the EGL surface",44,null],[11,"drop","","",44,{"inputs":[{"name":"self"}],"output":null}],[0,"cursor","wayland_client","Cursor utilities",null,null],[3,"CursorTheme","wayland_client::cursor","Represents a cursor theme loaded from the system.",null,null],[3,"Cursor","","A cursor from a theme. Can contain several images if animated.",null,null],[3,"CursorImageBuffer","","A buffer containing a cursor image.",null,null],[5,"is_available","","Checks if the wayland-cursor lib is available and can be used",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_theme","","Attempts to load a cursor theme from given name.",null,{"inputs":[{"name":"option"},{"name":"u32"},{"name":"wlshm"}],"output":{"name":"cursortheme"}}],[11,"get_cursor","","Retrieve a cursor from the theme.",45,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[11,"drop","","",45,{"inputs":[{"name":"self"}],"output":null}],[11,"name","","Retrieve the name of this cursor.",46,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"image_count","","Retrieve the number of images contained in this animated cursor",46,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"frame","","Retrieve the image number of cursor animation.",46,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"usize"}}],[11,"frame_and_duration","","Retrieve the image number and its duration.",46,null],[11,"frame_buffer","","Retrieve a `CursorImageBuffer` containing the given image of an animation.",46,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"option"}}],[11,"frame_info","","Retrive the metadate associated with given frame of the animation.",46,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"option"}}],[11,"deref","","",47,{"inputs":[{"name":"self"}],"output":{"name":"wlbuffer"}}],[11,"ptr","wayland_client::protocol::wl_display","",39,null],[11,"from_ptr_new","","",39,null],[11,"from_ptr_initialized","","",39,null],[11,"interface_ptr","","",39,null],[11,"interface_name","","",39,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",39,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",39,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",39,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",39,{"inputs":[{"name":"self"},{"name":"wldisplay"}],"output":{"name":"bool"}}],[11,"set_user_data","","",39,null],[11,"get_user_data","","",39,null],[11,"clone_unchecked","","",39,{"inputs":[{"name":"self"}],"output":{"name":"wldisplay"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",6,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",6,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",6,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"sync","","asynchronous roundtrip",39,{"inputs":[{"name":"self"}],"output":{"name":"wlcallback"}}],[11,"get_registry","","get global registry object",39,{"inputs":[{"name":"self"}],"output":{"name":"wlregistry"}}],[11,"ptr","wayland_client::protocol::wl_registry","",48,null],[11,"from_ptr_new","","",48,null],[11,"from_ptr_initialized","","",48,null],[11,"interface_ptr","","",48,null],[11,"interface_name","","",48,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",48,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",48,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",48,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",48,{"inputs":[{"name":"self"},{"name":"wlregistry"}],"output":{"name":"bool"}}],[11,"set_user_data","","",48,null],[11,"get_user_data","","",48,null],[11,"clone_unchecked","","",48,{"inputs":[{"name":"self"}],"output":{"name":"wlregistry"}}],[11,"__dispatch_msg","","",48,null],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",7,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"bind","","bind an object to the display",48,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"}],"output":{"name":"t"}}],[11,"ptr","wayland_client::protocol::wl_callback","",49,null],[11,"from_ptr_new","","",49,null],[11,"from_ptr_initialized","","",49,null],[11,"interface_ptr","","",49,null],[11,"interface_name","","",49,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",49,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",49,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",49,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",49,{"inputs":[{"name":"self"},{"name":"wlcallback"}],"output":{"name":"bool"}}],[11,"set_user_data","","",49,null],[11,"get_user_data","","",49,null],[11,"clone_unchecked","","",49,{"inputs":[{"name":"self"}],"output":{"name":"wlcallback"}}],[11,"__dispatch_msg","","",49,null],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",8,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"ptr","wayland_client::protocol::wl_compositor","",50,null],[11,"from_ptr_new","","",50,null],[11,"from_ptr_initialized","","",50,null],[11,"interface_ptr","","",50,null],[11,"interface_name","","",50,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",50,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",50,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",50,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",50,{"inputs":[{"name":"self"},{"name":"wlcompositor"}],"output":{"name":"bool"}}],[11,"set_user_data","","",50,null],[11,"get_user_data","","",50,null],[11,"clone_unchecked","","",50,{"inputs":[{"name":"self"}],"output":{"name":"wlcompositor"}}],[11,"create_surface","","create new surface",50,{"inputs":[{"name":"self"}],"output":{"name":"wlsurface"}}],[11,"create_region","","create new region",50,{"inputs":[{"name":"self"}],"output":{"name":"wlregion"}}],[11,"ptr","wayland_client::protocol::wl_shm_pool","",51,null],[11,"from_ptr_new","","",51,null],[11,"from_ptr_initialized","","",51,null],[11,"interface_ptr","","",51,null],[11,"interface_name","","",51,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",51,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",51,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",51,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",51,{"inputs":[{"name":"self"},{"name":"wlshmpool"}],"output":{"name":"bool"}}],[11,"set_user_data","","",51,null],[11,"get_user_data","","",51,null],[11,"clone_unchecked","","",51,{"inputs":[{"name":"self"}],"output":{"name":"wlshmpool"}}],[11,"create_buffer","","create a buffer from the pool",51,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"format"}],"output":{"name":"requestresult"}}],[11,"destroy","","destroy the pool",51,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"resize","","change the size of the pool mapping",51,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_client::protocol::wl_shm","",52,null],[11,"from_ptr_new","","",52,null],[11,"from_ptr_initialized","","",52,null],[11,"interface_ptr","","",52,null],[11,"interface_name","","",52,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",52,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",52,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",52,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",52,{"inputs":[{"name":"self"},{"name":"wlshm"}],"output":{"name":"bool"}}],[11,"set_user_data","","",52,null],[11,"get_user_data","","",52,null],[11,"clone_unchecked","","",52,{"inputs":[{"name":"self"}],"output":{"name":"wlshm"}}],[11,"__dispatch_msg","","",52,null],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",10,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",10,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",10,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"format"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",11,{"inputs":[{"name":"self"},{"name":"format"}],"output":{"name":"bool"}}],[11,"from_raw","","",11,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",11,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",9,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"create_pool","","create a shm pool",52,{"inputs":[{"name":"self"},{"name":"rawfd"},{"name":"i32"}],"output":{"name":"wlshmpool"}}],[11,"ptr","wayland_client::protocol::wl_buffer","",53,null],[11,"from_ptr_new","","",53,null],[11,"from_ptr_initialized","","",53,null],[11,"interface_ptr","","",53,null],[11,"interface_name","","",53,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",53,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",53,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",53,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",53,{"inputs":[{"name":"self"},{"name":"wlbuffer"}],"output":{"name":"bool"}}],[11,"set_user_data","","",53,null],[11,"get_user_data","","",53,null],[11,"clone_unchecked","","",53,{"inputs":[{"name":"self"}],"output":{"name":"wlbuffer"}}],[11,"__dispatch_msg","","",53,null],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",12,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"destroy","","destroy a buffer",53,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_client::protocol::wl_data_offer","",54,null],[11,"from_ptr_new","","",54,null],[11,"from_ptr_initialized","","",54,null],[11,"interface_ptr","","",54,null],[11,"interface_name","","",54,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",54,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",54,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",54,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",54,{"inputs":[{"name":"self"},{"name":"wldataoffer"}],"output":{"name":"bool"}}],[11,"set_user_data","","",54,null],[11,"get_user_data","","",54,null],[11,"clone_unchecked","","",54,{"inputs":[{"name":"self"}],"output":{"name":"wldataoffer"}}],[11,"__dispatch_msg","","",54,null],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",14,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",14,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",14,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",13,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"accept","","accept one of the offered mime types",54,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"option"}],"output":{"name":"requestresult"}}],[11,"receive","","request that the data is transferred",54,{"inputs":[{"name":"self"},{"name":"string"},{"name":"rawfd"}],"output":{"name":"requestresult"}}],[11,"destroy","","destroy data offer",54,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"finish","","the offer will no longer be used",54,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"set_actions","","set the available/preferred drag-and-drop actions",54,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_client::protocol::wl_data_source","",55,null],[11,"from_ptr_new","","",55,null],[11,"from_ptr_initialized","","",55,null],[11,"interface_ptr","","",55,null],[11,"interface_name","","",55,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",55,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",55,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",55,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",55,{"inputs":[{"name":"self"},{"name":"wldatasource"}],"output":{"name":"bool"}}],[11,"set_user_data","","",55,null],[11,"get_user_data","","",55,null],[11,"clone_unchecked","","",55,{"inputs":[{"name":"self"}],"output":{"name":"wldatasource"}}],[11,"__dispatch_msg","","",55,null],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",16,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",16,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",16,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",15,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"offer","","add an offered mime type",55,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"requestresult"}}],[11,"destroy","","destroy the data source",55,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"set_actions","","set the available drag-and-drop actions",55,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_client::protocol::wl_data_device","",56,null],[11,"from_ptr_new","","",56,null],[11,"from_ptr_initialized","","",56,null],[11,"interface_ptr","","",56,null],[11,"interface_name","","",56,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",56,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",56,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",56,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",56,{"inputs":[{"name":"self"},{"name":"wldatadevice"}],"output":{"name":"bool"}}],[11,"set_user_data","","",56,null],[11,"get_user_data","","",56,null],[11,"clone_unchecked","","",56,{"inputs":[{"name":"self"}],"output":{"name":"wldatadevice"}}],[11,"__dispatch_msg","","",56,null],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",18,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",18,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",18,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",17,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",17,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"start_drag","","start drag-and-drop operation",56,{"inputs":[{"name":"self"},{"name":"option"},{"name":"wlsurface"},{"name":"option"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"set_selection","","copy data to the selection",56,{"inputs":[{"name":"self"},{"name":"option"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"release","","destroy data device",56,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_client::protocol::wl_data_device_manager","",57,null],[11,"from_ptr_new","","",57,null],[11,"from_ptr_initialized","","",57,null],[11,"interface_ptr","","",57,null],[11,"interface_name","","",57,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",57,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",57,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",57,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",57,{"inputs":[{"name":"self"},{"name":"wldatadevicemanager"}],"output":{"name":"bool"}}],[11,"set_user_data","","",57,null],[11,"get_user_data","","",57,null],[11,"clone_unchecked","","",57,{"inputs":[{"name":"self"}],"output":{"name":"wldatadevicemanager"}}],[11,"eq","","",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"bool"}}],[11,"ne","","",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"bool"}}],[11,"clone","","",58,{"inputs":[{"name":"self"}],"output":{"name":"dndaction"}}],[11,"partial_cmp","","",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"option"}}],[11,"lt","","",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"bool"}}],[11,"le","","",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"bool"}}],[11,"gt","","",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"bool"}}],[11,"ge","","",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"bool"}}],[11,"cmp","","",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"ordering"}}],[11,"hash","","",58,null],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[18,"None","","no action",58,null],[18,"Copy","","copy action",58,null],[18,"Move","","move action",58,null],[18,"Ask","","ask action",58,null],[11,"empty","","Returns an empty set of flags.",58,{"inputs":[],"output":{"name":"dndaction"}}],[11,"all","","Returns the set containing all flags.",58,{"inputs":[],"output":{"name":"dndaction"}}],[11,"bits","","Returns the raw value of the flags currently stored.",58,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",58,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",58,{"inputs":[{"name":"u32"}],"output":{"name":"dndaction"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",58,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",58,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",58,{"inputs":[{"name":"self"},{"name":"dndaction"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"dndaction"}}],[11,"bitor_assign","","Adds the set of flags.",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"dndaction"}}],[11,"bitxor_assign","","Toggles the set of flags.",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"dndaction"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"dndaction"}}],[11,"sub_assign","","Disables all flags enabled in the set.",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",58,{"inputs":[{"name":"self"}],"output":{"name":"dndaction"}}],[11,"extend","","",58,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",58,{"inputs":[{"name":"t"}],"output":{"name":"dndaction"}}],[11,"from_raw","","",58,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",58,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"create_data_source","","create a new data source",57,{"inputs":[{"name":"self"}],"output":{"name":"wldatasource"}}],[11,"get_data_device","","create a new data device",57,{"inputs":[{"name":"self"},{"name":"wlseat"}],"output":{"name":"wldatadevice"}}],[11,"ptr","wayland_client::protocol::wl_shell","",59,null],[11,"from_ptr_new","","",59,null],[11,"from_ptr_initialized","","",59,null],[11,"interface_ptr","","",59,null],[11,"interface_name","","",59,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",59,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",59,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",59,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",59,{"inputs":[{"name":"self"},{"name":"wlshell"}],"output":{"name":"bool"}}],[11,"set_user_data","","",59,null],[11,"get_user_data","","",59,null],[11,"clone_unchecked","","",59,{"inputs":[{"name":"self"}],"output":{"name":"wlshell"}}],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",19,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",19,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",19,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_shell_surface","","create a shell surface from a surface",59,{"inputs":[{"name":"self"},{"name":"wlsurface"}],"output":{"name":"wlshellsurface"}}],[11,"ptr","wayland_client::protocol::wl_shell_surface","",60,null],[11,"from_ptr_new","","",60,null],[11,"from_ptr_initialized","","",60,null],[11,"interface_ptr","","",60,null],[11,"interface_name","","",60,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",60,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",60,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",60,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",60,{"inputs":[{"name":"self"},{"name":"wlshellsurface"}],"output":{"name":"bool"}}],[11,"set_user_data","","",60,null],[11,"get_user_data","","",60,null],[11,"clone_unchecked","","",60,{"inputs":[{"name":"self"}],"output":{"name":"wlshellsurface"}}],[11,"__dispatch_msg","","",60,null],[11,"eq","","",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"bool"}}],[11,"ne","","",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"bool"}}],[11,"clone","","",61,{"inputs":[{"name":"self"}],"output":{"name":"resize"}}],[11,"partial_cmp","","",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"option"}}],[11,"lt","","",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"bool"}}],[11,"le","","",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"bool"}}],[11,"gt","","",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"bool"}}],[11,"ge","","",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"bool"}}],[11,"cmp","","",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"ordering"}}],[11,"hash","","",61,null],[11,"fmt","","",61,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",61,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",61,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",61,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",61,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[18,"None","","no edge",61,null],[18,"Top","","top edge",61,null],[18,"Bottom","","bottom edge",61,null],[18,"Left","","left edge",61,null],[18,"TopLeft","","top and left edges",61,null],[18,"BottomLeft","","bottom and left edges",61,null],[18,"Right","","right edge",61,null],[18,"TopRight","","top and right edges",61,null],[18,"BottomRight","","bottom and right edges",61,null],[11,"empty","","Returns an empty set of flags.",61,{"inputs":[],"output":{"name":"resize"}}],[11,"all","","Returns the set containing all flags.",61,{"inputs":[],"output":{"name":"resize"}}],[11,"bits","","Returns the raw value of the flags currently stored.",61,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",61,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",61,{"inputs":[{"name":"u32"}],"output":{"name":"resize"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",61,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",61,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",61,{"inputs":[{"name":"self"},{"name":"resize"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"resize"}}],[11,"bitor_assign","","Adds the set of flags.",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"resize"}}],[11,"bitxor_assign","","Toggles the set of flags.",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"resize"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"resize"}}],[11,"sub_assign","","Disables all flags enabled in the set.",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",61,{"inputs":[{"name":"self"}],"output":{"name":"resize"}}],[11,"extend","","",61,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",61,{"inputs":[{"name":"t"}],"output":{"name":"resize"}}],[11,"from_raw","","",61,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",61,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"eq","","",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"bool"}}],[11,"ne","","",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"bool"}}],[11,"clone","","",62,{"inputs":[{"name":"self"}],"output":{"name":"transient"}}],[11,"partial_cmp","","",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"option"}}],[11,"lt","","",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"bool"}}],[11,"le","","",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"bool"}}],[11,"gt","","",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"bool"}}],[11,"ge","","",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"bool"}}],[11,"cmp","","",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"ordering"}}],[11,"hash","","",62,null],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[18,"Inactive","","do not set keyboard focus",62,null],[11,"empty","","Returns an empty set of flags.",62,{"inputs":[],"output":{"name":"transient"}}],[11,"all","","Returns the set containing all flags.",62,{"inputs":[],"output":{"name":"transient"}}],[11,"bits","","Returns the raw value of the flags currently stored.",62,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",62,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",62,{"inputs":[{"name":"u32"}],"output":{"name":"transient"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",62,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",62,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",62,{"inputs":[{"name":"self"},{"name":"transient"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"transient"}}],[11,"bitor_assign","","Adds the set of flags.",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"transient"}}],[11,"bitxor_assign","","Toggles the set of flags.",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"transient"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"transient"}}],[11,"sub_assign","","Disables all flags enabled in the set.",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",62,{"inputs":[{"name":"self"}],"output":{"name":"transient"}}],[11,"extend","","",62,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",62,{"inputs":[{"name":"t"}],"output":{"name":"transient"}}],[11,"from_raw","","",62,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",62,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",21,{"inputs":[{"name":"self"}],"output":{"name":"fullscreenmethod"}}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",21,{"inputs":[{"name":"self"},{"name":"fullscreenmethod"}],"output":{"name":"bool"}}],[11,"from_raw","","",21,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",21,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",20,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"pong","","respond to a ping event",60,null],[11,"_move","","start an interactive move",60,null],[11,"resize","","start an interactive resize",60,null],[11,"set_toplevel","","make the surface a toplevel surface",60,null],[11,"set_transient","","make the surface a transient surface",60,null],[11,"set_fullscreen","","make the surface a fullscreen surface",60,null],[11,"set_popup","","make the surface a popup surface",60,null],[11,"set_maximized","","make the surface a maximized surface",60,null],[11,"set_title","","set surface title",60,null],[11,"set_class","","set surface class",60,null],[11,"ptr","wayland_client::protocol::wl_surface","",63,null],[11,"from_ptr_new","","",63,null],[11,"from_ptr_initialized","","",63,null],[11,"interface_ptr","","",63,null],[11,"interface_name","","",63,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",63,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",63,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",63,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",63,{"inputs":[{"name":"self"},{"name":"wlsurface"}],"output":{"name":"bool"}}],[11,"set_user_data","","",63,null],[11,"get_user_data","","",63,null],[11,"clone_unchecked","","",63,{"inputs":[{"name":"self"}],"output":{"name":"wlsurface"}}],[11,"__dispatch_msg","","",63,null],[11,"clone","","",23,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",23,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",23,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",23,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",22,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",22,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"destroy","","delete surface",63,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"attach","","set the surface contents",63,{"inputs":[{"name":"self"},{"name":"option"},{"name":"i32"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"damage","","mark part of the surface damaged",63,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"frame","","request a frame throttling hint",63,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"set_opaque_region","","set opaque region",63,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"requestresult"}}],[11,"set_input_region","","set input region",63,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"requestresult"}}],[11,"commit","","commit pending surface state",63,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"set_buffer_transform","","sets the buffer transformation",63,{"inputs":[{"name":"self"},{"name":"transform"}],"output":{"name":"requestresult"}}],[11,"set_buffer_scale","","sets the buffer scaling factor",63,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"damage_buffer","","mark part of the surface damaged using buffer coordinates",63,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_client::protocol::wl_seat","",64,null],[11,"from_ptr_new","","",64,null],[11,"from_ptr_initialized","","",64,null],[11,"interface_ptr","","",64,null],[11,"interface_name","","",64,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",64,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",64,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",64,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",64,{"inputs":[{"name":"self"},{"name":"wlseat"}],"output":{"name":"bool"}}],[11,"set_user_data","","",64,null],[11,"get_user_data","","",64,null],[11,"clone_unchecked","","",64,{"inputs":[{"name":"self"}],"output":{"name":"wlseat"}}],[11,"__dispatch_msg","","",64,null],[11,"eq","","",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"ne","","",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"clone","","",65,{"inputs":[{"name":"self"}],"output":{"name":"capability"}}],[11,"partial_cmp","","",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"option"}}],[11,"lt","","",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"le","","",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"gt","","",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"ge","","",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"cmp","","",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"ordering"}}],[11,"hash","","",65,null],[11,"fmt","","",65,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",65,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",65,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",65,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",65,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[18,"Pointer","","the seat has pointer devices",65,null],[18,"Keyboard","","the seat has one or more keyboards",65,null],[18,"Touch","","the seat has touch devices",65,null],[11,"empty","","Returns an empty set of flags.",65,{"inputs":[],"output":{"name":"capability"}}],[11,"all","","Returns the set containing all flags.",65,{"inputs":[],"output":{"name":"capability"}}],[11,"bits","","Returns the raw value of the flags currently stored.",65,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",65,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",65,{"inputs":[{"name":"u32"}],"output":{"name":"capability"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",65,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",65,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",65,{"inputs":[{"name":"self"},{"name":"capability"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"capability"}}],[11,"bitor_assign","","Adds the set of flags.",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"capability"}}],[11,"bitxor_assign","","Toggles the set of flags.",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"capability"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"capability"}}],[11,"sub_assign","","Disables all flags enabled in the set.",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",65,{"inputs":[{"name":"self"}],"output":{"name":"capability"}}],[11,"extend","","",65,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",65,{"inputs":[{"name":"t"}],"output":{"name":"capability"}}],[11,"from_raw","","",65,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",65,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",24,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",24,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"get_pointer","","return pointer object",64,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"get_keyboard","","return keyboard object",64,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"get_touch","","return touch object",64,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"release","","release the seat object",64,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_client::protocol::wl_pointer","",66,null],[11,"from_ptr_new","","",66,null],[11,"from_ptr_initialized","","",66,null],[11,"interface_ptr","","",66,null],[11,"interface_name","","",66,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",66,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",66,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",66,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",66,{"inputs":[{"name":"self"},{"name":"wlpointer"}],"output":{"name":"bool"}}],[11,"set_user_data","","",66,null],[11,"get_user_data","","",66,null],[11,"clone_unchecked","","",66,{"inputs":[{"name":"self"}],"output":{"name":"wlpointer"}}],[11,"__dispatch_msg","","",66,null],[11,"clone","","",26,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",26,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",26,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",26,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",27,{"inputs":[{"name":"self"}],"output":{"name":"buttonstate"}}],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",27,{"inputs":[{"name":"self"},{"name":"buttonstate"}],"output":{"name":"bool"}}],[11,"from_raw","","",27,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",27,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",28,{"inputs":[{"name":"self"}],"output":{"name":"axis"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",28,{"inputs":[{"name":"self"},{"name":"axis"}],"output":{"name":"bool"}}],[11,"from_raw","","",28,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",28,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",29,{"inputs":[{"name":"self"}],"output":{"name":"axissource"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",29,{"inputs":[{"name":"self"},{"name":"axissource"}],"output":{"name":"bool"}}],[11,"from_raw","","",29,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",29,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",25,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",25,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"set_cursor","","set the pointer surface",66,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"option"},{"name":"i32"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"release","","release the pointer object",66,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_client::protocol::wl_keyboard","",67,null],[11,"from_ptr_new","","",67,null],[11,"from_ptr_initialized","","",67,null],[11,"interface_ptr","","",67,null],[11,"interface_name","","",67,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",67,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",67,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",67,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",67,{"inputs":[{"name":"self"},{"name":"wlkeyboard"}],"output":{"name":"bool"}}],[11,"set_user_data","","",67,null],[11,"get_user_data","","",67,null],[11,"clone_unchecked","","",67,{"inputs":[{"name":"self"}],"output":{"name":"wlkeyboard"}}],[11,"__dispatch_msg","","",67,null],[11,"clone","","",31,{"inputs":[{"name":"self"}],"output":{"name":"keymapformat"}}],[11,"fmt","","",31,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",31,{"inputs":[{"name":"self"},{"name":"keymapformat"}],"output":{"name":"bool"}}],[11,"from_raw","","",31,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",31,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",32,{"inputs":[{"name":"self"}],"output":{"name":"keystate"}}],[11,"fmt","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",32,{"inputs":[{"name":"self"},{"name":"keystate"}],"output":{"name":"bool"}}],[11,"from_raw","","",32,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",32,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",30,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",30,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"release","","release the keyboard object",67,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_client::protocol::wl_touch","",68,null],[11,"from_ptr_new","","",68,null],[11,"from_ptr_initialized","","",68,null],[11,"interface_ptr","","",68,null],[11,"interface_name","","",68,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",68,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",68,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",68,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",68,{"inputs":[{"name":"self"},{"name":"wltouch"}],"output":{"name":"bool"}}],[11,"set_user_data","","",68,null],[11,"get_user_data","","",68,null],[11,"clone_unchecked","","",68,{"inputs":[{"name":"self"}],"output":{"name":"wltouch"}}],[11,"__dispatch_msg","","",68,null],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",33,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"release","","release the touch object",68,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_client::protocol::wl_output","",69,null],[11,"from_ptr_new","","",69,null],[11,"from_ptr_initialized","","",69,null],[11,"interface_ptr","","",69,null],[11,"interface_name","","",69,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",69,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",69,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",69,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",69,{"inputs":[{"name":"self"},{"name":"wloutput"}],"output":{"name":"bool"}}],[11,"set_user_data","","",69,null],[11,"get_user_data","","",69,null],[11,"clone_unchecked","","",69,{"inputs":[{"name":"self"}],"output":{"name":"wloutput"}}],[11,"__dispatch_msg","","",69,null],[11,"clone","","",35,{"inputs":[{"name":"self"}],"output":{"name":"subpixel"}}],[11,"fmt","","",35,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",35,{"inputs":[{"name":"self"},{"name":"subpixel"}],"output":{"name":"bool"}}],[11,"from_raw","","",35,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",35,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",36,{"inputs":[{"name":"self"}],"output":{"name":"transform"}}],[11,"fmt","","",36,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",36,{"inputs":[{"name":"self"},{"name":"transform"}],"output":{"name":"bool"}}],[11,"from_raw","","",36,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",36,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"eq","","",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"ne","","",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"clone","","",70,{"inputs":[{"name":"self"}],"output":{"name":"mode"}}],[11,"partial_cmp","","",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"option"}}],[11,"lt","","",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"le","","",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"gt","","",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"ge","","",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"cmp","","",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"ordering"}}],[11,"hash","","",70,null],[11,"fmt","","",70,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",70,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",70,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",70,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",70,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[18,"Current","","indicates this is the current mode",70,null],[18,"Preferred","","indicates this is the preferred mode",70,null],[11,"empty","","Returns an empty set of flags.",70,{"inputs":[],"output":{"name":"mode"}}],[11,"all","","Returns the set containing all flags.",70,{"inputs":[],"output":{"name":"mode"}}],[11,"bits","","Returns the raw value of the flags currently stored.",70,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",70,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",70,{"inputs":[{"name":"u32"}],"output":{"name":"mode"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",70,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",70,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",70,{"inputs":[{"name":"self"},{"name":"mode"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"mode"}}],[11,"bitor_assign","","Adds the set of flags.",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"mode"}}],[11,"bitxor_assign","","Toggles the set of flags.",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"mode"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"mode"}}],[11,"sub_assign","","Disables all flags enabled in the set.",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",70,{"inputs":[{"name":"self"}],"output":{"name":"mode"}}],[11,"extend","","",70,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",70,{"inputs":[{"name":"t"}],"output":{"name":"mode"}}],[11,"from_raw","","",70,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",70,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",34,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",34,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"release","","release the output object",69,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_client::protocol::wl_region","",71,null],[11,"from_ptr_new","","",71,null],[11,"from_ptr_initialized","","",71,null],[11,"interface_ptr","","",71,null],[11,"interface_name","","",71,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",71,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",71,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",71,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",71,{"inputs":[{"name":"self"},{"name":"wlregion"}],"output":{"name":"bool"}}],[11,"set_user_data","","",71,null],[11,"get_user_data","","",71,null],[11,"clone_unchecked","","",71,{"inputs":[{"name":"self"}],"output":{"name":"wlregion"}}],[11,"destroy","","destroy region",71,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"add","","add rectangle to region",71,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"subtract","","subtract rectangle from region",71,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_client::protocol::wl_subcompositor","",72,null],[11,"from_ptr_new","","",72,null],[11,"from_ptr_initialized","","",72,null],[11,"interface_ptr","","",72,null],[11,"interface_name","","",72,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",72,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",72,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",72,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",72,{"inputs":[{"name":"self"},{"name":"wlsubcompositor"}],"output":{"name":"bool"}}],[11,"set_user_data","","",72,null],[11,"get_user_data","","",72,null],[11,"clone_unchecked","","",72,{"inputs":[{"name":"self"}],"output":{"name":"wlsubcompositor"}}],[11,"clone","","",37,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",37,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",37,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",37,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",37,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"destroy","","unbind from the subcompositor interface",72,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"get_subsurface","","give a surface the role sub-surface",72,{"inputs":[{"name":"self"},{"name":"wlsurface"},{"name":"wlsurface"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_client::protocol::wl_subsurface","",73,null],[11,"from_ptr_new","","",73,null],[11,"from_ptr_initialized","","",73,null],[11,"interface_ptr","","",73,null],[11,"interface_name","","",73,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",73,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",73,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",73,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",73,{"inputs":[{"name":"self"},{"name":"wlsubsurface"}],"output":{"name":"bool"}}],[11,"set_user_data","","",73,null],[11,"get_user_data","","",73,null],[11,"clone_unchecked","","",73,{"inputs":[{"name":"self"}],"output":{"name":"wlsubsurface"}}],[11,"clone","","",38,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",38,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",38,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",38,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",38,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"destroy","","remove sub-surface interface",73,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"set_position","","reposition the sub-surface",73,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"place_above","","restack the sub-surface",73,{"inputs":[{"name":"self"},{"name":"wlsurface"}],"output":{"name":"requestresult"}}],[11,"place_below","","restack the sub-surface",73,{"inputs":[{"name":"self"},{"name":"wlsurface"}],"output":{"name":"requestresult"}}],[11,"set_sync","","set sub-surface to synchronized mode",73,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"set_desync","","set sub-surface to desynchronized mode",73,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[0,"sys","wayland_client","Reexports of types and objects from wayland-sys",null,null],[8,"Proxy","","Common routines for wayland proxy objects.",null,null],[10,"ptr","","Pointer to the underlying wayland proxy object",74,null],[10,"from_ptr_new","","Create an instance from a wayland pointer",74,null],[10,"from_ptr_initialized","","Create an instance from a wayland pointer",74,null],[10,"interface_ptr","","Pointer to the interface representation",74,null],[10,"interface_name","","Internal wayland name of this interface",74,{"inputs":[],"output":{"name":"str"}}],[10,"supported_version","","Max version of this interface supported",74,{"inputs":[],"output":{"name":"u32"}}],[10,"version","","Current version of the interface this proxy is instantiated with",74,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"status","","Check if the proxy behind this handle is actually still alive",74,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[10,"equals","","Check of two handles are actually the same wayland object",74,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[10,"set_user_data","","Set a pointer associated as user data on this proxy",74,null],[10,"get_user_data","","Get the pointer associated as user data on this proxy",74,null],[11,"clone","","Clone this proxy handle",74,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"clone_unchecked","","Unsafely clone this proxy handle",74,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[8,"Implementable","","Common trait for wayland objects that can be registered to an EventQueue",null,null],[16,"Implementation","","The type containing the implementation for the event callbacks",75,null],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"expect","","Assert that result is successfull and extract the value.",4,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"t"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"liveness"}],"output":{"name":"bool"}}],[14,"wayland_env","","Create an environment handling struct",null,null],[11,"new","","Create a new store",76,{"inputs":[],"output":{"name":"store"}}],[11,"insert","","Insert a new value in this store",76,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"token"}}],[11,"get","","Access value previously inserted in this store",76,{"inputs":[{"name":"self"},{"name":"token"}],"output":{"name":"v"}}],[11,"get_mut","","Mutably access value previously inserted in this store",76,{"inputs":[{"name":"self"},{"name":"token"}],"output":{"name":"v"}}],[11,"remove","","Remove a value previously inserted in this store",76,{"inputs":[{"name":"self"},{"name":"token"}],"output":{"name":"v"}}],[11,"with_value","","Create a sub-scope with access to a value",76,{"inputs":[{"name":"self"},{"name":"token"},{"name":"f"}],"output":{"name":"t"}}],[11,"as_proxy","","See this `Store` as a `StoreProxy` with no ongoing borrow",76,{"inputs":[{"name":"self"}],"output":{"name":"storeproxy"}}],[11,"from","","",77,{"inputs":[{"name":"store"}],"output":{"name":"storeproxy"}}],[11,"from","","",77,{"inputs":[{"name":"storeproxy"}],"output":{"name":"storeproxy"}}],[11,"clone","","",78,{"inputs":[{"name":"self"}],"output":{"name":"token"}}],[11,"insert","","Insert a new value in the proxified store",77,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"token"}}],[11,"get","","Access value previously inserted in the proxified store",77,{"inputs":[{"name":"self"},{"name":"token"}],"output":{"name":"v"}}],[11,"get_mut","","Mutably access value previously inserted in the proxified store",77,{"inputs":[{"name":"self"},{"name":"token"}],"output":{"name":"v"}}],[11,"remove","","Remove a value previously inserted in the proxified store",77,{"inputs":[{"name":"self"},{"name":"token"}],"output":{"name":"v"}}],[11,"with_value","","Create a sub-scope with access to a value",77,{"inputs":[{"name":"self"},{"name":"token"},{"name":"f"}],"output":{"name":"t"}}],[11,"valid","","Check wether this token is still valid",78,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}]],"paths":[[3,"EnvNotify"],[4,"ConnectError"],[4,"FatalError"],[4,"RegisterStatus"],[4,"RequestResult"],[4,"Liveness"],[4,"Error"],[3,"Implementation"],[3,"Implementation"],[3,"Implementation"],[4,"Error"],[4,"Format"],[3,"Implementation"],[3,"Implementation"],[4,"Error"],[3,"Implementation"],[4,"Error"],[3,"Implementation"],[4,"Error"],[4,"Error"],[3,"Implementation"],[4,"FullscreenMethod"],[3,"Implementation"],[4,"Error"],[3,"Implementation"],[3,"Implementation"],[4,"Error"],[4,"ButtonState"],[4,"Axis"],[4,"AxisSource"],[3,"Implementation"],[4,"KeymapFormat"],[4,"KeyState"],[3,"Implementation"],[3,"Implementation"],[4,"Subpixel"],[4,"Transform"],[4,"Error"],[4,"Error"],[3,"WlDisplay"],[3,"EventQueueHandle"],[3,"EventQueue"],[3,"ReadEventsGuard"],[3,"EnvHandler"],[3,"WlEglSurface"],[3,"CursorTheme"],[3,"Cursor"],[3,"CursorImageBuffer"],[3,"WlRegistry"],[3,"WlCallback"],[3,"WlCompositor"],[3,"WlShmPool"],[3,"WlShm"],[3,"WlBuffer"],[3,"WlDataOffer"],[3,"WlDataSource"],[3,"WlDataDevice"],[3,"WlDataDeviceManager"],[3,"DndAction"],[3,"WlShell"],[3,"WlShellSurface"],[3,"Resize"],[3,"Transient"],[3,"WlSurface"],[3,"WlSeat"],[3,"Capability"],[3,"WlPointer"],[3,"WlKeyboard"],[3,"WlTouch"],[3,"WlOutput"],[3,"Mode"],[3,"WlRegion"],[3,"WlSubcompositor"],[3,"WlSubsurface"],[8,"Proxy"],[8,"Implementable"],[3,"State"],[3,"StateProxy"],[3,"StateToken"]]};
searchIndex["wayland_protocols"] = {"doc":"This crate provides bindings to the official wayland protocol extensions provided in https://cgit.freedesktop.org/wayland/wayland-protocols","items":[[0,"wall","wayland_protocols","Protocols from the wayland-wall repository",null,null],[0,"unstable","wayland_protocols::wall","This module hosts the unstable wayland-wall protocols",null,null],[0,"background","wayland_protocols::wall::unstable","This protocol will allow clients to display a surface as your screen background",null,null],[0,"v1","wayland_protocols::wall::unstable::background","",null,null],[0,"client","wayland_protocols::wall::unstable::background::v1","Client-side API of this protocol",null,null],[0,"zww_background_v1","wayland_protocols::wall::unstable::background::v1::client","singleton for background management",null,null],[3,"ZwwBackgroundV1","wayland_protocols::wall::unstable::background::v1::client::zww_background_v1","",null,null],[4,"Error","","ww_background error values",null,null],[13,"Bound","","ww_background is already bound",0,null],[13,"Role","","given wl_surface has another role",0,null],[4,"FitMethod","","ww_background fit method values",null,null],[13,"Default","","the compositor will use its own default",1,null],[13,"Crop","","the surface will be cropped",1,null],[13,"Scale","","the surface will be scaled",1,null],[0,"server","wayland_protocols::wall::unstable::background::v1","Server-side API of this protocol",null,null],[0,"zww_background_v1","wayland_protocols::wall::unstable::background::v1::server","singleton for background management",null,null],[3,"ZwwBackgroundV1","wayland_protocols::wall::unstable::background::v1::server::zww_background_v1","",null,null],[3,"Implementation","","",null,null],[12,"destroy","","",2,null],[12,"set_background","","sets the wl_surface as the wl_output background",2,null],[4,"Error","","ww_background error values",null,null],[13,"Bound","","ww_background is already bound",3,null],[13,"Role","","given wl_surface has another role",3,null],[4,"FitMethod","","ww_background fit method values",null,null],[13,"Default","","the compositor will use its own default",4,null],[13,"Crop","","the surface will be cropped",4,null],[13,"Scale","","the surface will be scaled",4,null],[11,"ptr","wayland_protocols::wall::unstable::background::v1::client::zww_background_v1","",5,null],[11,"from_ptr_new","","",5,null],[11,"from_ptr_initialized","","",5,null],[11,"interface_ptr","","",5,null],[11,"interface_name","","",5,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",5,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",5,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",5,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",5,{"inputs":[{"name":"self"},{"name":"zwwbackgroundv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",5,null],[11,"get_user_data","","",5,null],[11,"clone_unchecked","","",5,{"inputs":[{"name":"self"}],"output":{"name":"zwwbackgroundv1"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",0,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",0,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"fitmethod"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"fitmethod"}],"output":{"name":"bool"}}],[11,"from_raw","","",1,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",1,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"destroy","","",5,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"set_background","","sets the wl_surface as the wl_output background",5,{"inputs":[{"name":"self"},{"name":"wlsurface"},{"name":"wloutput"},{"name":"fitmethod"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::wall::unstable::background::v1::server::zww_background_v1","",6,null],[11,"from_ptr_new","","",6,null],[11,"from_ptr_initialized","","",6,null],[11,"interface_ptr","","",6,null],[11,"interface_name","","",6,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",6,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",6,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",6,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",6,{"inputs":[{"name":"self"},{"name":"zwwbackgroundv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",6,null],[11,"get_user_data","","",6,null],[11,"clone_unchecked","","",6,{"inputs":[{"name":"self"}],"output":{"name":"zwwbackgroundv1"}}],[11,"__dispatch_msg","","",6,null],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",3,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",3,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"fitmethod"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"fitmethod"}],"output":{"name":"bool"}}],[11,"from_raw","","",4,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",4,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[0,"v2","wayland_protocols::wall::unstable::background","",null,null],[0,"client","wayland_protocols::wall::unstable::background::v2","Client-side API of this protocol",null,null],[0,"zww_background_v2","wayland_protocols::wall::unstable::background::v2::client","singleton for background management",null,null],[3,"ZwwBackgroundV2","wayland_protocols::wall::unstable::background::v2::client::zww_background_v2","",null,null],[4,"Error","","ww_background error values",null,null],[13,"Bound","","ww_background is already bound",7,null],[13,"Role","","given wl_surface has another role",7,null],[13,"Size","","given wl_surface does not match output size",7,null],[0,"server","wayland_protocols::wall::unstable::background::v2","Server-side API of this protocol",null,null],[0,"zww_background_v2","wayland_protocols::wall::unstable::background::v2::server","singleton for background management",null,null],[3,"ZwwBackgroundV2","wayland_protocols::wall::unstable::background::v2::server::zww_background_v2","",null,null],[3,"Implementation","","",null,null],[12,"destroy","","",8,null],[12,"set_background","","sets the wl_surface as the wl_output background",8,null],[4,"Error","","ww_background error values",null,null],[13,"Bound","","ww_background is already bound",9,null],[13,"Role","","given wl_surface has another role",9,null],[13,"Size","","given wl_surface does not match output size",9,null],[11,"ptr","wayland_protocols::wall::unstable::background::v2::client::zww_background_v2","",10,null],[11,"from_ptr_new","","",10,null],[11,"from_ptr_initialized","","",10,null],[11,"interface_ptr","","",10,null],[11,"interface_name","","",10,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",10,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",10,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",10,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",10,{"inputs":[{"name":"self"},{"name":"zwwbackgroundv2"}],"output":{"name":"bool"}}],[11,"set_user_data","","",10,null],[11,"get_user_data","","",10,null],[11,"clone_unchecked","","",10,{"inputs":[{"name":"self"}],"output":{"name":"zwwbackgroundv2"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",7,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",7,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",7,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"destroy","","",10,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"set_background","","sets the wl_surface as the wl_output background",10,{"inputs":[{"name":"self"},{"name":"wlsurface"},{"name":"wloutput"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::wall::unstable::background::v2::server::zww_background_v2","",11,null],[11,"from_ptr_new","","",11,null],[11,"from_ptr_initialized","","",11,null],[11,"interface_ptr","","",11,null],[11,"interface_name","","",11,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",11,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",11,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",11,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",11,{"inputs":[{"name":"self"},{"name":"zwwbackgroundv2"}],"output":{"name":"bool"}}],[11,"set_user_data","","",11,null],[11,"get_user_data","","",11,null],[11,"clone_unchecked","","",11,{"inputs":[{"name":"self"}],"output":{"name":"zwwbackgroundv2"}}],[11,"__dispatch_msg","","",11,null],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",9,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",9,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",9,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",8,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[0,"dock_manager","wayland_protocols::wall::unstable","This protocol will allow clients to dock surfaces on screen edges",null,null],[0,"v1","wayland_protocols::wall::unstable::dock_manager","",null,null],[0,"client","wayland_protocols::wall::unstable::dock_manager::v1","Client-side API of this protocol",null,null],[0,"zww_dock_manager_v1","wayland_protocols::wall::unstable::dock_manager::v1::client","singleton for dock management",null,null],[3,"ZwwDockManagerV1","wayland_protocols::wall::unstable::dock_manager::v1::client::zww_dock_manager_v1","",null,null],[4,"Error","","ww_dock_manager error values",null,null],[13,"Role","","given wl_surface has another role",12,null],[4,"Position","","ww_dock_manager position values",null,null],[13,"Default","","the compositor will select an appropriate position",13,null],[13,"Top","","the dock will be at the top of the output",13,null],[13,"Bottom","","the dock will be at the top of the output",13,null],[13,"Left","","the dock will be at the top of the output",13,null],[13,"Right","","the dock will be at the top of the output",13,null],[0,"zww_dock_v1","wayland_protocols::wall::unstable::dock_manager::v1::client","a dock",null,null],[3,"ZwwDockV1","wayland_protocols::wall::unstable::dock_manager::v1::client::zww_dock_v1","",null,null],[3,"Implementation","","",null,null],[12,"configure","","the dock has a size",14,null],[12,"visible","","the dock becomes visible",14,null],[12,"hidden","","the dock is no longer visible",14,null],[0,"server","wayland_protocols::wall::unstable::dock_manager::v1","Server-side API of this protocol",null,null],[0,"zww_dock_manager_v1","wayland_protocols::wall::unstable::dock_manager::v1::server","singleton for dock management",null,null],[3,"ZwwDockManagerV1","wayland_protocols::wall::unstable::dock_manager::v1::server::zww_dock_manager_v1","",null,null],[3,"Implementation","","",null,null],[12,"destroy","","",15,null],[12,"create_dock","","create a dock from a wl_surface",15,null],[4,"Error","","ww_dock_manager error values",null,null],[13,"Role","","given wl_surface has another role",16,null],[4,"Position","","ww_dock_manager position values",null,null],[13,"Default","","the compositor will select an appropriate position",17,null],[13,"Top","","the dock will be at the top of the output",17,null],[13,"Bottom","","the dock will be at the top of the output",17,null],[13,"Left","","the dock will be at the top of the output",17,null],[13,"Right","","the dock will be at the top of the output",17,null],[0,"zww_dock_v1","wayland_protocols::wall::unstable::dock_manager::v1::server","a dock",null,null],[3,"ZwwDockV1","wayland_protocols::wall::unstable::dock_manager::v1::server::zww_dock_v1","",null,null],[3,"Implementation","","",null,null],[12,"destroy","","",18,null],[12,"show","","ask the compositor to show the dock",18,null],[11,"ptr","wayland_protocols::wall::unstable::dock_manager::v1::client::zww_dock_manager_v1","",19,null],[11,"from_ptr_new","","",19,null],[11,"from_ptr_initialized","","",19,null],[11,"interface_ptr","","",19,null],[11,"interface_name","","",19,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",19,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",19,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",19,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",19,{"inputs":[{"name":"self"},{"name":"zwwdockmanagerv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",19,null],[11,"get_user_data","","",19,null],[11,"clone_unchecked","","",19,{"inputs":[{"name":"self"}],"output":{"name":"zwwdockmanagerv1"}}],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",12,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",12,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",12,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"position"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",13,{"inputs":[{"name":"self"},{"name":"position"}],"output":{"name":"bool"}}],[11,"from_raw","","",13,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",13,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"destroy","","",19,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"create_dock","","create a dock from a wl_surface",19,{"inputs":[{"name":"self"},{"name":"wlsurface"},{"name":"option"},{"name":"position"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::wall::unstable::dock_manager::v1::client::zww_dock_v1","",20,null],[11,"from_ptr_new","","",20,null],[11,"from_ptr_initialized","","",20,null],[11,"interface_ptr","","",20,null],[11,"interface_name","","",20,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",20,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",20,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",20,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",20,{"inputs":[{"name":"self"},{"name":"zwwdockv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",20,null],[11,"get_user_data","","",20,null],[11,"clone_unchecked","","",20,{"inputs":[{"name":"self"}],"output":{"name":"zwwdockv1"}}],[11,"__dispatch_msg","","",20,null],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",14,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"destroy","","",20,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"show","","ask the compositor to show the dock",20,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::wall::unstable::dock_manager::v1::server::zww_dock_manager_v1","",21,null],[11,"from_ptr_new","","",21,null],[11,"from_ptr_initialized","","",21,null],[11,"interface_ptr","","",21,null],[11,"interface_name","","",21,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",21,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",21,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",21,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",21,{"inputs":[{"name":"self"},{"name":"zwwdockmanagerv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",21,null],[11,"get_user_data","","",21,null],[11,"clone_unchecked","","",21,{"inputs":[{"name":"self"}],"output":{"name":"zwwdockmanagerv1"}}],[11,"__dispatch_msg","","",21,null],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",16,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",16,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",16,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",17,{"inputs":[{"name":"self"}],"output":{"name":"position"}}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",17,{"inputs":[{"name":"self"},{"name":"position"}],"output":{"name":"bool"}}],[11,"from_raw","","",17,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",17,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",15,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"ptr","wayland_protocols::wall::unstable::dock_manager::v1::server::zww_dock_v1","",22,null],[11,"from_ptr_new","","",22,null],[11,"from_ptr_initialized","","",22,null],[11,"interface_ptr","","",22,null],[11,"interface_name","","",22,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",22,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",22,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",22,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",22,{"inputs":[{"name":"self"},{"name":"zwwdockv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",22,null],[11,"get_user_data","","",22,null],[11,"clone_unchecked","","",22,{"inputs":[{"name":"self"}],"output":{"name":"zwwdockv1"}}],[11,"__dispatch_msg","","",22,null],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",18,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"configure","","the dock has a size",22,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"position"}],"output":{"name":"eventresult"}}],[11,"visible","","the dock becomes visible",22,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"hidden","","the dock is no longer visible",22,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[0,"v2","wayland_protocols::wall::unstable::dock_manager","",null,null],[0,"client","wayland_protocols::wall::unstable::dock_manager::v2","Client-side API of this protocol",null,null],[0,"zww_dock_manager_v2","wayland_protocols::wall::unstable::dock_manager::v2::client","singleton for dock management",null,null],[3,"ZwwDockManagerV2","wayland_protocols::wall::unstable::dock_manager::v2::client::zww_dock_manager_v2","",null,null],[4,"Error","","ww_dock_manager error values",null,null],[13,"Role","","given wl_surface has another role",23,null],[4,"Position","","ww_dock_manager position values",null,null],[13,"Default","","the compositor will select an appropriate position",24,null],[13,"Top","","the dock will be at the top of the output",24,null],[13,"Bottom","","the dock will be at the top of the output",24,null],[13,"Left","","the dock will be at the top of the output",24,null],[13,"Right","","the dock will be at the top of the output",24,null],[0,"zww_dock_v2","wayland_protocols::wall::unstable::dock_manager::v2::client","a dock",null,null],[3,"ZwwDockV2","wayland_protocols::wall::unstable::dock_manager::v2::client::zww_dock_v2","",null,null],[3,"Implementation","","",null,null],[12,"configure","","the dock has a size",25,null],[0,"server","wayland_protocols::wall::unstable::dock_manager::v2","Server-side API of this protocol",null,null],[0,"zww_dock_manager_v2","wayland_protocols::wall::unstable::dock_manager::v2::server","singleton for dock management",null,null],[3,"ZwwDockManagerV2","wayland_protocols::wall::unstable::dock_manager::v2::server::zww_dock_manager_v2","",null,null],[3,"Implementation","","",null,null],[12,"destroy","","",26,null],[12,"create_dock","","create a dock from a wl_surface",26,null],[4,"Error","","ww_dock_manager error values",null,null],[13,"Role","","given wl_surface has another role",27,null],[4,"Position","","ww_dock_manager position values",null,null],[13,"Default","","the compositor will select an appropriate position",28,null],[13,"Top","","the dock will be at the top of the output",28,null],[13,"Bottom","","the dock will be at the top of the output",28,null],[13,"Left","","the dock will be at the top of the output",28,null],[13,"Right","","the dock will be at the top of the output",28,null],[0,"zww_dock_v2","wayland_protocols::wall::unstable::dock_manager::v2::server","a dock",null,null],[3,"ZwwDockV2","wayland_protocols::wall::unstable::dock_manager::v2::server::zww_dock_v2","",null,null],[3,"Implementation","","",null,null],[12,"destroy","","",29,null],[12,"show","","ask the compositor to show the dock",29,null],[11,"ptr","wayland_protocols::wall::unstable::dock_manager::v2::client::zww_dock_manager_v2","",30,null],[11,"from_ptr_new","","",30,null],[11,"from_ptr_initialized","","",30,null],[11,"interface_ptr","","",30,null],[11,"interface_name","","",30,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",30,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",30,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",30,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",30,{"inputs":[{"name":"self"},{"name":"zwwdockmanagerv2"}],"output":{"name":"bool"}}],[11,"set_user_data","","",30,null],[11,"get_user_data","","",30,null],[11,"clone_unchecked","","",30,{"inputs":[{"name":"self"}],"output":{"name":"zwwdockmanagerv2"}}],[11,"clone","","",23,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",23,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",23,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",23,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",24,{"inputs":[{"name":"self"}],"output":{"name":"position"}}],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",24,{"inputs":[{"name":"self"},{"name":"position"}],"output":{"name":"bool"}}],[11,"from_raw","","",24,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",24,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"destroy","","",30,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"create_dock","","create a dock from a wl_surface",30,{"inputs":[{"name":"self"},{"name":"wlsurface"},{"name":"option"},{"name":"position"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::wall::unstable::dock_manager::v2::client::zww_dock_v2","",31,null],[11,"from_ptr_new","","",31,null],[11,"from_ptr_initialized","","",31,null],[11,"interface_ptr","","",31,null],[11,"interface_name","","",31,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",31,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",31,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",31,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",31,{"inputs":[{"name":"self"},{"name":"zwwdockv2"}],"output":{"name":"bool"}}],[11,"set_user_data","","",31,null],[11,"get_user_data","","",31,null],[11,"clone_unchecked","","",31,{"inputs":[{"name":"self"}],"output":{"name":"zwwdockv2"}}],[11,"__dispatch_msg","","",31,null],[11,"clone","","",25,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",25,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"destroy","","",31,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"show","","ask the compositor to show the dock",31,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::wall::unstable::dock_manager::v2::server::zww_dock_manager_v2","",32,null],[11,"from_ptr_new","","",32,null],[11,"from_ptr_initialized","","",32,null],[11,"interface_ptr","","",32,null],[11,"interface_name","","",32,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",32,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",32,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",32,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",32,{"inputs":[{"name":"self"},{"name":"zwwdockmanagerv2"}],"output":{"name":"bool"}}],[11,"set_user_data","","",32,null],[11,"get_user_data","","",32,null],[11,"clone_unchecked","","",32,{"inputs":[{"name":"self"}],"output":{"name":"zwwdockmanagerv2"}}],[11,"__dispatch_msg","","",32,null],[11,"clone","","",27,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",27,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",27,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",27,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",28,{"inputs":[{"name":"self"}],"output":{"name":"position"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",28,{"inputs":[{"name":"self"},{"name":"position"}],"output":{"name":"bool"}}],[11,"from_raw","","",28,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",28,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",26,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",26,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"ptr","wayland_protocols::wall::unstable::dock_manager::v2::server::zww_dock_v2","",33,null],[11,"from_ptr_new","","",33,null],[11,"from_ptr_initialized","","",33,null],[11,"interface_ptr","","",33,null],[11,"interface_name","","",33,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",33,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",33,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",33,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",33,{"inputs":[{"name":"self"},{"name":"zwwdockv2"}],"output":{"name":"bool"}}],[11,"set_user_data","","",33,null],[11,"get_user_data","","",33,null],[11,"clone_unchecked","","",33,{"inputs":[{"name":"self"}],"output":{"name":"zwwdockv2"}}],[11,"__dispatch_msg","","",33,null],[11,"clone","","",29,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",29,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"configure","","the dock has a size",33,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"position"}],"output":{"name":"eventresult"}}],[0,"launcher_menu","wayland_protocols::wall::unstable","This protocol will allow launcher and menu clients, with a proper implicit grab",null,null],[0,"v1","wayland_protocols::wall::unstable::launcher_menu","",null,null],[0,"client","wayland_protocols::wall::unstable::launcher_menu::v1","Client-side API of this protocol",null,null],[0,"zww_launcher_menu_v1","wayland_protocols::wall::unstable::launcher_menu::v1::client","singleton for launchers and menus",null,null],[3,"ZwwLauncherMenuV1","wayland_protocols::wall::unstable::launcher_menu::v1::client::zww_launcher_menu_v1","",null,null],[3,"Implementation","","",null,null],[12,"dismiss","","the surface is dismissed and must be destroyed",34,null],[4,"Error","","ww_launcher_menu error values",null,null],[13,"Bound","","ww_launcher_menu is already bound",35,null],[13,"Role","","given wl_surface has another role",35,null],[13,"Unique","","another wl_surface has this role already",35,null],[13,"Serial","","given serial is no longer valid",35,null],[0,"server","wayland_protocols::wall::unstable::launcher_menu::v1","Server-side API of this protocol",null,null],[0,"zww_launcher_menu_v1","wayland_protocols::wall::unstable::launcher_menu::v1::server","singleton for launchers and menus",null,null],[3,"ZwwLauncherMenuV1","wayland_protocols::wall::unstable::launcher_menu::v1::server::zww_launcher_menu_v1","",null,null],[3,"Implementation","","",null,null],[12,"destroy","","",36,null],[12,"show","","show the launcher/menu surface",36,null],[12,"show_at_pointer","","show the launcher/menu surface at the pointer position",36,null],[12,"show_at_surface","","show the launcher/menu surface at the focused surface position",36,null],[4,"Error","","ww_launcher_menu error values",null,null],[13,"Bound","","ww_launcher_menu is already bound",37,null],[13,"Role","","given wl_surface has another role",37,null],[13,"Unique","","another wl_surface has this role already",37,null],[13,"Serial","","given serial is no longer valid",37,null],[11,"ptr","wayland_protocols::wall::unstable::launcher_menu::v1::client::zww_launcher_menu_v1","",38,null],[11,"from_ptr_new","","",38,null],[11,"from_ptr_initialized","","",38,null],[11,"interface_ptr","","",38,null],[11,"interface_name","","",38,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",38,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",38,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",38,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",38,{"inputs":[{"name":"self"},{"name":"zwwlaunchermenuv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",38,null],[11,"get_user_data","","",38,null],[11,"clone_unchecked","","",38,{"inputs":[{"name":"self"}],"output":{"name":"zwwlaunchermenuv1"}}],[11,"__dispatch_msg","","",38,null],[11,"clone","","",35,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",35,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",35,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",35,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",35,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",34,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",34,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"destroy","","",38,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"show","","show the launcher/menu surface",38,{"inputs":[{"name":"self"},{"name":"wlsurface"}],"output":{"name":"requestresult"}}],[11,"show_at_pointer","","show the launcher/menu surface at the pointer position",38,{"inputs":[{"name":"self"},{"name":"wlsurface"},{"name":"wlseat"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"show_at_surface","","show the launcher/menu surface at the focused surface position",38,{"inputs":[{"name":"self"},{"name":"wlsurface"},{"name":"wlseat"},{"name":"u32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::wall::unstable::launcher_menu::v1::server::zww_launcher_menu_v1","",39,null],[11,"from_ptr_new","","",39,null],[11,"from_ptr_initialized","","",39,null],[11,"interface_ptr","","",39,null],[11,"interface_name","","",39,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",39,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",39,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",39,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",39,{"inputs":[{"name":"self"},{"name":"zwwlaunchermenuv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",39,null],[11,"get_user_data","","",39,null],[11,"clone_unchecked","","",39,{"inputs":[{"name":"self"}],"output":{"name":"zwwlaunchermenuv1"}}],[11,"__dispatch_msg","","",39,null],[11,"clone","","",37,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",37,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",37,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",37,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",37,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",36,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",36,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"dismiss","","the surface is dismissed and must be destroyed",39,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[0,"notification_area","wayland_protocols::wall::unstable","This protocol will allow notification daemons to display their notifications using Wayland",null,null],[0,"v1","wayland_protocols::wall::unstable::notification_area","",null,null],[0,"client","wayland_protocols::wall::unstable::notification_area::v1","Client-side API of this protocol",null,null],[0,"zww_notification_area_v1","wayland_protocols::wall::unstable::notification_area::v1::client","singleton for notification daemons",null,null],[3,"ZwwNotificationAreaV1","wayland_protocols::wall::unstable::notification_area::v1::client::zww_notification_area_v1","",null,null],[3,"Implementation","","",null,null],[12,"geometry","","create a notification from a wl_surface",40,null],[4,"Error","","ww_notification_area error values",null,null],[13,"Bound","","ww_notification_area is already bound",41,null],[13,"Role","","given wl_surface has another role",41,null],[0,"zww_notification_v1","wayland_protocols::wall::unstable::notification_area::v1::client","a notification bubble",null,null],[3,"ZwwNotificationV1","wayland_protocols::wall::unstable::notification_area::v1::client::zww_notification_v1","",null,null],[4,"Error","","ww_notification error values",null,null],[13,"OutsideArea","","notification would be rendered outside the area",42,null],[0,"server","wayland_protocols::wall::unstable::notification_area::v1","Server-side API of this protocol",null,null],[0,"zww_notification_area_v1","wayland_protocols::wall::unstable::notification_area::v1::server","singleton for notification daemons",null,null],[3,"ZwwNotificationAreaV1","wayland_protocols::wall::unstable::notification_area::v1::server::zww_notification_area_v1","",null,null],[3,"Implementation","","",null,null],[12,"destroy","","",43,null],[12,"create_notification","","create a notification from a wl_surface",43,null],[4,"Error","","ww_notification_area error values",null,null],[13,"Bound","","ww_notification_area is already bound",44,null],[13,"Role","","given wl_surface has another role",44,null],[0,"zww_notification_v1","wayland_protocols::wall::unstable::notification_area::v1::server","a notification bubble",null,null],[3,"ZwwNotificationV1","wayland_protocols::wall::unstable::notification_area::v1::server::zww_notification_v1","",null,null],[3,"Implementation","","",null,null],[12,"destroy","","",45,null],[12,"move_","","create a notification from a wl_surface",45,null],[4,"Error","","ww_notification error values",null,null],[13,"OutsideArea","","notification would be rendered outside the area",46,null],[11,"ptr","wayland_protocols::wall::unstable::notification_area::v1::client::zww_notification_area_v1","",47,null],[11,"from_ptr_new","","",47,null],[11,"from_ptr_initialized","","",47,null],[11,"interface_ptr","","",47,null],[11,"interface_name","","",47,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",47,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",47,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",47,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",47,{"inputs":[{"name":"self"},{"name":"zwwnotificationareav1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",47,null],[11,"get_user_data","","",47,null],[11,"clone_unchecked","","",47,{"inputs":[{"name":"self"}],"output":{"name":"zwwnotificationareav1"}}],[11,"__dispatch_msg","","",47,null],[11,"clone","","",41,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",41,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",41,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",41,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",41,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",40,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",40,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"destroy","","",47,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"create_notification","","create a notification from a wl_surface",47,{"inputs":[{"name":"self"},{"name":"wlsurface"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::wall::unstable::notification_area::v1::client::zww_notification_v1","",48,null],[11,"from_ptr_new","","",48,null],[11,"from_ptr_initialized","","",48,null],[11,"interface_ptr","","",48,null],[11,"interface_name","","",48,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",48,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",48,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",48,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",48,{"inputs":[{"name":"self"},{"name":"zwwnotificationv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",48,null],[11,"get_user_data","","",48,null],[11,"clone_unchecked","","",48,{"inputs":[{"name":"self"}],"output":{"name":"zwwnotificationv1"}}],[11,"clone","","",42,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",42,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",42,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",42,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",42,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"destroy","","",48,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"_move","","create a notification from a wl_surface",48,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::wall::unstable::notification_area::v1::server::zww_notification_area_v1","",49,null],[11,"from_ptr_new","","",49,null],[11,"from_ptr_initialized","","",49,null],[11,"interface_ptr","","",49,null],[11,"interface_name","","",49,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",49,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",49,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",49,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",49,{"inputs":[{"name":"self"},{"name":"zwwnotificationareav1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",49,null],[11,"get_user_data","","",49,null],[11,"clone_unchecked","","",49,{"inputs":[{"name":"self"}],"output":{"name":"zwwnotificationareav1"}}],[11,"__dispatch_msg","","",49,null],[11,"clone","","",44,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",44,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",44,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",44,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",44,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",43,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",43,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"geometry","","create a notification from a wl_surface",49,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"eventresult"}}],[11,"ptr","wayland_protocols::wall::unstable::notification_area::v1::server::zww_notification_v1","",50,null],[11,"from_ptr_new","","",50,null],[11,"from_ptr_initialized","","",50,null],[11,"interface_ptr","","",50,null],[11,"interface_name","","",50,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",50,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",50,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",50,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",50,{"inputs":[{"name":"self"},{"name":"zwwnotificationv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",50,null],[11,"get_user_data","","",50,null],[11,"clone_unchecked","","",50,{"inputs":[{"name":"self"}],"output":{"name":"zwwnotificationv1"}}],[11,"__dispatch_msg","","",50,null],[11,"clone","","",46,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",46,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",46,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",46,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",46,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",45,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",45,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[0,"window_switcher","wayland_protocols::wall::unstable","This protocol will allow privileged clients to list, switch to and close other clients surfaces",null,null],[0,"v1","wayland_protocols::wall::unstable::window_switcher","",null,null],[0,"client","wayland_protocols::wall::unstable::window_switcher::v1","Client-side API of this protocol",null,null],[0,"zww_window_switcher_v1","wayland_protocols::wall::unstable::window_switcher::v1::client","singleton for window switchers",null,null],[3,"ZwwWindowSwitcherV1","wayland_protocols::wall::unstable::window_switcher::v1::client::zww_window_switcher_v1","",null,null],[3,"Implementation","","",null,null],[12,"window","","the surface is dismissed and must be destroyed",51,null],[4,"Error","","ww_window_switcher error values",null,null],[13,"Bound","","ww_window_switcher is already bound",52,null],[13,"Role","","given wl_surface has another role",52,null],[13,"Unique","","another wl_surface has this role already",52,null],[13,"Serial","","given serial is no longer valid",52,null],[0,"zww_window_switcher_window_v1","wayland_protocols::wall::unstable::window_switcher::v1::client","singleton for window switchers",null,null],[3,"ZwwWindowSwitcherWindowV1","wayland_protocols::wall::unstable::window_switcher::v1::client::zww_window_switcher_window_v1","",null,null],[3,"Implementation","","",null,null],[12,"title","","the window title",53,null],[12,"app_id","","the window app_id",53,null],[12,"workspace","","the workspace name the window is on",53,null],[12,"done","","all window data has been transmitted",53,null],[4,"Error","","ww_window_switcher_window error values",null,null],[13,"InvalidRectangle","","invalid rectangle values",54,null],[0,"server","wayland_protocols::wall::unstable::window_switcher::v1","Server-side API of this protocol",null,null],[0,"zww_window_switcher_v1","wayland_protocols::wall::unstable::window_switcher::v1::server","singleton for window switchers",null,null],[3,"ZwwWindowSwitcherV1","wayland_protocols::wall::unstable::window_switcher::v1::server::zww_window_switcher_v1","",null,null],[3,"Implementation","","",null,null],[12,"destroy","","",55,null],[4,"Error","","ww_window_switcher error values",null,null],[13,"Bound","","ww_window_switcher is already bound",56,null],[13,"Role","","given wl_surface has another role",56,null],[13,"Unique","","another wl_surface has this role already",56,null],[13,"Serial","","given serial is no longer valid",56,null],[0,"zww_window_switcher_window_v1","wayland_protocols::wall::unstable::window_switcher::v1::server","singleton for window switchers",null,null],[3,"ZwwWindowSwitcherWindowV1","wayland_protocols::wall::unstable::window_switcher::v1::server::zww_window_switcher_window_v1","",null,null],[3,"Implementation","","",null,null],[12,"destroy","","",57,null],[12,"switch_to","","switch to this window",57,null],[12,"close","","close this window",57,null],[12,"show","","show a window thumbnail at given position",57,null],[4,"Error","","ww_window_switcher_window error values",null,null],[13,"InvalidRectangle","","invalid rectangle values",58,null],[11,"ptr","wayland_protocols::wall::unstable::window_switcher::v1::client::zww_window_switcher_v1","",59,null],[11,"from_ptr_new","","",59,null],[11,"from_ptr_initialized","","",59,null],[11,"interface_ptr","","",59,null],[11,"interface_name","","",59,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",59,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",59,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",59,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",59,{"inputs":[{"name":"self"},{"name":"zwwwindowswitcherv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",59,null],[11,"get_user_data","","",59,null],[11,"clone_unchecked","","",59,{"inputs":[{"name":"self"}],"output":{"name":"zwwwindowswitcherv1"}}],[11,"__dispatch_msg","","",59,null],[11,"clone","","",52,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",52,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",52,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",52,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",52,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",51,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",51,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"destroy","","",59,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::wall::unstable::window_switcher::v1::client::zww_window_switcher_window_v1","",60,null],[11,"from_ptr_new","","",60,null],[11,"from_ptr_initialized","","",60,null],[11,"interface_ptr","","",60,null],[11,"interface_name","","",60,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",60,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",60,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",60,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",60,{"inputs":[{"name":"self"},{"name":"zwwwindowswitcherwindowv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",60,null],[11,"get_user_data","","",60,null],[11,"clone_unchecked","","",60,{"inputs":[{"name":"self"}],"output":{"name":"zwwwindowswitcherwindowv1"}}],[11,"__dispatch_msg","","",60,null],[11,"clone","","",54,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",54,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",54,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",54,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",54,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",53,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",53,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"destroy","","",60,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"switch_to","","switch to this window",60,{"inputs":[{"name":"self"},{"name":"wlseat"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"close","","close this window",60,{"inputs":[{"name":"self"},{"name":"wlseat"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"show","","show a window thumbnail at given position",60,{"inputs":[{"name":"self"},{"name":"wlsurface"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::wall::unstable::window_switcher::v1::server::zww_window_switcher_v1","",61,null],[11,"from_ptr_new","","",61,null],[11,"from_ptr_initialized","","",61,null],[11,"interface_ptr","","",61,null],[11,"interface_name","","",61,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",61,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",61,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",61,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",61,{"inputs":[{"name":"self"},{"name":"zwwwindowswitcherv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",61,null],[11,"get_user_data","","",61,null],[11,"clone_unchecked","","",61,{"inputs":[{"name":"self"}],"output":{"name":"zwwwindowswitcherv1"}}],[11,"__dispatch_msg","","",61,null],[11,"clone","","",56,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",56,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",56,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",56,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",56,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",55,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",55,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"window","","the surface is dismissed and must be destroyed",61,{"inputs":[{"name":"self"},{"name":"zwwwindowswitcherwindowv1"}],"output":{"name":"eventresult"}}],[11,"ptr","wayland_protocols::wall::unstable::window_switcher::v1::server::zww_window_switcher_window_v1","",62,null],[11,"from_ptr_new","","",62,null],[11,"from_ptr_initialized","","",62,null],[11,"interface_ptr","","",62,null],[11,"interface_name","","",62,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",62,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",62,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",62,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",62,{"inputs":[{"name":"self"},{"name":"zwwwindowswitcherwindowv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",62,null],[11,"get_user_data","","",62,null],[11,"clone_unchecked","","",62,{"inputs":[{"name":"self"}],"output":{"name":"zwwwindowswitcherwindowv1"}}],[11,"__dispatch_msg","","",62,null],[11,"clone","","",58,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",58,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",58,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",58,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",57,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",57,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"title","","the window title",62,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"eventresult"}}],[11,"app_id","","the window app_id",62,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"eventresult"}}],[11,"workspace","","the workspace name the window is on",62,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"eventresult"}}],[11,"done","","all window data has been transmitted",62,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[0,"unstable","wayland_protocols","Unstable protocols from wayland-protocols",null,null],[0,"fullscreen_shell","wayland_protocols::unstable","Fullscreen shell protocol",null,null],[0,"v1","wayland_protocols::unstable::fullscreen_shell","",null,null],[0,"client","wayland_protocols::unstable::fullscreen_shell::v1","Client-side API of this protocol",null,null],[0,"zwp_fullscreen_shell_v1","wayland_protocols::unstable::fullscreen_shell::v1::client","displays a single surface per output",null,null],[3,"ZwpFullscreenShellV1","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","",null,null],[3,"Implementation","","",null,null],[12,"capability","","advertises a capability of the compositor",63,null],[4,"Capability","","capabilities advertised by the compositor",null,null],[13,"ArbitraryModes","","compositor is capable of almost any output mode",64,null],[13,"CursorPlane","","compositor has a separate cursor plane",64,null],[4,"PresentMethod","","different method to set the surface fullscreen",null,null],[13,"Default","","no preference, apply default policy",65,null],[13,"Center","","center the surface on the output",65,null],[13,"Zoom","","scale the surface, preserving aspect ratio, to the largest size that will fit on the output",65,null],[13,"ZoomCrop","","scale the surface, preserving aspect ratio, to fully fill the output cropping if needed",65,null],[13,"Stretch","","scale the surface to the size of the output ignoring aspect ratio",65,null],[4,"Error","","wl_fullscreen_shell error values",null,null],[13,"InvalidMethod","","present_method is not known",66,null],[0,"zwp_fullscreen_shell_mode_feedback_v1","wayland_protocols::unstable::fullscreen_shell::v1::client","",null,null],[3,"ZwpFullscreenShellModeFeedbackV1","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_mode_feedback_v1","",null,null],[3,"Implementation","","",null,null],[12,"mode_successful","","mode switch succeeded",67,null],[12,"mode_failed","","mode switch failed",67,null],[12,"present_cancelled","","mode switch cancelled",67,null],[0,"server","wayland_protocols::unstable::fullscreen_shell::v1","Server-side API of this protocol",null,null],[0,"zwp_fullscreen_shell_v1","wayland_protocols::unstable::fullscreen_shell::v1::server","displays a single surface per output",null,null],[3,"ZwpFullscreenShellV1","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1","",null,null],[3,"Implementation","","",null,null],[12,"release","","release the wl_fullscreen_shell interface",68,null],[12,"present_surface","","present surface for display",68,null],[12,"present_surface_for_mode","","present surface for display at a particular mode",68,null],[4,"Capability","","capabilities advertised by the compositor",null,null],[13,"ArbitraryModes","","compositor is capable of almost any output mode",69,null],[13,"CursorPlane","","compositor has a separate cursor plane",69,null],[4,"PresentMethod","","different method to set the surface fullscreen",null,null],[13,"Default","","no preference, apply default policy",70,null],[13,"Center","","center the surface on the output",70,null],[13,"Zoom","","scale the surface, preserving aspect ratio, to the largest size that will fit on the output",70,null],[13,"ZoomCrop","","scale the surface, preserving aspect ratio, to fully fill the output cropping if needed",70,null],[13,"Stretch","","scale the surface to the size of the output ignoring aspect ratio",70,null],[4,"Error","","wl_fullscreen_shell error values",null,null],[13,"InvalidMethod","","present_method is not known",71,null],[0,"zwp_fullscreen_shell_mode_feedback_v1","wayland_protocols::unstable::fullscreen_shell::v1::server","",null,null],[3,"ZwpFullscreenShellModeFeedbackV1","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_mode_feedback_v1","",null,null],[11,"ptr","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","",72,null],[11,"from_ptr_new","","",72,null],[11,"from_ptr_initialized","","",72,null],[11,"interface_ptr","","",72,null],[11,"interface_name","","",72,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",72,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",72,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",72,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",72,{"inputs":[{"name":"self"},{"name":"zwpfullscreenshellv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",72,null],[11,"get_user_data","","",72,null],[11,"clone_unchecked","","",72,{"inputs":[{"name":"self"}],"output":{"name":"zwpfullscreenshellv1"}}],[11,"__dispatch_msg","","",72,null],[11,"clone","","",64,{"inputs":[{"name":"self"}],"output":{"name":"capability"}}],[11,"fmt","","",64,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",64,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"from_raw","","",64,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",64,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",65,{"inputs":[{"name":"self"}],"output":{"name":"presentmethod"}}],[11,"fmt","","",65,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",65,{"inputs":[{"name":"self"},{"name":"presentmethod"}],"output":{"name":"bool"}}],[11,"from_raw","","",65,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",65,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",66,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",66,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",66,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",66,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",66,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",63,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",63,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"release","","release the wl_fullscreen_shell interface",72,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"present_surface","","present surface for display",72,{"inputs":[{"name":"self"},{"name":"option"},{"name":"u32"},{"name":"option"}],"output":{"name":"requestresult"}}],[11,"present_surface_for_mode","","present surface for display at a particular mode",72,{"inputs":[{"name":"self"},{"name":"wlsurface"},{"name":"wloutput"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_mode_feedback_v1","",73,null],[11,"from_ptr_new","","",73,null],[11,"from_ptr_initialized","","",73,null],[11,"interface_ptr","","",73,null],[11,"interface_name","","",73,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",73,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",73,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",73,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",73,{"inputs":[{"name":"self"},{"name":"zwpfullscreenshellmodefeedbackv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",73,null],[11,"get_user_data","","",73,null],[11,"clone_unchecked","","",73,{"inputs":[{"name":"self"}],"output":{"name":"zwpfullscreenshellmodefeedbackv1"}}],[11,"__dispatch_msg","","",73,null],[11,"clone","","",67,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",67,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"ptr","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1","",74,null],[11,"from_ptr_new","","",74,null],[11,"from_ptr_initialized","","",74,null],[11,"interface_ptr","","",74,null],[11,"interface_name","","",74,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",74,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",74,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",74,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",74,{"inputs":[{"name":"self"},{"name":"zwpfullscreenshellv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",74,null],[11,"get_user_data","","",74,null],[11,"clone_unchecked","","",74,{"inputs":[{"name":"self"}],"output":{"name":"zwpfullscreenshellv1"}}],[11,"__dispatch_msg","","",74,null],[11,"clone","","",69,{"inputs":[{"name":"self"}],"output":{"name":"capability"}}],[11,"fmt","","",69,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",69,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"from_raw","","",69,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",69,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",70,{"inputs":[{"name":"self"}],"output":{"name":"presentmethod"}}],[11,"fmt","","",70,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",70,{"inputs":[{"name":"self"},{"name":"presentmethod"}],"output":{"name":"bool"}}],[11,"from_raw","","",70,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",70,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",71,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",71,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",71,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",71,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",71,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",68,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",68,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"capability","","advertises a capability of the compositor",74,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"ptr","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_mode_feedback_v1","",75,null],[11,"from_ptr_new","","",75,null],[11,"from_ptr_initialized","","",75,null],[11,"interface_ptr","","",75,null],[11,"interface_name","","",75,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",75,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",75,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",75,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",75,{"inputs":[{"name":"self"},{"name":"zwpfullscreenshellmodefeedbackv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",75,null],[11,"get_user_data","","",75,null],[11,"clone_unchecked","","",75,{"inputs":[{"name":"self"}],"output":{"name":"zwpfullscreenshellmodefeedbackv1"}}],[11,"mode_successful","","mode switch succeeded",75,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"mode_failed","","mode switch failed",75,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"present_cancelled","","mode switch cancelled",75,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[0,"idle_inhibit","wayland_protocols::unstable","Screensaver inhibition protocol",null,null],[0,"v1","wayland_protocols::unstable::idle_inhibit","",null,null],[0,"client","wayland_protocols::unstable::idle_inhibit::v1","Client-side API of this protocol",null,null],[0,"zwp_idle_inhibit_manager_v1","wayland_protocols::unstable::idle_inhibit::v1::client","control behavior when display idles",null,null],[3,"ZwpIdleInhibitManagerV1","wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibit_manager_v1","",null,null],[0,"zwp_idle_inhibitor_v1","wayland_protocols::unstable::idle_inhibit::v1::client","context object for inhibiting idle behavior",null,null],[3,"ZwpIdleInhibitorV1","wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibitor_v1","",null,null],[0,"server","wayland_protocols::unstable::idle_inhibit::v1","Server-side API of this protocol",null,null],[0,"zwp_idle_inhibit_manager_v1","wayland_protocols::unstable::idle_inhibit::v1::server","control behavior when display idles",null,null],[3,"ZwpIdleInhibitManagerV1","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibit_manager_v1","",null,null],[3,"Implementation","","",null,null],[12,"destroy","","destroy the idle inhibitor object",76,null],[12,"create_inhibitor","","create a new inhibitor object",76,null],[0,"zwp_idle_inhibitor_v1","wayland_protocols::unstable::idle_inhibit::v1::server","context object for inhibiting idle behavior",null,null],[3,"ZwpIdleInhibitorV1","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibitor_v1","",null,null],[3,"Implementation","","",null,null],[12,"destroy","","destroy the idle inhibitor object",77,null],[11,"ptr","wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibit_manager_v1","",78,null],[11,"from_ptr_new","","",78,null],[11,"from_ptr_initialized","","",78,null],[11,"interface_ptr","","",78,null],[11,"interface_name","","",78,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",78,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",78,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",78,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",78,{"inputs":[{"name":"self"},{"name":"zwpidleinhibitmanagerv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",78,null],[11,"get_user_data","","",78,null],[11,"clone_unchecked","","",78,{"inputs":[{"name":"self"}],"output":{"name":"zwpidleinhibitmanagerv1"}}],[11,"destroy","","destroy the idle inhibitor object",78,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"create_inhibitor","","create a new inhibitor object",78,{"inputs":[{"name":"self"},{"name":"wlsurface"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibitor_v1","",79,null],[11,"from_ptr_new","","",79,null],[11,"from_ptr_initialized","","",79,null],[11,"interface_ptr","","",79,null],[11,"interface_name","","",79,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",79,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",79,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",79,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",79,{"inputs":[{"name":"self"},{"name":"zwpidleinhibitorv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",79,null],[11,"get_user_data","","",79,null],[11,"clone_unchecked","","",79,{"inputs":[{"name":"self"}],"output":{"name":"zwpidleinhibitorv1"}}],[11,"destroy","","destroy the idle inhibitor object",79,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibit_manager_v1","",80,null],[11,"from_ptr_new","","",80,null],[11,"from_ptr_initialized","","",80,null],[11,"interface_ptr","","",80,null],[11,"interface_name","","",80,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",80,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",80,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",80,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",80,{"inputs":[{"name":"self"},{"name":"zwpidleinhibitmanagerv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",80,null],[11,"get_user_data","","",80,null],[11,"clone_unchecked","","",80,{"inputs":[{"name":"self"}],"output":{"name":"zwpidleinhibitmanagerv1"}}],[11,"__dispatch_msg","","",80,null],[11,"clone","","",76,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",76,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"ptr","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibitor_v1","",81,null],[11,"from_ptr_new","","",81,null],[11,"from_ptr_initialized","","",81,null],[11,"interface_ptr","","",81,null],[11,"interface_name","","",81,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",81,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",81,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",81,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",81,{"inputs":[{"name":"self"},{"name":"zwpidleinhibitorv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",81,null],[11,"get_user_data","","",81,null],[11,"clone_unchecked","","",81,{"inputs":[{"name":"self"}],"output":{"name":"zwpidleinhibitorv1"}}],[11,"__dispatch_msg","","",81,null],[11,"clone","","",77,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",77,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[0,"input_method","wayland_protocols::unstable","Input method protocol",null,null],[0,"v1","wayland_protocols::unstable::input_method","",null,null],[0,"client","wayland_protocols::unstable::input_method::v1","Client-side API of this protocol",null,null],[0,"zwp_input_method_context_v1","wayland_protocols::unstable::input_method::v1::client","input method context",null,null],[3,"ZwpInputMethodContextV1","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",null,null],[3,"Implementation","","",null,null],[12,"surrounding_text","","surrounding text event",82,null],[12,"reset","","",82,null],[12,"content_type","","",82,null],[12,"invoke_action","","",82,null],[12,"commit_state","","",82,null],[12,"preferred_language","","",82,null],[0,"zwp_input_method_v1","wayland_protocols::unstable::input_method::v1::client","input method",null,null],[3,"ZwpInputMethodV1","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_v1","",null,null],[3,"Implementation","","",null,null],[12,"activate","","activate event",83,null],[12,"deactivate","","deactivate event",83,null],[0,"zwp_input_panel_v1","wayland_protocols::unstable::input_method::v1::client","interface for implementing keyboards",null,null],[3,"ZwpInputPanelV1","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_v1","",null,null],[0,"zwp_input_panel_surface_v1","wayland_protocols::unstable::input_method::v1::client","",null,null],[3,"ZwpInputPanelSurfaceV1","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_surface_v1","",null,null],[4,"Position","","",null,null],[13,"CenterBottom","","",84,null],[0,"server","wayland_protocols::unstable::input_method::v1","Server-side API of this protocol",null,null],[0,"zwp_input_method_context_v1","wayland_protocols::unstable::input_method::v1::server","input method context",null,null],[3,"ZwpInputMethodContextV1","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",null,null],[3,"Implementation","","",null,null],[12,"destroy","","",85,null],[12,"commit_string","","commit string",85,null],[12,"preedit_string","","pre-edit string",85,null],[12,"preedit_styling","","pre-edit styling",85,null],[12,"preedit_cursor","","pre-edit cursor",85,null],[12,"delete_surrounding_text","","delete text",85,null],[12,"cursor_position","","set cursor to a new position",85,null],[12,"modifiers_map","","",85,null],[12,"keysym","","keysym",85,null],[12,"grab_keyboard","","grab hardware keyboard",85,null],[12,"key","","forward key event",85,null],[12,"modifiers","","forward modifiers event",85,null],[12,"language","","",85,null],[12,"text_direction","","",85,null],[0,"zwp_input_method_v1","wayland_protocols::unstable::input_method::v1::server","input method",null,null],[3,"ZwpInputMethodV1","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_v1","",null,null],[0,"zwp_input_panel_v1","wayland_protocols::unstable::input_method::v1::server","interface for implementing keyboards",null,null],[3,"ZwpInputPanelV1","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_v1","",null,null],[3,"Implementation","","",null,null],[12,"get_input_panel_surface","","",86,null],[0,"zwp_input_panel_surface_v1","wayland_protocols::unstable::input_method::v1::server","",null,null],[3,"ZwpInputPanelSurfaceV1","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_surface_v1","",null,null],[3,"Implementation","","",null,null],[12,"set_toplevel","","set the surface type as a keyboard",87,null],[12,"set_overlay_panel","","set the surface type as an overlay panel",87,null],[4,"Position","","",null,null],[13,"CenterBottom","","",88,null],[11,"ptr","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",89,null],[11,"from_ptr_new","","",89,null],[11,"from_ptr_initialized","","",89,null],[11,"interface_ptr","","",89,null],[11,"interface_name","","",89,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",89,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",89,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",89,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",89,{"inputs":[{"name":"self"},{"name":"zwpinputmethodcontextv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",89,null],[11,"get_user_data","","",89,null],[11,"clone_unchecked","","",89,{"inputs":[{"name":"self"}],"output":{"name":"zwpinputmethodcontextv1"}}],[11,"__dispatch_msg","","",89,null],[11,"clone","","",82,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",82,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"destroy","","",89,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"commit_string","","commit string",89,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"string"}],"output":{"name":"requestresult"}}],[11,"preedit_string","","pre-edit string",89,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"string"},{"name":"string"}],"output":{"name":"requestresult"}}],[11,"preedit_styling","","pre-edit styling",89,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"preedit_cursor","","pre-edit cursor",89,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"delete_surrounding_text","","delete text",89,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"cursor_position","","set cursor to a new position",89,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"modifiers_map","","",89,{"inputs":[{"name":"self"},{"name":"vec"}],"output":{"name":"requestresult"}}],[11,"keysym","","keysym",89,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"grab_keyboard","","grab hardware keyboard",89,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"key","","forward key event",89,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"modifiers","","forward modifiers event",89,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"language","","",89,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"string"}],"output":{"name":"requestresult"}}],[11,"text_direction","","",89,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_v1","",90,null],[11,"from_ptr_new","","",90,null],[11,"from_ptr_initialized","","",90,null],[11,"interface_ptr","","",90,null],[11,"interface_name","","",90,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",90,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",90,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",90,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",90,{"inputs":[{"name":"self"},{"name":"zwpinputmethodv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",90,null],[11,"get_user_data","","",90,null],[11,"clone_unchecked","","",90,{"inputs":[{"name":"self"}],"output":{"name":"zwpinputmethodv1"}}],[11,"__dispatch_msg","","",90,null],[11,"clone","","",83,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",83,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"ptr","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_v1","",91,null],[11,"from_ptr_new","","",91,null],[11,"from_ptr_initialized","","",91,null],[11,"interface_ptr","","",91,null],[11,"interface_name","","",91,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",91,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",91,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",91,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",91,{"inputs":[{"name":"self"},{"name":"zwpinputpanelv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",91,null],[11,"get_user_data","","",91,null],[11,"clone_unchecked","","",91,{"inputs":[{"name":"self"}],"output":{"name":"zwpinputpanelv1"}}],[11,"get_input_panel_surface","","",91,{"inputs":[{"name":"self"},{"name":"wlsurface"}],"output":{"name":"zwpinputpanelsurfacev1"}}],[11,"ptr","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_surface_v1","",92,null],[11,"from_ptr_new","","",92,null],[11,"from_ptr_initialized","","",92,null],[11,"interface_ptr","","",92,null],[11,"interface_name","","",92,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",92,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",92,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",92,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",92,{"inputs":[{"name":"self"},{"name":"zwpinputpanelsurfacev1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",92,null],[11,"get_user_data","","",92,null],[11,"clone_unchecked","","",92,{"inputs":[{"name":"self"}],"output":{"name":"zwpinputpanelsurfacev1"}}],[11,"clone","","",84,{"inputs":[{"name":"self"}],"output":{"name":"position"}}],[11,"fmt","","",84,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",84,{"inputs":[{"name":"self"},{"name":"position"}],"output":{"name":"bool"}}],[11,"from_raw","","",84,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",84,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"set_toplevel","","set the surface type as a keyboard",92,null],[11,"set_overlay_panel","","set the surface type as an overlay panel",92,null],[11,"ptr","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",93,null],[11,"from_ptr_new","","",93,null],[11,"from_ptr_initialized","","",93,null],[11,"interface_ptr","","",93,null],[11,"interface_name","","",93,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",93,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",93,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",93,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",93,{"inputs":[{"name":"self"},{"name":"zwpinputmethodcontextv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",93,null],[11,"get_user_data","","",93,null],[11,"clone_unchecked","","",93,{"inputs":[{"name":"self"}],"output":{"name":"zwpinputmethodcontextv1"}}],[11,"__dispatch_msg","","",93,null],[11,"clone","","",85,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",85,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"surrounding_text","","surrounding text event",93,{"inputs":[{"name":"self"},{"name":"string"},{"name":"u32"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"reset","","",93,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"content_type","","",93,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"invoke_action","","",93,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"commit_state","","",93,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"preferred_language","","",93,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"eventresult"}}],[11,"ptr","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_v1","",94,null],[11,"from_ptr_new","","",94,null],[11,"from_ptr_initialized","","",94,null],[11,"interface_ptr","","",94,null],[11,"interface_name","","",94,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",94,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",94,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",94,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",94,{"inputs":[{"name":"self"},{"name":"zwpinputmethodv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",94,null],[11,"get_user_data","","",94,null],[11,"clone_unchecked","","",94,{"inputs":[{"name":"self"}],"output":{"name":"zwpinputmethodv1"}}],[11,"activate","","activate event",94,{"inputs":[{"name":"self"},{"name":"zwpinputmethodcontextv1"}],"output":{"name":"eventresult"}}],[11,"deactivate","","deactivate event",94,{"inputs":[{"name":"self"},{"name":"zwpinputmethodcontextv1"}],"output":{"name":"eventresult"}}],[11,"ptr","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_v1","",95,null],[11,"from_ptr_new","","",95,null],[11,"from_ptr_initialized","","",95,null],[11,"interface_ptr","","",95,null],[11,"interface_name","","",95,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",95,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",95,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",95,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",95,{"inputs":[{"name":"self"},{"name":"zwpinputpanelv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",95,null],[11,"get_user_data","","",95,null],[11,"clone_unchecked","","",95,{"inputs":[{"name":"self"}],"output":{"name":"zwpinputpanelv1"}}],[11,"__dispatch_msg","","",95,null],[11,"clone","","",86,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",86,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"ptr","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_surface_v1","",96,null],[11,"from_ptr_new","","",96,null],[11,"from_ptr_initialized","","",96,null],[11,"interface_ptr","","",96,null],[11,"interface_name","","",96,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",96,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",96,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",96,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",96,{"inputs":[{"name":"self"},{"name":"zwpinputpanelsurfacev1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",96,null],[11,"get_user_data","","",96,null],[11,"clone_unchecked","","",96,{"inputs":[{"name":"self"}],"output":{"name":"zwpinputpanelsurfacev1"}}],[11,"__dispatch_msg","","",96,null],[11,"clone","","",88,{"inputs":[{"name":"self"}],"output":{"name":"position"}}],[11,"fmt","","",88,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",88,{"inputs":[{"name":"self"},{"name":"position"}],"output":{"name":"bool"}}],[11,"from_raw","","",88,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",88,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",87,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",87,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[0,"keyboard_shortcuts_inhibit","wayland_protocols::unstable","Protocol for inhibiting the compositor keyboard shortcuts",null,null],[0,"v1","wayland_protocols::unstable::keyboard_shortcuts_inhibit","",null,null],[0,"client","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1","Client-side API of this protocol",null,null],[0,"zwp_keyboard_shortcuts_inhibit_manager_v1","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client","context object for keyboard grab_manager",null,null],[3,"ZwpKeyboardShortcutsInhibitManagerV1","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibit_manager_v1","",null,null],[4,"Error","","",null,null],[13,"AlreadyInhibited","","the shortcuts are already inhibited for this surface",97,null],[0,"zwp_keyboard_shortcuts_inhibitor_v1","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client","context object for keyboard shortcuts inhibitor",null,null],[3,"ZwpKeyboardShortcutsInhibitorV1","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibitor_v1","",null,null],[3,"Implementation","","",null,null],[12,"active","","shortcuts are inhibited",98,null],[12,"inactive","","shortcuts are restored",98,null],[0,"server","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1","Server-side API of this protocol",null,null],[0,"zwp_keyboard_shortcuts_inhibit_manager_v1","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server","context object for keyboard grab_manager",null,null],[3,"ZwpKeyboardShortcutsInhibitManagerV1","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibit_manager_v1","",null,null],[3,"Implementation","","",null,null],[12,"destroy","","destroy the keyboard shortcuts inhibitor object",99,null],[12,"inhibit_shortcuts","","create a new keyboard shortcuts inhibitor object",99,null],[4,"Error","","",null,null],[13,"AlreadyInhibited","","the shortcuts are already inhibited for this surface",100,null],[0,"zwp_keyboard_shortcuts_inhibitor_v1","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server","context object for keyboard shortcuts inhibitor",null,null],[3,"ZwpKeyboardShortcutsInhibitorV1","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibitor_v1","",null,null],[3,"Implementation","","",null,null],[12,"destroy","","destroy the keyboard shortcuts inhibitor object",101,null],[11,"ptr","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibit_manager_v1","",102,null],[11,"from_ptr_new","","",102,null],[11,"from_ptr_initialized","","",102,null],[11,"interface_ptr","","",102,null],[11,"interface_name","","",102,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",102,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",102,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",102,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",102,{"inputs":[{"name":"self"},{"name":"zwpkeyboardshortcutsinhibitmanagerv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",102,null],[11,"get_user_data","","",102,null],[11,"clone_unchecked","","",102,{"inputs":[{"name":"self"}],"output":{"name":"zwpkeyboardshortcutsinhibitmanagerv1"}}],[11,"clone","","",97,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",97,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",97,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",97,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",97,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"destroy","","destroy the keyboard shortcuts inhibitor object",102,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"inhibit_shortcuts","","create a new keyboard shortcuts inhibitor object",102,{"inputs":[{"name":"self"},{"name":"wlsurface"},{"name":"wlseat"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibitor_v1","",103,null],[11,"from_ptr_new","","",103,null],[11,"from_ptr_initialized","","",103,null],[11,"interface_ptr","","",103,null],[11,"interface_name","","",103,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",103,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",103,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",103,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",103,{"inputs":[{"name":"self"},{"name":"zwpkeyboardshortcutsinhibitorv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",103,null],[11,"get_user_data","","",103,null],[11,"clone_unchecked","","",103,{"inputs":[{"name":"self"}],"output":{"name":"zwpkeyboardshortcutsinhibitorv1"}}],[11,"__dispatch_msg","","",103,null],[11,"clone","","",98,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",98,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"destroy","","destroy the keyboard shortcuts inhibitor object",103,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibit_manager_v1","",104,null],[11,"from_ptr_new","","",104,null],[11,"from_ptr_initialized","","",104,null],[11,"interface_ptr","","",104,null],[11,"interface_name","","",104,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",104,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",104,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",104,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",104,{"inputs":[{"name":"self"},{"name":"zwpkeyboardshortcutsinhibitmanagerv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",104,null],[11,"get_user_data","","",104,null],[11,"clone_unchecked","","",104,{"inputs":[{"name":"self"}],"output":{"name":"zwpkeyboardshortcutsinhibitmanagerv1"}}],[11,"__dispatch_msg","","",104,null],[11,"clone","","",100,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",100,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",100,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",100,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",100,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",99,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",99,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"ptr","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibitor_v1","",105,null],[11,"from_ptr_new","","",105,null],[11,"from_ptr_initialized","","",105,null],[11,"interface_ptr","","",105,null],[11,"interface_name","","",105,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",105,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",105,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",105,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",105,{"inputs":[{"name":"self"},{"name":"zwpkeyboardshortcutsinhibitorv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",105,null],[11,"get_user_data","","",105,null],[11,"clone_unchecked","","",105,{"inputs":[{"name":"self"}],"output":{"name":"zwpkeyboardshortcutsinhibitorv1"}}],[11,"__dispatch_msg","","",105,null],[11,"clone","","",101,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",101,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"active","","shortcuts are inhibited",105,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"inactive","","shortcuts are restored",105,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[0,"linux_dmabuf","wayland_protocols::unstable","Linux DMA-BUF protocol",null,null],[0,"v1","wayland_protocols::unstable::linux_dmabuf","",null,null],[0,"client","wayland_protocols::unstable::linux_dmabuf::v1","Client-side API of this protocol",null,null],[0,"zwp_linux_dmabuf_v1","wayland_protocols::unstable::linux_dmabuf::v1::client","factory for creating dmabuf-based wl_buffers",null,null],[3,"ZwpLinuxDmabufV1","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1","",null,null],[3,"Implementation","","",null,null],[12,"format","","supported buffer format",106,null],[12,"modifier","","supported buffer format modifier",106,null],[0,"zwp_linux_buffer_params_v1","wayland_protocols::unstable::linux_dmabuf::v1::client","parameters for creating a dmabuf-based wl_buffer",null,null],[3,"ZwpLinuxBufferParamsV1","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","",null,null],[3,"Implementation","","",null,null],[12,"created","","buffer creation succeeded",107,null],[12,"failed","","buffer creation failed",107,null],[4,"Error","","",null,null],[13,"AlreadyUsed","","the dmabuf_batch object has already been used to create a wl_buffer",108,null],[13,"PlaneIdx","","plane index out of bounds",108,null],[13,"PlaneSet","","the plane index was already set",108,null],[13,"Incomplete","","missing or too many planes to create a buffer",108,null],[13,"InvalidFormat","","format not supported",108,null],[13,"InvalidDimensions","","invalid width or height",108,null],[13,"OutOfBounds","","offset + stride * height goes out of dmabuf bounds",108,null],[13,"InvalidWlBuffer","","invalid wl_buffer resulted from importing dmabufs via the create_immed request on given buffer_params",108,null],[4,"Flags","","",null,null],[13,"YInvert","","contents are y-inverted",109,null],[13,"Interlaced","","content is interlaced",109,null],[13,"BottomFirst","","bottom field first",109,null],[0,"server","wayland_protocols::unstable::linux_dmabuf::v1","Server-side API of this protocol",null,null],[0,"zwp_linux_dmabuf_v1","wayland_protocols::unstable::linux_dmabuf::v1::server","factory for creating dmabuf-based wl_buffers",null,null],[3,"ZwpLinuxDmabufV1","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1","",null,null],[3,"Implementation","","",null,null],[12,"destroy","","unbind the factory",110,null],[12,"create_params","","create a temporary object for buffer parameters",110,null],[0,"zwp_linux_buffer_params_v1","wayland_protocols::unstable::linux_dmabuf::v1::server","parameters for creating a dmabuf-based wl_buffer",null,null],[3,"ZwpLinuxBufferParamsV1","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1","",null,null],[3,"Implementation","","",null,null],[12,"destroy","","delete this object, used or not",111,null],[12,"add","","add a dmabuf to the temporary set",111,null],[12,"create","","create a wl_buffer from the given dmabufs",111,null],[12,"create_immed","","immediately create a wl_buffer from the given dmabufs",111,null],[4,"Error","","",null,null],[13,"AlreadyUsed","","the dmabuf_batch object has already been used to create a wl_buffer",112,null],[13,"PlaneIdx","","plane index out of bounds",112,null],[13,"PlaneSet","","the plane index was already set",112,null],[13,"Incomplete","","missing or too many planes to create a buffer",112,null],[13,"InvalidFormat","","format not supported",112,null],[13,"InvalidDimensions","","invalid width or height",112,null],[13,"OutOfBounds","","offset + stride * height goes out of dmabuf bounds",112,null],[13,"InvalidWlBuffer","","invalid wl_buffer resulted from importing dmabufs via the create_immed request on given buffer_params",112,null],[4,"Flags","","",null,null],[13,"YInvert","","contents are y-inverted",113,null],[13,"Interlaced","","content is interlaced",113,null],[13,"BottomFirst","","bottom field first",113,null],[11,"ptr","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1","",114,null],[11,"from_ptr_new","","",114,null],[11,"from_ptr_initialized","","",114,null],[11,"interface_ptr","","",114,null],[11,"interface_name","","",114,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",114,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",114,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",114,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",114,{"inputs":[{"name":"self"},{"name":"zwplinuxdmabufv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",114,null],[11,"get_user_data","","",114,null],[11,"clone_unchecked","","",114,{"inputs":[{"name":"self"}],"output":{"name":"zwplinuxdmabufv1"}}],[11,"__dispatch_msg","","",114,null],[11,"clone","","",106,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",106,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"destroy","","unbind the factory",114,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"create_params","","create a temporary object for buffer parameters",114,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","",115,null],[11,"from_ptr_new","","",115,null],[11,"from_ptr_initialized","","",115,null],[11,"interface_ptr","","",115,null],[11,"interface_name","","",115,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",115,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",115,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",115,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",115,{"inputs":[{"name":"self"},{"name":"zwplinuxbufferparamsv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",115,null],[11,"get_user_data","","",115,null],[11,"clone_unchecked","","",115,{"inputs":[{"name":"self"}],"output":{"name":"zwplinuxbufferparamsv1"}}],[11,"__dispatch_msg","","",115,null],[11,"clone","","",108,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",108,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",108,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",108,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",108,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",109,{"inputs":[{"name":"self"}],"output":{"name":"flags"}}],[11,"fmt","","",109,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",109,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"bool"}}],[11,"from_raw","","",109,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",109,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",107,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",107,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"destroy","","delete this object, used or not",115,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"add","","add a dmabuf to the temporary set",115,{"inputs":[{"name":"self"},{"name":"rawfd"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"create","","create a wl_buffer from the given dmabufs",115,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"create_immed","","immediately create a wl_buffer from the given dmabufs",115,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1","",116,null],[11,"from_ptr_new","","",116,null],[11,"from_ptr_initialized","","",116,null],[11,"interface_ptr","","",116,null],[11,"interface_name","","",116,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",116,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",116,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",116,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",116,{"inputs":[{"name":"self"},{"name":"zwplinuxdmabufv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",116,null],[11,"get_user_data","","",116,null],[11,"clone_unchecked","","",116,{"inputs":[{"name":"self"}],"output":{"name":"zwplinuxdmabufv1"}}],[11,"__dispatch_msg","","",116,null],[11,"clone","","",110,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",110,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"format","","supported buffer format",116,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"modifier","","supported buffer format modifier",116,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"ptr","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1","",117,null],[11,"from_ptr_new","","",117,null],[11,"from_ptr_initialized","","",117,null],[11,"interface_ptr","","",117,null],[11,"interface_name","","",117,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",117,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",117,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",117,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",117,{"inputs":[{"name":"self"},{"name":"zwplinuxbufferparamsv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",117,null],[11,"get_user_data","","",117,null],[11,"clone_unchecked","","",117,{"inputs":[{"name":"self"}],"output":{"name":"zwplinuxbufferparamsv1"}}],[11,"__dispatch_msg","","",117,null],[11,"clone","","",112,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",112,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",112,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",112,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",112,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",113,{"inputs":[{"name":"self"}],"output":{"name":"flags"}}],[11,"fmt","","",113,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",113,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"bool"}}],[11,"from_raw","","",113,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",113,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",111,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",111,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"created","","buffer creation succeeded",117,{"inputs":[{"name":"self"},{"name":"wlbuffer"}],"output":{"name":"eventresult"}}],[11,"failed","","buffer creation failed",117,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[0,"pointer_constraints","wayland_protocols::unstable","protocol for constraining pointer motions",null,null],[0,"v1","wayland_protocols::unstable::pointer_constraints","",null,null],[0,"client","wayland_protocols::unstable::pointer_constraints::v1","Client-side API of this protocol",null,null],[0,"zwp_pointer_constraints_v1","wayland_protocols::unstable::pointer_constraints::v1::client","constrain the movement of a pointer",null,null],[3,"ZwpPointerConstraintsV1","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1","",null,null],[4,"Error","","wp_pointer_constraints error values",null,null],[13,"AlreadyConstrained","","pointer constraint already requested on that surface",118,null],[4,"Lifetime","","constraint lifetime",null,null],[13,"Oneshot","","the pointer constraint is defunct once deactivated",119,null],[13,"Persistent","","the pointer constraint may reactivate",119,null],[0,"zwp_locked_pointer_v1","wayland_protocols::unstable::pointer_constraints::v1::client","receive relative pointer motion events",null,null],[3,"ZwpLockedPointerV1","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_locked_pointer_v1","",null,null],[3,"Implementation","","",null,null],[12,"locked","","lock activation event",120,null],[12,"unlocked","","lock deactivation event",120,null],[0,"zwp_confined_pointer_v1","wayland_protocols::unstable::pointer_constraints::v1::client","confined pointer object",null,null],[3,"ZwpConfinedPointerV1","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_confined_pointer_v1","",null,null],[3,"Implementation","","",null,null],[12,"confined","","pointer confined",121,null],[12,"unconfined","","pointer unconfined",121,null],[0,"server","wayland_protocols::unstable::pointer_constraints::v1","Server-side API of this protocol",null,null],[0,"zwp_pointer_constraints_v1","wayland_protocols::unstable::pointer_constraints::v1::server","constrain the movement of a pointer",null,null],[3,"ZwpPointerConstraintsV1","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_pointer_constraints_v1","",null,null],[3,"Implementation","","",null,null],[12,"destroy","","destroy the pointer constraints manager object",122,null],[12,"lock_pointer","","lock pointer to a position",122,null],[12,"confine_pointer","","confine pointer to a region",122,null],[4,"Error","","wp_pointer_constraints error values",null,null],[13,"AlreadyConstrained","","pointer constraint already requested on that surface",123,null],[4,"Lifetime","","constraint lifetime",null,null],[13,"Oneshot","","the pointer constraint is defunct once deactivated",124,null],[13,"Persistent","","the pointer constraint may reactivate",124,null],[0,"zwp_locked_pointer_v1","wayland_protocols::unstable::pointer_constraints::v1::server","receive relative pointer motion events",null,null],[3,"ZwpLockedPointerV1","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_locked_pointer_v1","",null,null],[3,"Implementation","","",null,null],[12,"destroy","","destroy the locked pointer object",125,null],[12,"set_cursor_position_hint","","set the pointer cursor position hint",125,null],[12,"set_region","","set a new lock region",125,null],[0,"zwp_confined_pointer_v1","wayland_protocols::unstable::pointer_constraints::v1::server","confined pointer object",null,null],[3,"ZwpConfinedPointerV1","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_confined_pointer_v1","",null,null],[3,"Implementation","","",null,null],[12,"destroy","","destroy the confined pointer object",126,null],[12,"set_region","","set a new confine region",126,null],[11,"ptr","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1","",127,null],[11,"from_ptr_new","","",127,null],[11,"from_ptr_initialized","","",127,null],[11,"interface_ptr","","",127,null],[11,"interface_name","","",127,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",127,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",127,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",127,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",127,{"inputs":[{"name":"self"},{"name":"zwppointerconstraintsv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",127,null],[11,"get_user_data","","",127,null],[11,"clone_unchecked","","",127,{"inputs":[{"name":"self"}],"output":{"name":"zwppointerconstraintsv1"}}],[11,"clone","","",118,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",118,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",118,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",118,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",118,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",119,{"inputs":[{"name":"self"}],"output":{"name":"lifetime"}}],[11,"fmt","","",119,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",119,{"inputs":[{"name":"self"},{"name":"lifetime"}],"output":{"name":"bool"}}],[11,"from_raw","","",119,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",119,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"destroy","","destroy the pointer constraints manager object",127,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"lock_pointer","","lock pointer to a position",127,{"inputs":[{"name":"self"},{"name":"wlsurface"},{"name":"wlpointer"},{"name":"option"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"confine_pointer","","confine pointer to a region",127,{"inputs":[{"name":"self"},{"name":"wlsurface"},{"name":"wlpointer"},{"name":"option"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_locked_pointer_v1","",128,null],[11,"from_ptr_new","","",128,null],[11,"from_ptr_initialized","","",128,null],[11,"interface_ptr","","",128,null],[11,"interface_name","","",128,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",128,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",128,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",128,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",128,{"inputs":[{"name":"self"},{"name":"zwplockedpointerv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",128,null],[11,"get_user_data","","",128,null],[11,"clone_unchecked","","",128,{"inputs":[{"name":"self"}],"output":{"name":"zwplockedpointerv1"}}],[11,"__dispatch_msg","","",128,null],[11,"clone","","",120,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",120,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"destroy","","destroy the locked pointer object",128,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"set_cursor_position_hint","","set the pointer cursor position hint",128,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"}],"output":{"name":"requestresult"}}],[11,"set_region","","set a new lock region",128,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_confined_pointer_v1","",129,null],[11,"from_ptr_new","","",129,null],[11,"from_ptr_initialized","","",129,null],[11,"interface_ptr","","",129,null],[11,"interface_name","","",129,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",129,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",129,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",129,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",129,{"inputs":[{"name":"self"},{"name":"zwpconfinedpointerv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",129,null],[11,"get_user_data","","",129,null],[11,"clone_unchecked","","",129,{"inputs":[{"name":"self"}],"output":{"name":"zwpconfinedpointerv1"}}],[11,"__dispatch_msg","","",129,null],[11,"clone","","",121,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",121,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"destroy","","destroy the confined pointer object",129,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"set_region","","set a new confine region",129,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_pointer_constraints_v1","",130,null],[11,"from_ptr_new","","",130,null],[11,"from_ptr_initialized","","",130,null],[11,"interface_ptr","","",130,null],[11,"interface_name","","",130,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",130,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",130,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",130,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",130,{"inputs":[{"name":"self"},{"name":"zwppointerconstraintsv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",130,null],[11,"get_user_data","","",130,null],[11,"clone_unchecked","","",130,{"inputs":[{"name":"self"}],"output":{"name":"zwppointerconstraintsv1"}}],[11,"__dispatch_msg","","",130,null],[11,"clone","","",123,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",123,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",123,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",123,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",123,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",124,{"inputs":[{"name":"self"}],"output":{"name":"lifetime"}}],[11,"fmt","","",124,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",124,{"inputs":[{"name":"self"},{"name":"lifetime"}],"output":{"name":"bool"}}],[11,"from_raw","","",124,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",124,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",122,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",122,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"ptr","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_locked_pointer_v1","",131,null],[11,"from_ptr_new","","",131,null],[11,"from_ptr_initialized","","",131,null],[11,"interface_ptr","","",131,null],[11,"interface_name","","",131,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",131,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",131,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",131,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",131,{"inputs":[{"name":"self"},{"name":"zwplockedpointerv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",131,null],[11,"get_user_data","","",131,null],[11,"clone_unchecked","","",131,{"inputs":[{"name":"self"}],"output":{"name":"zwplockedpointerv1"}}],[11,"__dispatch_msg","","",131,null],[11,"clone","","",125,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",125,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"locked","","lock activation event",131,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"unlocked","","lock deactivation event",131,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"ptr","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_confined_pointer_v1","",132,null],[11,"from_ptr_new","","",132,null],[11,"from_ptr_initialized","","",132,null],[11,"interface_ptr","","",132,null],[11,"interface_name","","",132,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",132,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",132,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",132,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",132,{"inputs":[{"name":"self"},{"name":"zwpconfinedpointerv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",132,null],[11,"get_user_data","","",132,null],[11,"clone_unchecked","","",132,{"inputs":[{"name":"self"}],"output":{"name":"zwpconfinedpointerv1"}}],[11,"__dispatch_msg","","",132,null],[11,"clone","","",126,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",126,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"confined","","pointer confined",132,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"unconfined","","pointer unconfined",132,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[0,"pointer_gestures","wayland_protocols::unstable","Pointer gestures protocol",null,null],[0,"v1","wayland_protocols::unstable::pointer_gestures","",null,null],[0,"client","wayland_protocols::unstable::pointer_gestures::v1","Client-side API of this protocol",null,null],[0,"zwp_pointer_gestures_v1","wayland_protocols::unstable::pointer_gestures::v1::client","touchpad gestures",null,null],[3,"ZwpPointerGesturesV1","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gestures_v1","",null,null],[0,"zwp_pointer_gesture_swipe_v1","wayland_protocols::unstable::pointer_gestures::v1::client","a swipe gesture object",null,null],[3,"ZwpPointerGestureSwipeV1","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1","",null,null],[3,"Implementation","","",null,null],[12,"begin","","multi-finger swipe begin",133,null],[12,"update","","multi-finger swipe motion",133,null],[12,"end","","multi-finger swipe end",133,null],[0,"zwp_pointer_gesture_pinch_v1","wayland_protocols::unstable::pointer_gestures::v1::client","a pinch gesture object",null,null],[3,"ZwpPointerGesturePinchV1","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1","",null,null],[3,"Implementation","","",null,null],[12,"begin","","multi-finger pinch begin",134,null],[12,"update","","multi-finger pinch motion",134,null],[12,"end","","multi-finger pinch end",134,null],[0,"server","wayland_protocols::unstable::pointer_gestures::v1","Server-side API of this protocol",null,null],[0,"zwp_pointer_gestures_v1","wayland_protocols::unstable::pointer_gestures::v1::server","touchpad gestures",null,null],[3,"ZwpPointerGesturesV1","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gestures_v1","",null,null],[3,"Implementation","","",null,null],[12,"get_swipe_gesture","","get swipe gesture",135,null],[12,"get_pinch_gesture","","get pinch gesture",135,null],[0,"zwp_pointer_gesture_swipe_v1","wayland_protocols::unstable::pointer_gestures::v1::server","a swipe gesture object",null,null],[3,"ZwpPointerGestureSwipeV1","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1","",null,null],[3,"Implementation","","",null,null],[12,"destroy","","destroy the pointer swipe gesture object",136,null],[0,"zwp_pointer_gesture_pinch_v1","wayland_protocols::unstable::pointer_gestures::v1::server","a pinch gesture object",null,null],[3,"ZwpPointerGesturePinchV1","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1","",null,null],[3,"Implementation","","",null,null],[12,"destroy","","destroy the pinch gesture object",137,null],[11,"ptr","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gestures_v1","",138,null],[11,"from_ptr_new","","",138,null],[11,"from_ptr_initialized","","",138,null],[11,"interface_ptr","","",138,null],[11,"interface_name","","",138,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",138,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",138,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",138,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",138,{"inputs":[{"name":"self"},{"name":"zwppointergesturesv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",138,null],[11,"get_user_data","","",138,null],[11,"clone_unchecked","","",138,{"inputs":[{"name":"self"}],"output":{"name":"zwppointergesturesv1"}}],[11,"get_swipe_gesture","","get swipe gesture",138,{"inputs":[{"name":"self"},{"name":"wlpointer"}],"output":{"name":"zwppointergestureswipev1"}}],[11,"get_pinch_gesture","","get pinch gesture",138,{"inputs":[{"name":"self"},{"name":"wlpointer"}],"output":{"name":"zwppointergesturepinchv1"}}],[11,"ptr","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1","",139,null],[11,"from_ptr_new","","",139,null],[11,"from_ptr_initialized","","",139,null],[11,"interface_ptr","","",139,null],[11,"interface_name","","",139,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",139,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",139,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",139,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",139,{"inputs":[{"name":"self"},{"name":"zwppointergestureswipev1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",139,null],[11,"get_user_data","","",139,null],[11,"clone_unchecked","","",139,{"inputs":[{"name":"self"}],"output":{"name":"zwppointergestureswipev1"}}],[11,"__dispatch_msg","","",139,null],[11,"clone","","",133,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",133,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"destroy","","destroy the pointer swipe gesture object",139,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1","",140,null],[11,"from_ptr_new","","",140,null],[11,"from_ptr_initialized","","",140,null],[11,"interface_ptr","","",140,null],[11,"interface_name","","",140,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",140,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",140,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",140,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",140,{"inputs":[{"name":"self"},{"name":"zwppointergesturepinchv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",140,null],[11,"get_user_data","","",140,null],[11,"clone_unchecked","","",140,{"inputs":[{"name":"self"}],"output":{"name":"zwppointergesturepinchv1"}}],[11,"__dispatch_msg","","",140,null],[11,"clone","","",134,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",134,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"destroy","","destroy the pinch gesture object",140,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gestures_v1","",141,null],[11,"from_ptr_new","","",141,null],[11,"from_ptr_initialized","","",141,null],[11,"interface_ptr","","",141,null],[11,"interface_name","","",141,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",141,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",141,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",141,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",141,{"inputs":[{"name":"self"},{"name":"zwppointergesturesv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",141,null],[11,"get_user_data","","",141,null],[11,"clone_unchecked","","",141,{"inputs":[{"name":"self"}],"output":{"name":"zwppointergesturesv1"}}],[11,"__dispatch_msg","","",141,null],[11,"clone","","",135,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",135,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"ptr","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1","",142,null],[11,"from_ptr_new","","",142,null],[11,"from_ptr_initialized","","",142,null],[11,"interface_ptr","","",142,null],[11,"interface_name","","",142,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",142,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",142,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",142,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",142,{"inputs":[{"name":"self"},{"name":"zwppointergestureswipev1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",142,null],[11,"get_user_data","","",142,null],[11,"clone_unchecked","","",142,{"inputs":[{"name":"self"}],"output":{"name":"zwppointergestureswipev1"}}],[11,"__dispatch_msg","","",142,null],[11,"clone","","",136,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",136,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"begin","","multi-finger swipe begin",142,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"wlsurface"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"update","","multi-finger swipe motion",142,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"f64"},{"name":"f64"}],"output":{"name":"eventresult"}}],[11,"end","","multi-finger swipe end",142,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"i32"}],"output":{"name":"eventresult"}}],[11,"ptr","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1","",143,null],[11,"from_ptr_new","","",143,null],[11,"from_ptr_initialized","","",143,null],[11,"interface_ptr","","",143,null],[11,"interface_name","","",143,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",143,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",143,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",143,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",143,{"inputs":[{"name":"self"},{"name":"zwppointergesturepinchv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",143,null],[11,"get_user_data","","",143,null],[11,"clone_unchecked","","",143,{"inputs":[{"name":"self"}],"output":{"name":"zwppointergesturepinchv1"}}],[11,"__dispatch_msg","","",143,null],[11,"clone","","",137,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",137,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"begin","","multi-finger pinch begin",143,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"wlsurface"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"update","","multi-finger pinch motion",143,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"eventresult"}}],[11,"end","","multi-finger pinch end",143,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"i32"}],"output":{"name":"eventresult"}}],[0,"relative_pointer","wayland_protocols::unstable","protocol for relative pointer motion events",null,null],[0,"v1","wayland_protocols::unstable::relative_pointer","",null,null],[0,"client","wayland_protocols::unstable::relative_pointer::v1","Client-side API of this protocol",null,null],[0,"zwp_relative_pointer_manager_v1","wayland_protocols::unstable::relative_pointer::v1::client","get relative pointer objects",null,null],[3,"ZwpRelativePointerManagerV1","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_manager_v1","",null,null],[0,"zwp_relative_pointer_v1","wayland_protocols::unstable::relative_pointer::v1::client","relative pointer object",null,null],[3,"ZwpRelativePointerV1","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_v1","",null,null],[3,"Implementation","","",null,null],[12,"relative_motion","","relative pointer motion",144,null],[0,"server","wayland_protocols::unstable::relative_pointer::v1","Server-side API of this protocol",null,null],[0,"zwp_relative_pointer_manager_v1","wayland_protocols::unstable::relative_pointer::v1::server","get relative pointer objects",null,null],[3,"ZwpRelativePointerManagerV1","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_manager_v1","",null,null],[3,"Implementation","","",null,null],[12,"destroy","","destroy the relative pointer manager object",145,null],[12,"get_relative_pointer","","get a relative pointer object",145,null],[0,"zwp_relative_pointer_v1","wayland_protocols::unstable::relative_pointer::v1::server","relative pointer object",null,null],[3,"ZwpRelativePointerV1","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_v1","",null,null],[3,"Implementation","","",null,null],[12,"destroy","","release the relative pointer object",146,null],[11,"ptr","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_manager_v1","",147,null],[11,"from_ptr_new","","",147,null],[11,"from_ptr_initialized","","",147,null],[11,"interface_ptr","","",147,null],[11,"interface_name","","",147,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",147,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",147,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",147,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",147,{"inputs":[{"name":"self"},{"name":"zwprelativepointermanagerv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",147,null],[11,"get_user_data","","",147,null],[11,"clone_unchecked","","",147,{"inputs":[{"name":"self"}],"output":{"name":"zwprelativepointermanagerv1"}}],[11,"destroy","","destroy the relative pointer manager object",147,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"get_relative_pointer","","get a relative pointer object",147,{"inputs":[{"name":"self"},{"name":"wlpointer"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_v1","",148,null],[11,"from_ptr_new","","",148,null],[11,"from_ptr_initialized","","",148,null],[11,"interface_ptr","","",148,null],[11,"interface_name","","",148,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",148,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",148,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",148,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",148,{"inputs":[{"name":"self"},{"name":"zwprelativepointerv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",148,null],[11,"get_user_data","","",148,null],[11,"clone_unchecked","","",148,{"inputs":[{"name":"self"}],"output":{"name":"zwprelativepointerv1"}}],[11,"__dispatch_msg","","",148,null],[11,"clone","","",144,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",144,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"destroy","","release the relative pointer object",148,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_manager_v1","",149,null],[11,"from_ptr_new","","",149,null],[11,"from_ptr_initialized","","",149,null],[11,"interface_ptr","","",149,null],[11,"interface_name","","",149,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",149,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",149,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",149,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",149,{"inputs":[{"name":"self"},{"name":"zwprelativepointermanagerv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",149,null],[11,"get_user_data","","",149,null],[11,"clone_unchecked","","",149,{"inputs":[{"name":"self"}],"output":{"name":"zwprelativepointermanagerv1"}}],[11,"__dispatch_msg","","",149,null],[11,"clone","","",145,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",145,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"ptr","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_v1","",150,null],[11,"from_ptr_new","","",150,null],[11,"from_ptr_initialized","","",150,null],[11,"interface_ptr","","",150,null],[11,"interface_name","","",150,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",150,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",150,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",150,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",150,{"inputs":[{"name":"self"},{"name":"zwprelativepointerv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",150,null],[11,"get_user_data","","",150,null],[11,"clone_unchecked","","",150,{"inputs":[{"name":"self"}],"output":{"name":"zwprelativepointerv1"}}],[11,"__dispatch_msg","","",150,null],[11,"clone","","",146,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",146,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"relative_motion","","relative pointer motion",150,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"eventresult"}}],[0,"tablet","wayland_protocols::unstable","Wayland protocol for graphics tablets",null,null],[0,"v1","wayland_protocols::unstable::tablet","",null,null],[0,"client","wayland_protocols::unstable::tablet::v1","Client-side API of this protocol",null,null],[0,"zwp_tablet_manager_v1","wayland_protocols::unstable::tablet::v1::client","controller object for graphic tablet devices",null,null],[3,"ZwpTabletManagerV1","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_manager_v1","",null,null],[0,"zwp_tablet_seat_v1","wayland_protocols::unstable::tablet::v1::client","controller object for graphic tablet devices of a seat",null,null],[3,"ZwpTabletSeatV1","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_seat_v1","",null,null],[3,"Implementation","","",null,null],[12,"tablet_added","","new device notification",151,null],[12,"tool_added","","a new tool has been used with a tablet",151,null],[0,"zwp_tablet_tool_v1","wayland_protocols::unstable::tablet::v1::client","a physical tablet tool",null,null],[3,"ZwpTabletToolV1","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","",null,null],[3,"Implementation","","",null,null],[12,"type_","","tool type",152,null],[12,"hardware_serial","","unique hardware serial number of the tool",152,null],[12,"hardware_id_wacom","","hardware id notification in Wacom's format",152,null],[12,"capability","","tool capability notification",152,null],[12,"done","","tool description events sequence complete",152,null],[12,"removed","","tool removed",152,null],[12,"proximity_in","","proximity in event",152,null],[12,"proximity_out","","proximity out event",152,null],[12,"down","","tablet tool is making contact",152,null],[12,"up","","tablet tool is no longer making contact",152,null],[12,"motion","","motion event",152,null],[12,"pressure","","pressure change event",152,null],[12,"distance","","distance change event",152,null],[12,"tilt","","tilt change event",152,null],[12,"rotation","","z-rotation change event",152,null],[12,"slider","","Slider position change event",152,null],[12,"wheel","","Wheel delta event",152,null],[12,"button","","button event",152,null],[12,"frame","","frame event",152,null],[4,"Type","","a physical tool type",null,null],[13,"Pen","","Pen",153,null],[13,"Eraser","","Eraser",153,null],[13,"Brush","","Brush",153,null],[13,"Pencil","","Pencil",153,null],[13,"Airbrush","","Airbrush",153,null],[13,"Finger","","Finger",153,null],[13,"Mouse","","Mouse",153,null],[13,"Lens","","Lens",153,null],[4,"Capability","","capability flags for a tool",null,null],[13,"Tilt","","Tilt axes",154,null],[13,"Pressure","","Pressure axis",154,null],[13,"Distance","","Distance axis",154,null],[13,"Rotation","","Z-rotation axis",154,null],[13,"Slider","","Slider axis",154,null],[13,"Wheel","","Wheel axis",154,null],[4,"ButtonState","","physical button state",null,null],[13,"Released","","button is not pressed",155,null],[13,"Pressed","","button is pressed",155,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",156,null],[0,"zwp_tablet_v1","wayland_protocols::unstable::tablet::v1::client","graphics tablet device",null,null],[3,"ZwpTabletV1","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1","",null,null],[3,"Implementation","","",null,null],[12,"name","","tablet device name",157,null],[12,"id","","tablet device USB vendor/product id",157,null],[12,"path","","path to the device",157,null],[12,"done","","tablet description events sequence complete",157,null],[12,"removed","","tablet removed event",157,null],[0,"server","wayland_protocols::unstable::tablet::v1","Server-side API of this protocol",null,null],[0,"zwp_tablet_manager_v1","wayland_protocols::unstable::tablet::v1::server","controller object for graphic tablet devices",null,null],[3,"ZwpTabletManagerV1","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_manager_v1","",null,null],[3,"Implementation","","",null,null],[12,"get_tablet_seat","","get the tablet seat",158,null],[12,"destroy","","release the memory for the tablet manager object",158,null],[0,"zwp_tablet_seat_v1","wayland_protocols::unstable::tablet::v1::server","controller object for graphic tablet devices of a seat",null,null],[3,"ZwpTabletSeatV1","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_seat_v1","",null,null],[3,"Implementation","","",null,null],[12,"destroy","","release the memory for the tablet seat object",159,null],[0,"zwp_tablet_tool_v1","wayland_protocols::unstable::tablet::v1::server","a physical tablet tool",null,null],[3,"ZwpTabletToolV1","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","",null,null],[3,"Implementation","","",null,null],[12,"set_cursor","","set the tablet tool's surface",160,null],[12,"destroy","","destroy the tool object",160,null],[4,"Type","","a physical tool type",null,null],[13,"Pen","","Pen",161,null],[13,"Eraser","","Eraser",161,null],[13,"Brush","","Brush",161,null],[13,"Pencil","","Pencil",161,null],[13,"Airbrush","","Airbrush",161,null],[13,"Finger","","Finger",161,null],[13,"Mouse","","Mouse",161,null],[13,"Lens","","Lens",161,null],[4,"Capability","","capability flags for a tool",null,null],[13,"Tilt","","Tilt axes",162,null],[13,"Pressure","","Pressure axis",162,null],[13,"Distance","","Distance axis",162,null],[13,"Rotation","","Z-rotation axis",162,null],[13,"Slider","","Slider axis",162,null],[13,"Wheel","","Wheel axis",162,null],[4,"ButtonState","","physical button state",null,null],[13,"Released","","button is not pressed",163,null],[13,"Pressed","","button is pressed",163,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",164,null],[0,"zwp_tablet_v1","wayland_protocols::unstable::tablet::v1::server","graphics tablet device",null,null],[3,"ZwpTabletV1","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1","",null,null],[3,"Implementation","","",null,null],[12,"destroy","","destroy the tablet object",165,null],[11,"ptr","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_manager_v1","",166,null],[11,"from_ptr_new","","",166,null],[11,"from_ptr_initialized","","",166,null],[11,"interface_ptr","","",166,null],[11,"interface_name","","",166,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",166,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",166,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",166,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",166,{"inputs":[{"name":"self"},{"name":"zwptabletmanagerv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",166,null],[11,"get_user_data","","",166,null],[11,"clone_unchecked","","",166,{"inputs":[{"name":"self"}],"output":{"name":"zwptabletmanagerv1"}}],[11,"get_tablet_seat","","get the tablet seat",166,{"inputs":[{"name":"self"},{"name":"wlseat"}],"output":{"name":"requestresult"}}],[11,"destroy","","release the memory for the tablet manager object",166,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_seat_v1","",167,null],[11,"from_ptr_new","","",167,null],[11,"from_ptr_initialized","","",167,null],[11,"interface_ptr","","",167,null],[11,"interface_name","","",167,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",167,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",167,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",167,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",167,{"inputs":[{"name":"self"},{"name":"zwptabletseatv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",167,null],[11,"get_user_data","","",167,null],[11,"clone_unchecked","","",167,{"inputs":[{"name":"self"}],"output":{"name":"zwptabletseatv1"}}],[11,"__dispatch_msg","","",167,null],[11,"clone","","",151,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",151,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"destroy","","release the memory for the tablet seat object",167,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","",168,null],[11,"from_ptr_new","","",168,null],[11,"from_ptr_initialized","","",168,null],[11,"interface_ptr","","",168,null],[11,"interface_name","","",168,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",168,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",168,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",168,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",168,{"inputs":[{"name":"self"},{"name":"zwptablettoolv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",168,null],[11,"get_user_data","","",168,null],[11,"clone_unchecked","","",168,{"inputs":[{"name":"self"}],"output":{"name":"zwptablettoolv1"}}],[11,"__dispatch_msg","","",168,null],[11,"clone","","",153,{"inputs":[{"name":"self"}],"output":{"name":"type"}}],[11,"fmt","","",153,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",153,{"inputs":[{"name":"self"},{"name":"type"}],"output":{"name":"bool"}}],[11,"from_raw","","",153,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",153,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",154,{"inputs":[{"name":"self"}],"output":{"name":"capability"}}],[11,"fmt","","",154,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",154,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"from_raw","","",154,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",154,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",155,{"inputs":[{"name":"self"}],"output":{"name":"buttonstate"}}],[11,"fmt","","",155,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",155,{"inputs":[{"name":"self"},{"name":"buttonstate"}],"output":{"name":"bool"}}],[11,"from_raw","","",155,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",155,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",156,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",156,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",156,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",156,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",156,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",152,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",152,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"set_cursor","","set the tablet tool's surface",168,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"option"},{"name":"i32"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"destroy","","destroy the tool object",168,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1","",169,null],[11,"from_ptr_new","","",169,null],[11,"from_ptr_initialized","","",169,null],[11,"interface_ptr","","",169,null],[11,"interface_name","","",169,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",169,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",169,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",169,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",169,{"inputs":[{"name":"self"},{"name":"zwptabletv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",169,null],[11,"get_user_data","","",169,null],[11,"clone_unchecked","","",169,{"inputs":[{"name":"self"}],"output":{"name":"zwptabletv1"}}],[11,"__dispatch_msg","","",169,null],[11,"clone","","",157,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",157,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"destroy","","destroy the tablet object",169,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_manager_v1","",170,null],[11,"from_ptr_new","","",170,null],[11,"from_ptr_initialized","","",170,null],[11,"interface_ptr","","",170,null],[11,"interface_name","","",170,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",170,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",170,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",170,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",170,{"inputs":[{"name":"self"},{"name":"zwptabletmanagerv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",170,null],[11,"get_user_data","","",170,null],[11,"clone_unchecked","","",170,{"inputs":[{"name":"self"}],"output":{"name":"zwptabletmanagerv1"}}],[11,"__dispatch_msg","","",170,null],[11,"clone","","",158,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",158,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"ptr","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_seat_v1","",171,null],[11,"from_ptr_new","","",171,null],[11,"from_ptr_initialized","","",171,null],[11,"interface_ptr","","",171,null],[11,"interface_name","","",171,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",171,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",171,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",171,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",171,{"inputs":[{"name":"self"},{"name":"zwptabletseatv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",171,null],[11,"get_user_data","","",171,null],[11,"clone_unchecked","","",171,{"inputs":[{"name":"self"}],"output":{"name":"zwptabletseatv1"}}],[11,"__dispatch_msg","","",171,null],[11,"clone","","",159,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",159,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"tablet_added","","new device notification",171,{"inputs":[{"name":"self"},{"name":"zwptabletv1"}],"output":{"name":"eventresult"}}],[11,"tool_added","","a new tool has been used with a tablet",171,{"inputs":[{"name":"self"},{"name":"zwptablettoolv1"}],"output":{"name":"eventresult"}}],[11,"ptr","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","",172,null],[11,"from_ptr_new","","",172,null],[11,"from_ptr_initialized","","",172,null],[11,"interface_ptr","","",172,null],[11,"interface_name","","",172,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",172,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",172,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",172,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",172,{"inputs":[{"name":"self"},{"name":"zwptablettoolv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",172,null],[11,"get_user_data","","",172,null],[11,"clone_unchecked","","",172,{"inputs":[{"name":"self"}],"output":{"name":"zwptablettoolv1"}}],[11,"__dispatch_msg","","",172,null],[11,"clone","","",161,{"inputs":[{"name":"self"}],"output":{"name":"type"}}],[11,"fmt","","",161,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",161,{"inputs":[{"name":"self"},{"name":"type"}],"output":{"name":"bool"}}],[11,"from_raw","","",161,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",161,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",162,{"inputs":[{"name":"self"}],"output":{"name":"capability"}}],[11,"fmt","","",162,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",162,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"from_raw","","",162,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",162,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",163,{"inputs":[{"name":"self"}],"output":{"name":"buttonstate"}}],[11,"fmt","","",163,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",163,{"inputs":[{"name":"self"},{"name":"buttonstate"}],"output":{"name":"bool"}}],[11,"from_raw","","",163,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",163,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",164,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",164,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",164,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",164,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",164,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",160,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",160,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"_type","","tool type",172,{"inputs":[{"name":"self"},{"name":"type"}],"output":{"name":"eventresult"}}],[11,"hardware_serial","","unique hardware serial number of the tool",172,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"hardware_id_wacom","","hardware id notification in Wacom's format",172,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"capability","","tool capability notification",172,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"eventresult"}}],[11,"done","","tool description events sequence complete",172,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"removed","","tool removed",172,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"proximity_in","","proximity in event",172,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"zwptabletv1"},{"name":"wlsurface"}],"output":{"name":"eventresult"}}],[11,"proximity_out","","proximity out event",172,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"down","","tablet tool is making contact",172,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"up","","tablet tool is no longer making contact",172,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"motion","","motion event",172,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"}],"output":{"name":"eventresult"}}],[11,"pressure","","pressure change event",172,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"distance","","distance change event",172,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"tilt","","tilt change event",172,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"eventresult"}}],[11,"rotation","","z-rotation change event",172,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"eventresult"}}],[11,"slider","","Slider position change event",172,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"eventresult"}}],[11,"wheel","","Wheel delta event",172,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"eventresult"}}],[11,"button","","button event",172,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"buttonstate"}],"output":{"name":"eventresult"}}],[11,"frame","","frame event",172,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"ptr","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1","",173,null],[11,"from_ptr_new","","",173,null],[11,"from_ptr_initialized","","",173,null],[11,"interface_ptr","","",173,null],[11,"interface_name","","",173,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",173,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",173,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",173,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",173,{"inputs":[{"name":"self"},{"name":"zwptabletv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",173,null],[11,"get_user_data","","",173,null],[11,"clone_unchecked","","",173,{"inputs":[{"name":"self"}],"output":{"name":"zwptabletv1"}}],[11,"__dispatch_msg","","",173,null],[11,"clone","","",165,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",165,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"name","","tablet device name",173,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"eventresult"}}],[11,"id","","tablet device USB vendor/product id",173,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"path","","path to the device",173,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"eventresult"}}],[11,"done","","tablet description events sequence complete",173,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"removed","","tablet removed event",173,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[0,"v2","wayland_protocols::unstable::tablet","",null,null],[0,"client","wayland_protocols::unstable::tablet::v2","Client-side API of this protocol",null,null],[0,"zwp_tablet_manager_v2","wayland_protocols::unstable::tablet::v2::client","controller object for graphic tablet devices",null,null],[3,"ZwpTabletManagerV2","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_manager_v2","",null,null],[0,"zwp_tablet_seat_v2","wayland_protocols::unstable::tablet::v2::client","controller object for graphic tablet devices of a seat",null,null],[3,"ZwpTabletSeatV2","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2","",null,null],[3,"Implementation","","",null,null],[12,"tablet_added","","new device notification",174,null],[12,"tool_added","","a new tool has been used with a tablet",174,null],[12,"pad_added","","new pad notification",174,null],[0,"zwp_tablet_tool_v2","wayland_protocols::unstable::tablet::v2::client","a physical tablet tool",null,null],[3,"ZwpTabletToolV2","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","",null,null],[3,"Implementation","","",null,null],[12,"type_","","tool type",175,null],[12,"hardware_serial","","unique hardware serial number of the tool",175,null],[12,"hardware_id_wacom","","hardware id notification in Wacom's format",175,null],[12,"capability","","tool capability notification",175,null],[12,"done","","tool description events sequence complete",175,null],[12,"removed","","tool removed",175,null],[12,"proximity_in","","proximity in event",175,null],[12,"proximity_out","","proximity out event",175,null],[12,"down","","tablet tool is making contact",175,null],[12,"up","","tablet tool is no longer making contact",175,null],[12,"motion","","motion event",175,null],[12,"pressure","","pressure change event",175,null],[12,"distance","","distance change event",175,null],[12,"tilt","","tilt change event",175,null],[12,"rotation","","z-rotation change event",175,null],[12,"slider","","Slider position change event",175,null],[12,"wheel","","Wheel delta event",175,null],[12,"button","","button event",175,null],[12,"frame","","frame event",175,null],[4,"Type","","a physical tool type",null,null],[13,"Pen","","Pen",176,null],[13,"Eraser","","Eraser",176,null],[13,"Brush","","Brush",176,null],[13,"Pencil","","Pencil",176,null],[13,"Airbrush","","Airbrush",176,null],[13,"Finger","","Finger",176,null],[13,"Mouse","","Mouse",176,null],[13,"Lens","","Lens",176,null],[4,"Capability","","capability flags for a tool",null,null],[13,"Tilt","","Tilt axes",177,null],[13,"Pressure","","Pressure axis",177,null],[13,"Distance","","Distance axis",177,null],[13,"Rotation","","Z-rotation axis",177,null],[13,"Slider","","Slider axis",177,null],[13,"Wheel","","Wheel axis",177,null],[4,"ButtonState","","physical button state",null,null],[13,"Released","","button is not pressed",178,null],[13,"Pressed","","button is pressed",178,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",179,null],[0,"zwp_tablet_v2","wayland_protocols::unstable::tablet::v2::client","graphics tablet device",null,null],[3,"ZwpTabletV2","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2","",null,null],[3,"Implementation","","",null,null],[12,"name","","tablet device name",180,null],[12,"id","","tablet device USB vendor/product id",180,null],[12,"path","","path to the device",180,null],[12,"done","","tablet description events sequence complete",180,null],[12,"removed","","tablet removed event",180,null],[0,"zwp_tablet_pad_ring_v2","wayland_protocols::unstable::tablet::v2::client","pad ring",null,null],[3,"ZwpTabletPadRingV2","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","",null,null],[3,"Implementation","","",null,null],[12,"source","","ring event source",181,null],[12,"angle","","angle changed",181,null],[12,"stop","","interaction stopped",181,null],[12,"frame","","end of a ring event sequence",181,null],[4,"Source","","ring axis source",null,null],[13,"Finger","","finger",182,null],[0,"zwp_tablet_pad_strip_v2","wayland_protocols::unstable::tablet::v2::client","pad strip",null,null],[3,"ZwpTabletPadStripV2","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","",null,null],[3,"Implementation","","",null,null],[12,"source","","strip event source",183,null],[12,"position","","position changed",183,null],[12,"stop","","interaction stopped",183,null],[12,"frame","","end of a strip event sequence",183,null],[4,"Source","","strip axis source",null,null],[13,"Finger","","finger",184,null],[0,"zwp_tablet_pad_group_v2","wayland_protocols::unstable::tablet::v2::client","a set of buttons, rings and strips",null,null],[3,"ZwpTabletPadGroupV2","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","",null,null],[3,"Implementation","","",null,null],[12,"buttons","","buttons announced",185,null],[12,"ring","","ring announced",185,null],[12,"strip","","strip announced",185,null],[12,"modes","","mode-switch ability announced",185,null],[12,"done","","tablet group description events sequence complete",185,null],[12,"mode_switch","","mode switch event",185,null],[0,"zwp_tablet_pad_v2","wayland_protocols::unstable::tablet::v2::client","a set of buttons, rings and strips",null,null],[3,"ZwpTabletPadV2","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","",null,null],[3,"Implementation","","",null,null],[12,"group","","group announced",186,null],[12,"path","","path to the device",186,null],[12,"buttons","","buttons announced",186,null],[12,"done","","pad description event sequence complete",186,null],[12,"button","","physical button state",186,null],[12,"enter","","enter event",186,null],[12,"leave","","enter event",186,null],[12,"removed","","pad removed event",186,null],[4,"ButtonState","","physical button state",null,null],[13,"Released","","the button is not pressed",187,null],[13,"Pressed","","the button is pressed",187,null],[0,"server","wayland_protocols::unstable::tablet::v2","Server-side API of this protocol",null,null],[0,"zwp_tablet_manager_v2","wayland_protocols::unstable::tablet::v2::server","controller object for graphic tablet devices",null,null],[3,"ZwpTabletManagerV2","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_manager_v2","",null,null],[3,"Implementation","","",null,null],[12,"get_tablet_seat","","get the tablet seat",188,null],[12,"destroy","","release the memory for the tablet manager object",188,null],[0,"zwp_tablet_seat_v2","wayland_protocols::unstable::tablet::v2::server","controller object for graphic tablet devices of a seat",null,null],[3,"ZwpTabletSeatV2","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2","",null,null],[3,"Implementation","","",null,null],[12,"destroy","","release the memory for the tablet seat object",189,null],[0,"zwp_tablet_tool_v2","wayland_protocols::unstable::tablet::v2::server","a physical tablet tool",null,null],[3,"ZwpTabletToolV2","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","",null,null],[3,"Implementation","","",null,null],[12,"set_cursor","","set the tablet tool's surface",190,null],[12,"destroy","","destroy the tool object",190,null],[4,"Type","","a physical tool type",null,null],[13,"Pen","","Pen",191,null],[13,"Eraser","","Eraser",191,null],[13,"Brush","","Brush",191,null],[13,"Pencil","","Pencil",191,null],[13,"Airbrush","","Airbrush",191,null],[13,"Finger","","Finger",191,null],[13,"Mouse","","Mouse",191,null],[13,"Lens","","Lens",191,null],[4,"Capability","","capability flags for a tool",null,null],[13,"Tilt","","Tilt axes",192,null],[13,"Pressure","","Pressure axis",192,null],[13,"Distance","","Distance axis",192,null],[13,"Rotation","","Z-rotation axis",192,null],[13,"Slider","","Slider axis",192,null],[13,"Wheel","","Wheel axis",192,null],[4,"ButtonState","","physical button state",null,null],[13,"Released","","button is not pressed",193,null],[13,"Pressed","","button is pressed",193,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",194,null],[0,"zwp_tablet_v2","wayland_protocols::unstable::tablet::v2::server","graphics tablet device",null,null],[3,"ZwpTabletV2","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2","",null,null],[3,"Implementation","","",null,null],[12,"destroy","","destroy the tablet object",195,null],[0,"zwp_tablet_pad_ring_v2","wayland_protocols::unstable::tablet::v2::server","pad ring",null,null],[3,"ZwpTabletPadRingV2","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2","",null,null],[3,"Implementation","","",null,null],[12,"set_feedback","","set compositor feedback",196,null],[12,"destroy","","destroy the ring object",196,null],[4,"Source","","ring axis source",null,null],[13,"Finger","","finger",197,null],[0,"zwp_tablet_pad_strip_v2","wayland_protocols::unstable::tablet::v2::server","pad strip",null,null],[3,"ZwpTabletPadStripV2","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2","",null,null],[3,"Implementation","","",null,null],[12,"set_feedback","","set compositor feedback",198,null],[12,"destroy","","destroy the strip object",198,null],[4,"Source","","strip axis source",null,null],[13,"Finger","","finger",199,null],[0,"zwp_tablet_pad_group_v2","wayland_protocols::unstable::tablet::v2::server","a set of buttons, rings and strips",null,null],[3,"ZwpTabletPadGroupV2","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2","",null,null],[3,"Implementation","","",null,null],[12,"destroy","","destroy the pad object",200,null],[0,"zwp_tablet_pad_v2","wayland_protocols::unstable::tablet::v2::server","a set of buttons, rings and strips",null,null],[3,"ZwpTabletPadV2","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","",null,null],[3,"Implementation","","",null,null],[12,"set_feedback","","set compositor feedback",201,null],[12,"destroy","","destroy the pad object",201,null],[4,"ButtonState","","physical button state",null,null],[13,"Released","","the button is not pressed",202,null],[13,"Pressed","","the button is pressed",202,null],[11,"ptr","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_manager_v2","",203,null],[11,"from_ptr_new","","",203,null],[11,"from_ptr_initialized","","",203,null],[11,"interface_ptr","","",203,null],[11,"interface_name","","",203,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",203,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",203,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",203,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",203,{"inputs":[{"name":"self"},{"name":"zwptabletmanagerv2"}],"output":{"name":"bool"}}],[11,"set_user_data","","",203,null],[11,"get_user_data","","",203,null],[11,"clone_unchecked","","",203,{"inputs":[{"name":"self"}],"output":{"name":"zwptabletmanagerv2"}}],[11,"get_tablet_seat","","get the tablet seat",203,{"inputs":[{"name":"self"},{"name":"wlseat"}],"output":{"name":"requestresult"}}],[11,"destroy","","release the memory for the tablet manager object",203,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2","",204,null],[11,"from_ptr_new","","",204,null],[11,"from_ptr_initialized","","",204,null],[11,"interface_ptr","","",204,null],[11,"interface_name","","",204,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",204,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",204,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",204,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",204,{"inputs":[{"name":"self"},{"name":"zwptabletseatv2"}],"output":{"name":"bool"}}],[11,"set_user_data","","",204,null],[11,"get_user_data","","",204,null],[11,"clone_unchecked","","",204,{"inputs":[{"name":"self"}],"output":{"name":"zwptabletseatv2"}}],[11,"__dispatch_msg","","",204,null],[11,"clone","","",174,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",174,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"destroy","","release the memory for the tablet seat object",204,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","",205,null],[11,"from_ptr_new","","",205,null],[11,"from_ptr_initialized","","",205,null],[11,"interface_ptr","","",205,null],[11,"interface_name","","",205,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",205,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",205,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",205,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",205,{"inputs":[{"name":"self"},{"name":"zwptablettoolv2"}],"output":{"name":"bool"}}],[11,"set_user_data","","",205,null],[11,"get_user_data","","",205,null],[11,"clone_unchecked","","",205,{"inputs":[{"name":"self"}],"output":{"name":"zwptablettoolv2"}}],[11,"__dispatch_msg","","",205,null],[11,"clone","","",176,{"inputs":[{"name":"self"}],"output":{"name":"type"}}],[11,"fmt","","",176,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",176,{"inputs":[{"name":"self"},{"name":"type"}],"output":{"name":"bool"}}],[11,"from_raw","","",176,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",176,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",177,{"inputs":[{"name":"self"}],"output":{"name":"capability"}}],[11,"fmt","","",177,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",177,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"from_raw","","",177,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",177,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",178,{"inputs":[{"name":"self"}],"output":{"name":"buttonstate"}}],[11,"fmt","","",178,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",178,{"inputs":[{"name":"self"},{"name":"buttonstate"}],"output":{"name":"bool"}}],[11,"from_raw","","",178,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",178,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",179,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",179,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",179,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",179,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",179,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",175,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",175,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"set_cursor","","set the tablet tool's surface",205,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"option"},{"name":"i32"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"destroy","","destroy the tool object",205,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2","",206,null],[11,"from_ptr_new","","",206,null],[11,"from_ptr_initialized","","",206,null],[11,"interface_ptr","","",206,null],[11,"interface_name","","",206,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",206,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",206,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",206,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",206,{"inputs":[{"name":"self"},{"name":"zwptabletv2"}],"output":{"name":"bool"}}],[11,"set_user_data","","",206,null],[11,"get_user_data","","",206,null],[11,"clone_unchecked","","",206,{"inputs":[{"name":"self"}],"output":{"name":"zwptabletv2"}}],[11,"__dispatch_msg","","",206,null],[11,"clone","","",180,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",180,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"destroy","","destroy the tablet object",206,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","",207,null],[11,"from_ptr_new","","",207,null],[11,"from_ptr_initialized","","",207,null],[11,"interface_ptr","","",207,null],[11,"interface_name","","",207,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",207,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",207,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",207,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",207,{"inputs":[{"name":"self"},{"name":"zwptabletpadringv2"}],"output":{"name":"bool"}}],[11,"set_user_data","","",207,null],[11,"get_user_data","","",207,null],[11,"clone_unchecked","","",207,{"inputs":[{"name":"self"}],"output":{"name":"zwptabletpadringv2"}}],[11,"__dispatch_msg","","",207,null],[11,"clone","","",182,{"inputs":[{"name":"self"}],"output":{"name":"source"}}],[11,"fmt","","",182,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",182,{"inputs":[{"name":"self"},{"name":"source"}],"output":{"name":"bool"}}],[11,"from_raw","","",182,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",182,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",181,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",181,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"set_feedback","","set compositor feedback",207,{"inputs":[{"name":"self"},{"name":"string"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"destroy","","destroy the ring object",207,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","",208,null],[11,"from_ptr_new","","",208,null],[11,"from_ptr_initialized","","",208,null],[11,"interface_ptr","","",208,null],[11,"interface_name","","",208,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",208,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",208,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",208,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",208,{"inputs":[{"name":"self"},{"name":"zwptabletpadstripv2"}],"output":{"name":"bool"}}],[11,"set_user_data","","",208,null],[11,"get_user_data","","",208,null],[11,"clone_unchecked","","",208,{"inputs":[{"name":"self"}],"output":{"name":"zwptabletpadstripv2"}}],[11,"__dispatch_msg","","",208,null],[11,"clone","","",184,{"inputs":[{"name":"self"}],"output":{"name":"source"}}],[11,"fmt","","",184,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",184,{"inputs":[{"name":"self"},{"name":"source"}],"output":{"name":"bool"}}],[11,"from_raw","","",184,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",184,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",183,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",183,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"set_feedback","","set compositor feedback",208,{"inputs":[{"name":"self"},{"name":"string"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"destroy","","destroy the strip object",208,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","",209,null],[11,"from_ptr_new","","",209,null],[11,"from_ptr_initialized","","",209,null],[11,"interface_ptr","","",209,null],[11,"interface_name","","",209,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",209,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",209,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",209,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",209,{"inputs":[{"name":"self"},{"name":"zwptabletpadgroupv2"}],"output":{"name":"bool"}}],[11,"set_user_data","","",209,null],[11,"get_user_data","","",209,null],[11,"clone_unchecked","","",209,{"inputs":[{"name":"self"}],"output":{"name":"zwptabletpadgroupv2"}}],[11,"__dispatch_msg","","",209,null],[11,"clone","","",185,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",185,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"destroy","","destroy the pad object",209,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","",210,null],[11,"from_ptr_new","","",210,null],[11,"from_ptr_initialized","","",210,null],[11,"interface_ptr","","",210,null],[11,"interface_name","","",210,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",210,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",210,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",210,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",210,{"inputs":[{"name":"self"},{"name":"zwptabletpadv2"}],"output":{"name":"bool"}}],[11,"set_user_data","","",210,null],[11,"get_user_data","","",210,null],[11,"clone_unchecked","","",210,{"inputs":[{"name":"self"}],"output":{"name":"zwptabletpadv2"}}],[11,"__dispatch_msg","","",210,null],[11,"clone","","",187,{"inputs":[{"name":"self"}],"output":{"name":"buttonstate"}}],[11,"fmt","","",187,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",187,{"inputs":[{"name":"self"},{"name":"buttonstate"}],"output":{"name":"bool"}}],[11,"from_raw","","",187,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",187,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",186,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",186,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"set_feedback","","set compositor feedback",210,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"string"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"destroy","","destroy the pad object",210,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_manager_v2","",211,null],[11,"from_ptr_new","","",211,null],[11,"from_ptr_initialized","","",211,null],[11,"interface_ptr","","",211,null],[11,"interface_name","","",211,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",211,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",211,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",211,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",211,{"inputs":[{"name":"self"},{"name":"zwptabletmanagerv2"}],"output":{"name":"bool"}}],[11,"set_user_data","","",211,null],[11,"get_user_data","","",211,null],[11,"clone_unchecked","","",211,{"inputs":[{"name":"self"}],"output":{"name":"zwptabletmanagerv2"}}],[11,"__dispatch_msg","","",211,null],[11,"clone","","",188,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",188,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"ptr","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2","",212,null],[11,"from_ptr_new","","",212,null],[11,"from_ptr_initialized","","",212,null],[11,"interface_ptr","","",212,null],[11,"interface_name","","",212,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",212,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",212,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",212,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",212,{"inputs":[{"name":"self"},{"name":"zwptabletseatv2"}],"output":{"name":"bool"}}],[11,"set_user_data","","",212,null],[11,"get_user_data","","",212,null],[11,"clone_unchecked","","",212,{"inputs":[{"name":"self"}],"output":{"name":"zwptabletseatv2"}}],[11,"__dispatch_msg","","",212,null],[11,"clone","","",189,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",189,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"tablet_added","","new device notification",212,{"inputs":[{"name":"self"},{"name":"zwptabletv2"}],"output":{"name":"eventresult"}}],[11,"tool_added","","a new tool has been used with a tablet",212,{"inputs":[{"name":"self"},{"name":"zwptablettoolv2"}],"output":{"name":"eventresult"}}],[11,"pad_added","","new pad notification",212,{"inputs":[{"name":"self"},{"name":"zwptabletpadv2"}],"output":{"name":"eventresult"}}],[11,"ptr","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","",213,null],[11,"from_ptr_new","","",213,null],[11,"from_ptr_initialized","","",213,null],[11,"interface_ptr","","",213,null],[11,"interface_name","","",213,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",213,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",213,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",213,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",213,{"inputs":[{"name":"self"},{"name":"zwptablettoolv2"}],"output":{"name":"bool"}}],[11,"set_user_data","","",213,null],[11,"get_user_data","","",213,null],[11,"clone_unchecked","","",213,{"inputs":[{"name":"self"}],"output":{"name":"zwptablettoolv2"}}],[11,"__dispatch_msg","","",213,null],[11,"clone","","",191,{"inputs":[{"name":"self"}],"output":{"name":"type"}}],[11,"fmt","","",191,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",191,{"inputs":[{"name":"self"},{"name":"type"}],"output":{"name":"bool"}}],[11,"from_raw","","",191,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",191,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",192,{"inputs":[{"name":"self"}],"output":{"name":"capability"}}],[11,"fmt","","",192,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",192,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"from_raw","","",192,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",192,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",193,{"inputs":[{"name":"self"}],"output":{"name":"buttonstate"}}],[11,"fmt","","",193,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",193,{"inputs":[{"name":"self"},{"name":"buttonstate"}],"output":{"name":"bool"}}],[11,"from_raw","","",193,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",193,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",194,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",194,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",194,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",194,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",194,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",190,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",190,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"_type","","tool type",213,{"inputs":[{"name":"self"},{"name":"type"}],"output":{"name":"eventresult"}}],[11,"hardware_serial","","unique hardware serial number of the tool",213,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"hardware_id_wacom","","hardware id notification in Wacom's format",213,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"capability","","tool capability notification",213,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"eventresult"}}],[11,"done","","tool description events sequence complete",213,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"removed","","tool removed",213,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"proximity_in","","proximity in event",213,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"zwptabletv2"},{"name":"wlsurface"}],"output":{"name":"eventresult"}}],[11,"proximity_out","","proximity out event",213,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"down","","tablet tool is making contact",213,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"up","","tablet tool is no longer making contact",213,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"motion","","motion event",213,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"}],"output":{"name":"eventresult"}}],[11,"pressure","","pressure change event",213,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"distance","","distance change event",213,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"tilt","","tilt change event",213,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"}],"output":{"name":"eventresult"}}],[11,"rotation","","z-rotation change event",213,{"inputs":[{"name":"self"},{"name":"f64"}],"output":{"name":"eventresult"}}],[11,"slider","","Slider position change event",213,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"eventresult"}}],[11,"wheel","","Wheel delta event",213,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"i32"}],"output":{"name":"eventresult"}}],[11,"button","","button event",213,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"buttonstate"}],"output":{"name":"eventresult"}}],[11,"frame","","frame event",213,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"ptr","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2","",214,null],[11,"from_ptr_new","","",214,null],[11,"from_ptr_initialized","","",214,null],[11,"interface_ptr","","",214,null],[11,"interface_name","","",214,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",214,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",214,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",214,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",214,{"inputs":[{"name":"self"},{"name":"zwptabletv2"}],"output":{"name":"bool"}}],[11,"set_user_data","","",214,null],[11,"get_user_data","","",214,null],[11,"clone_unchecked","","",214,{"inputs":[{"name":"self"}],"output":{"name":"zwptabletv2"}}],[11,"__dispatch_msg","","",214,null],[11,"clone","","",195,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",195,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"name","","tablet device name",214,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"eventresult"}}],[11,"id","","tablet device USB vendor/product id",214,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"path","","path to the device",214,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"eventresult"}}],[11,"done","","tablet description events sequence complete",214,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"removed","","tablet removed event",214,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"ptr","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2","",215,null],[11,"from_ptr_new","","",215,null],[11,"from_ptr_initialized","","",215,null],[11,"interface_ptr","","",215,null],[11,"interface_name","","",215,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",215,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",215,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",215,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",215,{"inputs":[{"name":"self"},{"name":"zwptabletpadringv2"}],"output":{"name":"bool"}}],[11,"set_user_data","","",215,null],[11,"get_user_data","","",215,null],[11,"clone_unchecked","","",215,{"inputs":[{"name":"self"}],"output":{"name":"zwptabletpadringv2"}}],[11,"__dispatch_msg","","",215,null],[11,"clone","","",197,{"inputs":[{"name":"self"}],"output":{"name":"source"}}],[11,"fmt","","",197,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",197,{"inputs":[{"name":"self"},{"name":"source"}],"output":{"name":"bool"}}],[11,"from_raw","","",197,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",197,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",196,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",196,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"source","","ring event source",215,{"inputs":[{"name":"self"},{"name":"source"}],"output":{"name":"eventresult"}}],[11,"angle","","angle changed",215,{"inputs":[{"name":"self"},{"name":"f64"}],"output":{"name":"eventresult"}}],[11,"stop","","interaction stopped",215,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"frame","","end of a ring event sequence",215,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"ptr","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2","",216,null],[11,"from_ptr_new","","",216,null],[11,"from_ptr_initialized","","",216,null],[11,"interface_ptr","","",216,null],[11,"interface_name","","",216,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",216,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",216,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",216,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",216,{"inputs":[{"name":"self"},{"name":"zwptabletpadstripv2"}],"output":{"name":"bool"}}],[11,"set_user_data","","",216,null],[11,"get_user_data","","",216,null],[11,"clone_unchecked","","",216,{"inputs":[{"name":"self"}],"output":{"name":"zwptabletpadstripv2"}}],[11,"__dispatch_msg","","",216,null],[11,"clone","","",199,{"inputs":[{"name":"self"}],"output":{"name":"source"}}],[11,"fmt","","",199,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",199,{"inputs":[{"name":"self"},{"name":"source"}],"output":{"name":"bool"}}],[11,"from_raw","","",199,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",199,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",198,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",198,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"source","","strip event source",216,{"inputs":[{"name":"self"},{"name":"source"}],"output":{"name":"eventresult"}}],[11,"position","","position changed",216,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"stop","","interaction stopped",216,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"frame","","end of a strip event sequence",216,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"ptr","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2","",217,null],[11,"from_ptr_new","","",217,null],[11,"from_ptr_initialized","","",217,null],[11,"interface_ptr","","",217,null],[11,"interface_name","","",217,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",217,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",217,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",217,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",217,{"inputs":[{"name":"self"},{"name":"zwptabletpadgroupv2"}],"output":{"name":"bool"}}],[11,"set_user_data","","",217,null],[11,"get_user_data","","",217,null],[11,"clone_unchecked","","",217,{"inputs":[{"name":"self"}],"output":{"name":"zwptabletpadgroupv2"}}],[11,"__dispatch_msg","","",217,null],[11,"clone","","",200,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",200,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"buttons","","buttons announced",217,{"inputs":[{"name":"self"},{"name":"vec"}],"output":{"name":"eventresult"}}],[11,"ring","","ring announced",217,{"inputs":[{"name":"self"},{"name":"zwptabletpadringv2"}],"output":{"name":"eventresult"}}],[11,"strip","","strip announced",217,{"inputs":[{"name":"self"},{"name":"zwptabletpadstripv2"}],"output":{"name":"eventresult"}}],[11,"modes","","mode-switch ability announced",217,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"done","","tablet group description events sequence complete",217,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"mode_switch","","mode switch event",217,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"ptr","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","",218,null],[11,"from_ptr_new","","",218,null],[11,"from_ptr_initialized","","",218,null],[11,"interface_ptr","","",218,null],[11,"interface_name","","",218,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",218,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",218,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",218,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",218,{"inputs":[{"name":"self"},{"name":"zwptabletpadv2"}],"output":{"name":"bool"}}],[11,"set_user_data","","",218,null],[11,"get_user_data","","",218,null],[11,"clone_unchecked","","",218,{"inputs":[{"name":"self"}],"output":{"name":"zwptabletpadv2"}}],[11,"__dispatch_msg","","",218,null],[11,"clone","","",202,{"inputs":[{"name":"self"}],"output":{"name":"buttonstate"}}],[11,"fmt","","",202,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",202,{"inputs":[{"name":"self"},{"name":"buttonstate"}],"output":{"name":"bool"}}],[11,"from_raw","","",202,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",202,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",201,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",201,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"group","","group announced",218,{"inputs":[{"name":"self"},{"name":"zwptabletpadgroupv2"}],"output":{"name":"eventresult"}}],[11,"path","","path to the device",218,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"eventresult"}}],[11,"buttons","","buttons announced",218,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"done","","pad description event sequence complete",218,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"button","","physical button state",218,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"buttonstate"}],"output":{"name":"eventresult"}}],[11,"enter","","enter event",218,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"zwptabletv2"},{"name":"wlsurface"}],"output":{"name":"eventresult"}}],[11,"leave","","enter event",218,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"wlsurface"}],"output":{"name":"eventresult"}}],[11,"removed","","pad removed event",218,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[0,"text_input","wayland_protocols::unstable","Text input protocol",null,null],[0,"v1","wayland_protocols::unstable::text_input","",null,null],[0,"client","wayland_protocols::unstable::text_input::v1","Client-side API of this protocol",null,null],[0,"zwp_text_input_v1","wayland_protocols::unstable::text_input::v1::client","text input",null,null],[3,"ZwpTextInputV1","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","",null,null],[3,"Implementation","","",null,null],[12,"enter","","enter event",219,null],[12,"leave","","leave event",219,null],[12,"modifiers_map","","modifiers map",219,null],[12,"input_panel_state","","state of the input panel",219,null],[12,"preedit_string","","pre-edit",219,null],[12,"preedit_styling","","pre-edit styling",219,null],[12,"preedit_cursor","","pre-edit cursor",219,null],[12,"commit_string","","commit",219,null],[12,"cursor_position","","set cursor to new position",219,null],[12,"delete_surrounding_text","","delete surrounding text",219,null],[12,"keysym","","keysym",219,null],[12,"language","","language",219,null],[12,"text_direction","","text direction",219,null],[4,"ContentHint","","content hint",null,null],[13,"None","","no special behaviour",220,null],[13,"Default","","auto completion, correction and capitalization",220,null],[13,"Password","","hidden and sensitive text",220,null],[13,"AutoCompletion","","suggest word completions",220,null],[13,"AutoCorrection","","suggest word corrections",220,null],[13,"AutoCapitalization","","switch to uppercase letters at the start of a sentence",220,null],[13,"Lowercase","","prefer lowercase letters",220,null],[13,"Uppercase","","prefer uppercase letters",220,null],[13,"Titlecase","","prefer casing for titles and headings (can be language dependent)",220,null],[13,"HiddenText","","characters should be hidden",220,null],[13,"SensitiveData","","typed text should not be stored",220,null],[13,"Latin","","just latin characters should be entered",220,null],[13,"Multiline","","the text input is multiline",220,null],[4,"ContentPurpose","","content purpose",null,null],[13,"Normal","","default input, allowing all characters",221,null],[13,"Alpha","","allow only alphabetic characters",221,null],[13,"Digits","","allow only digits",221,null],[13,"Number","","input a number (including decimal separator and sign)",221,null],[13,"Phone","","input a phone number",221,null],[13,"Url","","input an URL",221,null],[13,"Email","","input an email address",221,null],[13,"Name","","input a name of a person",221,null],[13,"Password","","input a password (combine with password or sensitive_data hint)",221,null],[13,"Date","","input a date",221,null],[13,"Time","","input a time",221,null],[13,"Datetime","","input a date and time",221,null],[13,"Terminal","","input for a terminal",221,null],[4,"PreeditStyle","","",null,null],[13,"Default","","default style for composing text",222,null],[13,"None","","style should be the same as in non-composing text",222,null],[13,"Active","","",222,null],[13,"Inactive","","",222,null],[13,"Highlight","","",222,null],[13,"Underline","","",222,null],[13,"Selection","","",222,null],[13,"Incorrect","","",222,null],[4,"TextDirection","","",null,null],[13,"Auto","","automatic text direction based on text and language",223,null],[13,"Ltr","","left-to-right",223,null],[13,"Rtl","","right-to-left",223,null],[0,"zwp_text_input_manager_v1","wayland_protocols::unstable::text_input::v1::client","text input manager",null,null],[3,"ZwpTextInputManagerV1","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_manager_v1","",null,null],[0,"server","wayland_protocols::unstable::text_input::v1","Server-side API of this protocol",null,null],[0,"zwp_text_input_v1","wayland_protocols::unstable::text_input::v1::server","text input",null,null],[3,"ZwpTextInputV1","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","",null,null],[3,"Implementation","","",null,null],[12,"activate","","request activation",224,null],[12,"deactivate","","request deactivation",224,null],[12,"show_input_panel","","show input panels",224,null],[12,"hide_input_panel","","hide input panels",224,null],[12,"reset","","reset",224,null],[12,"set_surrounding_text","","sets the surrounding text",224,null],[12,"set_content_type","","set content purpose and hint",224,null],[12,"set_cursor_rectangle","","",224,null],[12,"set_preferred_language","","sets preferred language",224,null],[12,"commit_state","","",224,null],[12,"invoke_action","","",224,null],[4,"ContentHint","","content hint",null,null],[13,"None","","no special behaviour",225,null],[13,"Default","","auto completion, correction and capitalization",225,null],[13,"Password","","hidden and sensitive text",225,null],[13,"AutoCompletion","","suggest word completions",225,null],[13,"AutoCorrection","","suggest word corrections",225,null],[13,"AutoCapitalization","","switch to uppercase letters at the start of a sentence",225,null],[13,"Lowercase","","prefer lowercase letters",225,null],[13,"Uppercase","","prefer uppercase letters",225,null],[13,"Titlecase","","prefer casing for titles and headings (can be language dependent)",225,null],[13,"HiddenText","","characters should be hidden",225,null],[13,"SensitiveData","","typed text should not be stored",225,null],[13,"Latin","","just latin characters should be entered",225,null],[13,"Multiline","","the text input is multiline",225,null],[4,"ContentPurpose","","content purpose",null,null],[13,"Normal","","default input, allowing all characters",226,null],[13,"Alpha","","allow only alphabetic characters",226,null],[13,"Digits","","allow only digits",226,null],[13,"Number","","input a number (including decimal separator and sign)",226,null],[13,"Phone","","input a phone number",226,null],[13,"Url","","input an URL",226,null],[13,"Email","","input an email address",226,null],[13,"Name","","input a name of a person",226,null],[13,"Password","","input a password (combine with password or sensitive_data hint)",226,null],[13,"Date","","input a date",226,null],[13,"Time","","input a time",226,null],[13,"Datetime","","input a date and time",226,null],[13,"Terminal","","input for a terminal",226,null],[4,"PreeditStyle","","",null,null],[13,"Default","","default style for composing text",227,null],[13,"None","","style should be the same as in non-composing text",227,null],[13,"Active","","",227,null],[13,"Inactive","","",227,null],[13,"Highlight","","",227,null],[13,"Underline","","",227,null],[13,"Selection","","",227,null],[13,"Incorrect","","",227,null],[4,"TextDirection","","",null,null],[13,"Auto","","automatic text direction based on text and language",228,null],[13,"Ltr","","left-to-right",228,null],[13,"Rtl","","right-to-left",228,null],[0,"zwp_text_input_manager_v1","wayland_protocols::unstable::text_input::v1::server","text input manager",null,null],[3,"ZwpTextInputManagerV1","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_manager_v1","",null,null],[3,"Implementation","","",null,null],[12,"create_text_input","","create text input",229,null],[11,"ptr","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","",230,null],[11,"from_ptr_new","","",230,null],[11,"from_ptr_initialized","","",230,null],[11,"interface_ptr","","",230,null],[11,"interface_name","","",230,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",230,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",230,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",230,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",230,{"inputs":[{"name":"self"},{"name":"zwptextinputv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",230,null],[11,"get_user_data","","",230,null],[11,"clone_unchecked","","",230,{"inputs":[{"name":"self"}],"output":{"name":"zwptextinputv1"}}],[11,"__dispatch_msg","","",230,null],[11,"clone","","",220,{"inputs":[{"name":"self"}],"output":{"name":"contenthint"}}],[11,"fmt","","",220,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",220,{"inputs":[{"name":"self"},{"name":"contenthint"}],"output":{"name":"bool"}}],[11,"from_raw","","",220,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",220,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",221,{"inputs":[{"name":"self"}],"output":{"name":"contentpurpose"}}],[11,"fmt","","",221,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",221,{"inputs":[{"name":"self"},{"name":"contentpurpose"}],"output":{"name":"bool"}}],[11,"from_raw","","",221,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",221,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",222,{"inputs":[{"name":"self"}],"output":{"name":"preeditstyle"}}],[11,"fmt","","",222,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",222,{"inputs":[{"name":"self"},{"name":"preeditstyle"}],"output":{"name":"bool"}}],[11,"from_raw","","",222,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",222,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",223,{"inputs":[{"name":"self"}],"output":{"name":"textdirection"}}],[11,"fmt","","",223,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",223,{"inputs":[{"name":"self"},{"name":"textdirection"}],"output":{"name":"bool"}}],[11,"from_raw","","",223,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",223,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",219,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",219,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"activate","","request activation",230,null],[11,"deactivate","","request deactivation",230,null],[11,"show_input_panel","","show input panels",230,null],[11,"hide_input_panel","","hide input panels",230,null],[11,"reset","","reset",230,null],[11,"set_surrounding_text","","sets the surrounding text",230,null],[11,"set_content_type","","set content purpose and hint",230,null],[11,"set_cursor_rectangle","","",230,null],[11,"set_preferred_language","","sets preferred language",230,null],[11,"commit_state","","",230,null],[11,"invoke_action","","",230,null],[11,"ptr","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_manager_v1","",231,null],[11,"from_ptr_new","","",231,null],[11,"from_ptr_initialized","","",231,null],[11,"interface_ptr","","",231,null],[11,"interface_name","","",231,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",231,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",231,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",231,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",231,{"inputs":[{"name":"self"},{"name":"zwptextinputmanagerv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",231,null],[11,"get_user_data","","",231,null],[11,"clone_unchecked","","",231,{"inputs":[{"name":"self"}],"output":{"name":"zwptextinputmanagerv1"}}],[11,"create_text_input","","create text input",231,{"inputs":[{"name":"self"}],"output":{"name":"zwptextinputv1"}}],[11,"ptr","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","",232,null],[11,"from_ptr_new","","",232,null],[11,"from_ptr_initialized","","",232,null],[11,"interface_ptr","","",232,null],[11,"interface_name","","",232,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",232,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",232,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",232,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",232,{"inputs":[{"name":"self"},{"name":"zwptextinputv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",232,null],[11,"get_user_data","","",232,null],[11,"clone_unchecked","","",232,{"inputs":[{"name":"self"}],"output":{"name":"zwptextinputv1"}}],[11,"__dispatch_msg","","",232,null],[11,"clone","","",225,{"inputs":[{"name":"self"}],"output":{"name":"contenthint"}}],[11,"fmt","","",225,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",225,{"inputs":[{"name":"self"},{"name":"contenthint"}],"output":{"name":"bool"}}],[11,"from_raw","","",225,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",225,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",226,{"inputs":[{"name":"self"}],"output":{"name":"contentpurpose"}}],[11,"fmt","","",226,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",226,{"inputs":[{"name":"self"},{"name":"contentpurpose"}],"output":{"name":"bool"}}],[11,"from_raw","","",226,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",226,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",227,{"inputs":[{"name":"self"}],"output":{"name":"preeditstyle"}}],[11,"fmt","","",227,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",227,{"inputs":[{"name":"self"},{"name":"preeditstyle"}],"output":{"name":"bool"}}],[11,"from_raw","","",227,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",227,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",228,{"inputs":[{"name":"self"}],"output":{"name":"textdirection"}}],[11,"fmt","","",228,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",228,{"inputs":[{"name":"self"},{"name":"textdirection"}],"output":{"name":"bool"}}],[11,"from_raw","","",228,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",228,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",224,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",224,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"enter","","enter event",232,{"inputs":[{"name":"self"},{"name":"wlsurface"}],"output":{"name":"eventresult"}}],[11,"leave","","leave event",232,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"modifiers_map","","modifiers map",232,{"inputs":[{"name":"self"},{"name":"vec"}],"output":{"name":"eventresult"}}],[11,"input_panel_state","","state of the input panel",232,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"preedit_string","","pre-edit",232,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"string"},{"name":"string"}],"output":{"name":"eventresult"}}],[11,"preedit_styling","","pre-edit styling",232,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"preedit_cursor","","pre-edit cursor",232,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"eventresult"}}],[11,"commit_string","","commit",232,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"string"}],"output":{"name":"eventresult"}}],[11,"cursor_position","","set cursor to new position",232,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"eventresult"}}],[11,"delete_surrounding_text","","delete surrounding text",232,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"keysym","","keysym",232,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"language","","language",232,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"string"}],"output":{"name":"eventresult"}}],[11,"text_direction","","text direction",232,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"ptr","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_manager_v1","",233,null],[11,"from_ptr_new","","",233,null],[11,"from_ptr_initialized","","",233,null],[11,"interface_ptr","","",233,null],[11,"interface_name","","",233,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",233,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",233,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",233,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",233,{"inputs":[{"name":"self"},{"name":"zwptextinputmanagerv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",233,null],[11,"get_user_data","","",233,null],[11,"clone_unchecked","","",233,{"inputs":[{"name":"self"}],"output":{"name":"zwptextinputmanagerv1"}}],[11,"__dispatch_msg","","",233,null],[11,"clone","","",229,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",229,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[0,"xdg_foreign","wayland_protocols::unstable","Protocol for exporting xdg surface handles",null,null],[0,"v1","wayland_protocols::unstable::xdg_foreign","",null,null],[0,"client","wayland_protocols::unstable::xdg_foreign::v1","Client-side API of this protocol",null,null],[0,"zxdg_exporter_v1","wayland_protocols::unstable::xdg_foreign::v1::client","interface for exporting surfaces",null,null],[3,"ZxdgExporterV1","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exporter_v1","",null,null],[0,"zxdg_importer_v1","wayland_protocols::unstable::xdg_foreign::v1::client","interface for importing surfaces",null,null],[3,"ZxdgImporterV1","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_importer_v1","",null,null],[0,"zxdg_exported_v1","wayland_protocols::unstable::xdg_foreign::v1::client","an exported surface handle",null,null],[3,"ZxdgExportedV1","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exported_v1","",null,null],[3,"Implementation","","",null,null],[12,"handle","","the exported surface handle",234,null],[0,"zxdg_imported_v1","wayland_protocols::unstable::xdg_foreign::v1::client","an imported surface handle",null,null],[3,"ZxdgImportedV1","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_imported_v1","",null,null],[3,"Implementation","","",null,null],[12,"destroyed","","the imported surface handle has been destroyed",235,null],[0,"server","wayland_protocols::unstable::xdg_foreign::v1","Server-side API of this protocol",null,null],[0,"zxdg_exporter_v1","wayland_protocols::unstable::xdg_foreign::v1::server","interface for exporting surfaces",null,null],[3,"ZxdgExporterV1","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exporter_v1","",null,null],[3,"Implementation","","",null,null],[12,"destroy","","destroy the xdg_exporter object",236,null],[12,"export","","export a surface",236,null],[0,"zxdg_importer_v1","wayland_protocols::unstable::xdg_foreign::v1::server","interface for importing surfaces",null,null],[3,"ZxdgImporterV1","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_importer_v1","",null,null],[3,"Implementation","","",null,null],[12,"destroy","","destroy the xdg_importer object",237,null],[12,"import","","import a surface",237,null],[0,"zxdg_exported_v1","wayland_protocols::unstable::xdg_foreign::v1::server","an exported surface handle",null,null],[3,"ZxdgExportedV1","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exported_v1","",null,null],[3,"Implementation","","",null,null],[12,"destroy","","unexport the exported surface",238,null],[0,"zxdg_imported_v1","wayland_protocols::unstable::xdg_foreign::v1::server","an imported surface handle",null,null],[3,"ZxdgImportedV1","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_imported_v1","",null,null],[3,"Implementation","","",null,null],[12,"destroy","","destroy the xdg_imported object",239,null],[12,"set_parent_of","","set as the parent of some surface",239,null],[11,"ptr","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exporter_v1","",240,null],[11,"from_ptr_new","","",240,null],[11,"from_ptr_initialized","","",240,null],[11,"interface_ptr","","",240,null],[11,"interface_name","","",240,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",240,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",240,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",240,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",240,{"inputs":[{"name":"self"},{"name":"zxdgexporterv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",240,null],[11,"get_user_data","","",240,null],[11,"clone_unchecked","","",240,{"inputs":[{"name":"self"}],"output":{"name":"zxdgexporterv1"}}],[11,"destroy","","destroy the xdg_exporter object",240,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"export","","export a surface",240,{"inputs":[{"name":"self"},{"name":"wlsurface"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_importer_v1","",241,null],[11,"from_ptr_new","","",241,null],[11,"from_ptr_initialized","","",241,null],[11,"interface_ptr","","",241,null],[11,"interface_name","","",241,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",241,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",241,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",241,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",241,{"inputs":[{"name":"self"},{"name":"zxdgimporterv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",241,null],[11,"get_user_data","","",241,null],[11,"clone_unchecked","","",241,{"inputs":[{"name":"self"}],"output":{"name":"zxdgimporterv1"}}],[11,"destroy","","destroy the xdg_importer object",241,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"import","","import a surface",241,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exported_v1","",242,null],[11,"from_ptr_new","","",242,null],[11,"from_ptr_initialized","","",242,null],[11,"interface_ptr","","",242,null],[11,"interface_name","","",242,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",242,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",242,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",242,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",242,{"inputs":[{"name":"self"},{"name":"zxdgexportedv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",242,null],[11,"get_user_data","","",242,null],[11,"clone_unchecked","","",242,{"inputs":[{"name":"self"}],"output":{"name":"zxdgexportedv1"}}],[11,"__dispatch_msg","","",242,null],[11,"clone","","",234,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",234,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"destroy","","unexport the exported surface",242,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_imported_v1","",243,null],[11,"from_ptr_new","","",243,null],[11,"from_ptr_initialized","","",243,null],[11,"interface_ptr","","",243,null],[11,"interface_name","","",243,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",243,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",243,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",243,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",243,{"inputs":[{"name":"self"},{"name":"zxdgimportedv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",243,null],[11,"get_user_data","","",243,null],[11,"clone_unchecked","","",243,{"inputs":[{"name":"self"}],"output":{"name":"zxdgimportedv1"}}],[11,"__dispatch_msg","","",243,null],[11,"clone","","",235,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",235,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"destroy","","destroy the xdg_imported object",243,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"set_parent_of","","set as the parent of some surface",243,{"inputs":[{"name":"self"},{"name":"wlsurface"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exporter_v1","",244,null],[11,"from_ptr_new","","",244,null],[11,"from_ptr_initialized","","",244,null],[11,"interface_ptr","","",244,null],[11,"interface_name","","",244,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",244,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",244,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",244,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",244,{"inputs":[{"name":"self"},{"name":"zxdgexporterv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",244,null],[11,"get_user_data","","",244,null],[11,"clone_unchecked","","",244,{"inputs":[{"name":"self"}],"output":{"name":"zxdgexporterv1"}}],[11,"__dispatch_msg","","",244,null],[11,"clone","","",236,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",236,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"ptr","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_importer_v1","",245,null],[11,"from_ptr_new","","",245,null],[11,"from_ptr_initialized","","",245,null],[11,"interface_ptr","","",245,null],[11,"interface_name","","",245,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",245,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",245,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",245,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",245,{"inputs":[{"name":"self"},{"name":"zxdgimporterv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",245,null],[11,"get_user_data","","",245,null],[11,"clone_unchecked","","",245,{"inputs":[{"name":"self"}],"output":{"name":"zxdgimporterv1"}}],[11,"__dispatch_msg","","",245,null],[11,"clone","","",237,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",237,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"ptr","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exported_v1","",246,null],[11,"from_ptr_new","","",246,null],[11,"from_ptr_initialized","","",246,null],[11,"interface_ptr","","",246,null],[11,"interface_name","","",246,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",246,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",246,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",246,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",246,{"inputs":[{"name":"self"},{"name":"zxdgexportedv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",246,null],[11,"get_user_data","","",246,null],[11,"clone_unchecked","","",246,{"inputs":[{"name":"self"}],"output":{"name":"zxdgexportedv1"}}],[11,"__dispatch_msg","","",246,null],[11,"clone","","",238,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",238,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"handle","","the exported surface handle",246,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"eventresult"}}],[11,"ptr","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_imported_v1","",247,null],[11,"from_ptr_new","","",247,null],[11,"from_ptr_initialized","","",247,null],[11,"interface_ptr","","",247,null],[11,"interface_name","","",247,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",247,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",247,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",247,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",247,{"inputs":[{"name":"self"},{"name":"zxdgimportedv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",247,null],[11,"get_user_data","","",247,null],[11,"clone_unchecked","","",247,{"inputs":[{"name":"self"}],"output":{"name":"zxdgimportedv1"}}],[11,"__dispatch_msg","","",247,null],[11,"clone","","",239,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",239,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"destroyed","","the imported surface handle has been destroyed",247,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[0,"v2","wayland_protocols::unstable::xdg_foreign","",null,null],[0,"client","wayland_protocols::unstable::xdg_foreign::v2","Client-side API of this protocol",null,null],[0,"zxdg_exporter_v2","wayland_protocols::unstable::xdg_foreign::v2::client","interface for exporting surfaces",null,null],[3,"ZxdgExporterV2","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exporter_v2","",null,null],[0,"zxdg_importer_v2","wayland_protocols::unstable::xdg_foreign::v2::client","interface for importing surfaces",null,null],[3,"ZxdgImporterV2","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_importer_v2","",null,null],[0,"zxdg_exported_v2","wayland_protocols::unstable::xdg_foreign::v2::client","an exported surface handle",null,null],[3,"ZxdgExportedV2","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exported_v2","",null,null],[3,"Implementation","","",null,null],[12,"handle","","the exported surface handle",248,null],[0,"zxdg_imported_v2","wayland_protocols::unstable::xdg_foreign::v2::client","an imported surface handle",null,null],[3,"ZxdgImportedV2","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_imported_v2","",null,null],[3,"Implementation","","",null,null],[12,"destroyed","","the imported surface handle has been destroyed",249,null],[0,"server","wayland_protocols::unstable::xdg_foreign::v2","Server-side API of this protocol",null,null],[0,"zxdg_exporter_v2","wayland_protocols::unstable::xdg_foreign::v2::server","interface for exporting surfaces",null,null],[3,"ZxdgExporterV2","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exporter_v2","",null,null],[3,"Implementation","","",null,null],[12,"destroy","","destroy the xdg_exporter object",250,null],[12,"export_toplevel","","export a toplevel surface",250,null],[0,"zxdg_importer_v2","wayland_protocols::unstable::xdg_foreign::v2::server","interface for importing surfaces",null,null],[3,"ZxdgImporterV2","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_importer_v2","",null,null],[3,"Implementation","","",null,null],[12,"destroy","","destroy the xdg_importer object",251,null],[12,"import_toplevel","","import a toplevel surface",251,null],[0,"zxdg_exported_v2","wayland_protocols::unstable::xdg_foreign::v2::server","an exported surface handle",null,null],[3,"ZxdgExportedV2","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exported_v2","",null,null],[3,"Implementation","","",null,null],[12,"destroy","","unexport the exported surface",252,null],[0,"zxdg_imported_v2","wayland_protocols::unstable::xdg_foreign::v2::server","an imported surface handle",null,null],[3,"ZxdgImportedV2","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_imported_v2","",null,null],[3,"Implementation","","",null,null],[12,"destroy","","destroy the xdg_imported object",253,null],[12,"set_parent_of","","set as the parent of some surface",253,null],[11,"ptr","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exporter_v2","",254,null],[11,"from_ptr_new","","",254,null],[11,"from_ptr_initialized","","",254,null],[11,"interface_ptr","","",254,null],[11,"interface_name","","",254,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",254,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",254,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",254,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",254,{"inputs":[{"name":"self"},{"name":"zxdgexporterv2"}],"output":{"name":"bool"}}],[11,"set_user_data","","",254,null],[11,"get_user_data","","",254,null],[11,"clone_unchecked","","",254,{"inputs":[{"name":"self"}],"output":{"name":"zxdgexporterv2"}}],[11,"destroy","","destroy the xdg_exporter object",254,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"export_toplevel","","export a toplevel surface",254,{"inputs":[{"name":"self"},{"name":"wlsurface"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_importer_v2","",255,null],[11,"from_ptr_new","","",255,null],[11,"from_ptr_initialized","","",255,null],[11,"interface_ptr","","",255,null],[11,"interface_name","","",255,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",255,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",255,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",255,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",255,{"inputs":[{"name":"self"},{"name":"zxdgimporterv2"}],"output":{"name":"bool"}}],[11,"set_user_data","","",255,null],[11,"get_user_data","","",255,null],[11,"clone_unchecked","","",255,{"inputs":[{"name":"self"}],"output":{"name":"zxdgimporterv2"}}],[11,"destroy","","destroy the xdg_importer object",255,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"import_toplevel","","import a toplevel surface",255,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exported_v2","",256,null],[11,"from_ptr_new","","",256,null],[11,"from_ptr_initialized","","",256,null],[11,"interface_ptr","","",256,null],[11,"interface_name","","",256,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",256,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",256,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",256,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",256,{"inputs":[{"name":"self"},{"name":"zxdgexportedv2"}],"output":{"name":"bool"}}],[11,"set_user_data","","",256,null],[11,"get_user_data","","",256,null],[11,"clone_unchecked","","",256,{"inputs":[{"name":"self"}],"output":{"name":"zxdgexportedv2"}}],[11,"__dispatch_msg","","",256,null],[11,"clone","","",248,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",248,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"destroy","","unexport the exported surface",256,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_imported_v2","",257,null],[11,"from_ptr_new","","",257,null],[11,"from_ptr_initialized","","",257,null],[11,"interface_ptr","","",257,null],[11,"interface_name","","",257,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",257,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",257,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",257,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",257,{"inputs":[{"name":"self"},{"name":"zxdgimportedv2"}],"output":{"name":"bool"}}],[11,"set_user_data","","",257,null],[11,"get_user_data","","",257,null],[11,"clone_unchecked","","",257,{"inputs":[{"name":"self"}],"output":{"name":"zxdgimportedv2"}}],[11,"__dispatch_msg","","",257,null],[11,"clone","","",249,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",249,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"destroy","","destroy the xdg_imported object",257,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"set_parent_of","","set as the parent of some surface",257,{"inputs":[{"name":"self"},{"name":"wlsurface"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exporter_v2","",258,null],[11,"from_ptr_new","","",258,null],[11,"from_ptr_initialized","","",258,null],[11,"interface_ptr","","",258,null],[11,"interface_name","","",258,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",258,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",258,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",258,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",258,{"inputs":[{"name":"self"},{"name":"zxdgexporterv2"}],"output":{"name":"bool"}}],[11,"set_user_data","","",258,null],[11,"get_user_data","","",258,null],[11,"clone_unchecked","","",258,{"inputs":[{"name":"self"}],"output":{"name":"zxdgexporterv2"}}],[11,"__dispatch_msg","","",258,null],[11,"clone","","",250,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",250,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"ptr","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_importer_v2","",259,null],[11,"from_ptr_new","","",259,null],[11,"from_ptr_initialized","","",259,null],[11,"interface_ptr","","",259,null],[11,"interface_name","","",259,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",259,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",259,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",259,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",259,{"inputs":[{"name":"self"},{"name":"zxdgimporterv2"}],"output":{"name":"bool"}}],[11,"set_user_data","","",259,null],[11,"get_user_data","","",259,null],[11,"clone_unchecked","","",259,{"inputs":[{"name":"self"}],"output":{"name":"zxdgimporterv2"}}],[11,"__dispatch_msg","","",259,null],[11,"clone","","",251,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",251,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"ptr","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exported_v2","",260,null],[11,"from_ptr_new","","",260,null],[11,"from_ptr_initialized","","",260,null],[11,"interface_ptr","","",260,null],[11,"interface_name","","",260,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",260,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",260,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",260,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",260,{"inputs":[{"name":"self"},{"name":"zxdgexportedv2"}],"output":{"name":"bool"}}],[11,"set_user_data","","",260,null],[11,"get_user_data","","",260,null],[11,"clone_unchecked","","",260,{"inputs":[{"name":"self"}],"output":{"name":"zxdgexportedv2"}}],[11,"__dispatch_msg","","",260,null],[11,"clone","","",252,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",252,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"handle","","the exported surface handle",260,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"eventresult"}}],[11,"ptr","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_imported_v2","",261,null],[11,"from_ptr_new","","",261,null],[11,"from_ptr_initialized","","",261,null],[11,"interface_ptr","","",261,null],[11,"interface_name","","",261,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",261,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",261,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",261,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",261,{"inputs":[{"name":"self"},{"name":"zxdgimportedv2"}],"output":{"name":"bool"}}],[11,"set_user_data","","",261,null],[11,"get_user_data","","",261,null],[11,"clone_unchecked","","",261,{"inputs":[{"name":"self"}],"output":{"name":"zxdgimportedv2"}}],[11,"__dispatch_msg","","",261,null],[11,"clone","","",253,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",253,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"destroyed","","the imported surface handle has been destroyed",261,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[0,"xdg_output","wayland_protocols::unstable","Protocol to describe output regions",null,null],[0,"v1","wayland_protocols::unstable::xdg_output","",null,null],[0,"client","wayland_protocols::unstable::xdg_output::v1","Client-side API of this protocol",null,null],[0,"zxdg_output_manager_v1","wayland_protocols::unstable::xdg_output::v1::client","manage xdg_output objects",null,null],[3,"ZxdgOutputManagerV1","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_manager_v1","",null,null],[0,"zxdg_output_v1","wayland_protocols::unstable::xdg_output::v1::client","compositor logical output region",null,null],[3,"ZxdgOutputV1","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1","",null,null],[3,"Implementation","","",null,null],[12,"logical_position","","position of the output within the global compositor space",262,null],[12,"logical_size","","size of the output in the global compositor space",262,null],[12,"done","","all information about the output have been sent",262,null],[0,"server","wayland_protocols::unstable::xdg_output::v1","Server-side API of this protocol",null,null],[0,"zxdg_output_manager_v1","wayland_protocols::unstable::xdg_output::v1::server","manage xdg_output objects",null,null],[3,"ZxdgOutputManagerV1","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_manager_v1","",null,null],[3,"Implementation","","",null,null],[12,"destroy","","destroy the xdg_output_manager object",263,null],[12,"get_xdg_output","","create an xdg output from a wl_output",263,null],[0,"zxdg_output_v1","wayland_protocols::unstable::xdg_output::v1::server","compositor logical output region",null,null],[3,"ZxdgOutputV1","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1","",null,null],[3,"Implementation","","",null,null],[12,"destroy","","destroy the xdg_output object",264,null],[11,"ptr","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_manager_v1","",265,null],[11,"from_ptr_new","","",265,null],[11,"from_ptr_initialized","","",265,null],[11,"interface_ptr","","",265,null],[11,"interface_name","","",265,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",265,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",265,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",265,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",265,{"inputs":[{"name":"self"},{"name":"zxdgoutputmanagerv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",265,null],[11,"get_user_data","","",265,null],[11,"clone_unchecked","","",265,{"inputs":[{"name":"self"}],"output":{"name":"zxdgoutputmanagerv1"}}],[11,"destroy","","destroy the xdg_output_manager object",265,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"get_xdg_output","","create an xdg output from a wl_output",265,{"inputs":[{"name":"self"},{"name":"wloutput"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1","",266,null],[11,"from_ptr_new","","",266,null],[11,"from_ptr_initialized","","",266,null],[11,"interface_ptr","","",266,null],[11,"interface_name","","",266,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",266,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",266,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",266,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",266,{"inputs":[{"name":"self"},{"name":"zxdgoutputv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",266,null],[11,"get_user_data","","",266,null],[11,"clone_unchecked","","",266,{"inputs":[{"name":"self"}],"output":{"name":"zxdgoutputv1"}}],[11,"__dispatch_msg","","",266,null],[11,"clone","","",262,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",262,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"destroy","","destroy the xdg_output object",266,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_manager_v1","",267,null],[11,"from_ptr_new","","",267,null],[11,"from_ptr_initialized","","",267,null],[11,"interface_ptr","","",267,null],[11,"interface_name","","",267,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",267,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",267,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",267,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",267,{"inputs":[{"name":"self"},{"name":"zxdgoutputmanagerv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",267,null],[11,"get_user_data","","",267,null],[11,"clone_unchecked","","",267,{"inputs":[{"name":"self"}],"output":{"name":"zxdgoutputmanagerv1"}}],[11,"__dispatch_msg","","",267,null],[11,"clone","","",263,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",263,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"ptr","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1","",268,null],[11,"from_ptr_new","","",268,null],[11,"from_ptr_initialized","","",268,null],[11,"interface_ptr","","",268,null],[11,"interface_name","","",268,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",268,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",268,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",268,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",268,{"inputs":[{"name":"self"},{"name":"zxdgoutputv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",268,null],[11,"get_user_data","","",268,null],[11,"clone_unchecked","","",268,{"inputs":[{"name":"self"}],"output":{"name":"zxdgoutputv1"}}],[11,"__dispatch_msg","","",268,null],[11,"clone","","",264,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",264,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"logical_position","","position of the output within the global compositor space",268,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"eventresult"}}],[11,"logical_size","","size of the output in the global compositor space",268,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"eventresult"}}],[11,"done","","all information about the output have been sent",268,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[0,"xdg_shell","wayland_protocols::unstable","xdg shell protocol",null,null],[0,"v5","wayland_protocols::unstable::xdg_shell","",null,null],[0,"client","wayland_protocols::unstable::xdg_shell::v5","Client-side API of this protocol",null,null],[0,"xdg_shell","wayland_protocols::unstable::xdg_shell::v5::client","create desktop-style surfaces",null,null],[3,"XdgShell","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell","",null,null],[3,"Implementation","","",null,null],[12,"ping","","check if the client is alive",269,null],[4,"Version","","latest protocol version",null,null],[13,"Current","","Always the latest version",270,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",271,null],[13,"DefunctSurfaces","","xdg_shell was destroyed before children",271,null],[13,"NotTheTopmostPopup","","the client tried to map or destroy a non-topmost popup",271,null],[13,"InvalidPopupParent","","the client specified an invalid popup parent surface",271,null],[0,"xdg_surface","wayland_protocols::unstable::xdg_shell::v5::client","A desktop window",null,null],[3,"XdgSurface","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","",null,null],[3,"Implementation","","",null,null],[12,"configure","","suggest a surface change",272,null],[12,"close","","surface wants to be closed",272,null],[4,"ResizeEdge","","edge values for resizing",null,null],[13,"None","","",273,null],[13,"Top","","",273,null],[13,"Bottom","","",273,null],[13,"Left","","",273,null],[13,"TopLeft","","",273,null],[13,"BottomLeft","","",273,null],[13,"Right","","",273,null],[13,"TopRight","","",273,null],[13,"BottomRight","","",273,null],[4,"State","","types of state on the surface",null,null],[13,"Maximized","","the surface is maximized",274,null],[13,"Fullscreen","","the surface is fullscreen",274,null],[13,"Resizing","","the surface is being resized",274,null],[13,"Activated","","the surface is now activated",274,null],[0,"xdg_popup","wayland_protocols::unstable::xdg_shell::v5::client","short-lived, popup surfaces for menus",null,null],[3,"XdgPopup","wayland_protocols::unstable::xdg_shell::v5::client::xdg_popup","",null,null],[3,"Implementation","","",null,null],[12,"popup_done","","popup interaction is done",275,null],[0,"server","wayland_protocols::unstable::xdg_shell::v5","Server-side API of this protocol",null,null],[0,"xdg_shell","wayland_protocols::unstable::xdg_shell::v5::server","create desktop-style surfaces",null,null],[3,"XdgShell","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","",null,null],[3,"Implementation","","",null,null],[12,"destroy","","destroy xdg_shell",276,null],[12,"use_unstable_version","","enable use of this unstable version",276,null],[12,"get_xdg_surface","","create a shell surface from a surface",276,null],[12,"get_xdg_popup","","create a popup for a surface",276,null],[12,"pong","","respond to a ping event",276,null],[4,"Version","","latest protocol version",null,null],[13,"Current","","Always the latest version",277,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",278,null],[13,"DefunctSurfaces","","xdg_shell was destroyed before children",278,null],[13,"NotTheTopmostPopup","","the client tried to map or destroy a non-topmost popup",278,null],[13,"InvalidPopupParent","","the client specified an invalid popup parent surface",278,null],[0,"xdg_surface","wayland_protocols::unstable::xdg_shell::v5::server","A desktop window",null,null],[3,"XdgSurface","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","",null,null],[3,"Implementation","","",null,null],[12,"destroy","","Destroy the xdg_surface",279,null],[12,"set_parent","","set the parent of this surface",279,null],[12,"set_title","","set surface title",279,null],[12,"set_app_id","","set application ID",279,null],[12,"show_window_menu","","show the window menu",279,null],[12,"move_","","start an interactive move",279,null],[12,"resize","","start an interactive resize",279,null],[12,"ack_configure","","ack a configure event",279,null],[12,"set_window_geometry","","set the new window geometry",279,null],[12,"set_maximized","","maximize the window",279,null],[12,"unset_maximized","","unmaximize the window",279,null],[12,"set_fullscreen","","set the window as fullscreen on a monitor",279,null],[12,"unset_fullscreen","","",279,null],[12,"set_minimized","","set the window as minimized",279,null],[4,"ResizeEdge","","edge values for resizing",null,null],[13,"None","","",280,null],[13,"Top","","",280,null],[13,"Bottom","","",280,null],[13,"Left","","",280,null],[13,"TopLeft","","",280,null],[13,"BottomLeft","","",280,null],[13,"Right","","",280,null],[13,"TopRight","","",280,null],[13,"BottomRight","","",280,null],[4,"State","","types of state on the surface",null,null],[13,"Maximized","","the surface is maximized",281,null],[13,"Fullscreen","","the surface is fullscreen",281,null],[13,"Resizing","","the surface is being resized",281,null],[13,"Activated","","the surface is now activated",281,null],[0,"xdg_popup","wayland_protocols::unstable::xdg_shell::v5::server","short-lived, popup surfaces for menus",null,null],[3,"XdgPopup","wayland_protocols::unstable::xdg_shell::v5::server::xdg_popup","",null,null],[3,"Implementation","","",null,null],[12,"destroy","","remove xdg_popup interface",282,null],[11,"ptr","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell","",283,null],[11,"from_ptr_new","","",283,null],[11,"from_ptr_initialized","","",283,null],[11,"interface_ptr","","",283,null],[11,"interface_name","","",283,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",283,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",283,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",283,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",283,{"inputs":[{"name":"self"},{"name":"xdgshell"}],"output":{"name":"bool"}}],[11,"set_user_data","","",283,null],[11,"get_user_data","","",283,null],[11,"clone_unchecked","","",283,{"inputs":[{"name":"self"}],"output":{"name":"xdgshell"}}],[11,"__dispatch_msg","","",283,null],[11,"clone","","",270,{"inputs":[{"name":"self"}],"output":{"name":"version"}}],[11,"fmt","","",270,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",270,{"inputs":[{"name":"self"},{"name":"version"}],"output":{"name":"bool"}}],[11,"from_raw","","",270,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",270,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",271,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",271,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",271,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",271,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",271,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",269,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",269,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"destroy","","destroy xdg_shell",283,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"use_unstable_version","","enable use of this unstable version",283,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"get_xdg_surface","","create a shell surface from a surface",283,{"inputs":[{"name":"self"},{"name":"wlsurface"}],"output":{"name":"requestresult"}}],[11,"get_xdg_popup","","create a popup for a surface",283,{"inputs":[{"name":"self"},{"name":"wlsurface"},{"name":"wlsurface"},{"name":"wlseat"},{"name":"u32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"pong","","respond to a ping event",283,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","",284,null],[11,"from_ptr_new","","",284,null],[11,"from_ptr_initialized","","",284,null],[11,"interface_ptr","","",284,null],[11,"interface_name","","",284,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",284,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",284,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",284,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",284,{"inputs":[{"name":"self"},{"name":"xdgsurface"}],"output":{"name":"bool"}}],[11,"set_user_data","","",284,null],[11,"get_user_data","","",284,null],[11,"clone_unchecked","","",284,{"inputs":[{"name":"self"}],"output":{"name":"xdgsurface"}}],[11,"__dispatch_msg","","",284,null],[11,"clone","","",273,{"inputs":[{"name":"self"}],"output":{"name":"resizeedge"}}],[11,"fmt","","",273,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",273,{"inputs":[{"name":"self"},{"name":"resizeedge"}],"output":{"name":"bool"}}],[11,"from_raw","","",273,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",273,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",274,{"inputs":[{"name":"self"}],"output":{"name":"state"}}],[11,"fmt","","",274,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",274,{"inputs":[{"name":"self"},{"name":"state"}],"output":{"name":"bool"}}],[11,"from_raw","","",274,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",274,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",272,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",272,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"destroy","","Destroy the xdg_surface",284,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"set_parent","","set the parent of this surface",284,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"requestresult"}}],[11,"set_title","","set surface title",284,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"requestresult"}}],[11,"set_app_id","","set application ID",284,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"requestresult"}}],[11,"show_window_menu","","show the window menu",284,{"inputs":[{"name":"self"},{"name":"wlseat"},{"name":"u32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"_move","","start an interactive move",284,{"inputs":[{"name":"self"},{"name":"wlseat"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"resize","","start an interactive resize",284,{"inputs":[{"name":"self"},{"name":"wlseat"},{"name":"u32"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"ack_configure","","ack a configure event",284,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"set_window_geometry","","set the new window geometry",284,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"set_maximized","","maximize the window",284,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"unset_maximized","","unmaximize the window",284,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"set_fullscreen","","set the window as fullscreen on a monitor",284,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"requestresult"}}],[11,"unset_fullscreen","","",284,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"set_minimized","","set the window as minimized",284,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::unstable::xdg_shell::v5::client::xdg_popup","",285,null],[11,"from_ptr_new","","",285,null],[11,"from_ptr_initialized","","",285,null],[11,"interface_ptr","","",285,null],[11,"interface_name","","",285,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",285,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",285,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",285,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",285,{"inputs":[{"name":"self"},{"name":"xdgpopup"}],"output":{"name":"bool"}}],[11,"set_user_data","","",285,null],[11,"get_user_data","","",285,null],[11,"clone_unchecked","","",285,{"inputs":[{"name":"self"}],"output":{"name":"xdgpopup"}}],[11,"__dispatch_msg","","",285,null],[11,"clone","","",275,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",275,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"destroy","","remove xdg_popup interface",285,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","",286,null],[11,"from_ptr_new","","",286,null],[11,"from_ptr_initialized","","",286,null],[11,"interface_ptr","","",286,null],[11,"interface_name","","",286,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",286,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",286,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",286,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",286,{"inputs":[{"name":"self"},{"name":"xdgshell"}],"output":{"name":"bool"}}],[11,"set_user_data","","",286,null],[11,"get_user_data","","",286,null],[11,"clone_unchecked","","",286,{"inputs":[{"name":"self"}],"output":{"name":"xdgshell"}}],[11,"__dispatch_msg","","",286,null],[11,"clone","","",277,{"inputs":[{"name":"self"}],"output":{"name":"version"}}],[11,"fmt","","",277,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",277,{"inputs":[{"name":"self"},{"name":"version"}],"output":{"name":"bool"}}],[11,"from_raw","","",277,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",277,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",278,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",278,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",278,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",278,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",278,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",276,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",276,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"ping","","check if the client is alive",286,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"ptr","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","",287,null],[11,"from_ptr_new","","",287,null],[11,"from_ptr_initialized","","",287,null],[11,"interface_ptr","","",287,null],[11,"interface_name","","",287,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",287,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",287,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",287,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",287,{"inputs":[{"name":"self"},{"name":"xdgsurface"}],"output":{"name":"bool"}}],[11,"set_user_data","","",287,null],[11,"get_user_data","","",287,null],[11,"clone_unchecked","","",287,{"inputs":[{"name":"self"}],"output":{"name":"xdgsurface"}}],[11,"__dispatch_msg","","",287,null],[11,"clone","","",280,{"inputs":[{"name":"self"}],"output":{"name":"resizeedge"}}],[11,"fmt","","",280,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",280,{"inputs":[{"name":"self"},{"name":"resizeedge"}],"output":{"name":"bool"}}],[11,"from_raw","","",280,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",280,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",281,{"inputs":[{"name":"self"}],"output":{"name":"state"}}],[11,"fmt","","",281,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",281,{"inputs":[{"name":"self"},{"name":"state"}],"output":{"name":"bool"}}],[11,"from_raw","","",281,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",281,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",279,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",279,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"configure","","suggest a surface change",287,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"vec"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"close","","surface wants to be closed",287,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"ptr","wayland_protocols::unstable::xdg_shell::v5::server::xdg_popup","",288,null],[11,"from_ptr_new","","",288,null],[11,"from_ptr_initialized","","",288,null],[11,"interface_ptr","","",288,null],[11,"interface_name","","",288,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",288,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",288,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",288,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",288,{"inputs":[{"name":"self"},{"name":"xdgpopup"}],"output":{"name":"bool"}}],[11,"set_user_data","","",288,null],[11,"get_user_data","","",288,null],[11,"clone_unchecked","","",288,{"inputs":[{"name":"self"}],"output":{"name":"xdgpopup"}}],[11,"__dispatch_msg","","",288,null],[11,"clone","","",282,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",282,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"popup_done","","popup interaction is done",288,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[0,"v6","wayland_protocols::unstable::xdg_shell","",null,null],[0,"client","wayland_protocols::unstable::xdg_shell::v6","Client-side API of this protocol",null,null],[0,"zxdg_shell_v6","wayland_protocols::unstable::xdg_shell::v6::client","create desktop-style surfaces",null,null],[3,"ZxdgShellV6","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","",null,null],[3,"Implementation","","",null,null],[12,"ping","","check if the client is alive",289,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",290,null],[13,"DefunctSurfaces","","xdg_shell was destroyed before children",290,null],[13,"NotTheTopmostPopup","","the client tried to map or destroy a non-topmost popup",290,null],[13,"InvalidPopupParent","","the client specified an invalid popup parent surface",290,null],[13,"InvalidSurfaceState","","the client provided an invalid surface state",290,null],[13,"InvalidPositioner","","the client provided an invalid positioner",290,null],[0,"zxdg_positioner_v6","wayland_protocols::unstable::xdg_shell::v6::client","child surface positioner",null,null],[3,"ZxdgPositionerV6","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",null,null],[3,"Anchor","","",null,null],[3,"Gravity","","",null,null],[3,"ConstraintAdjustment","","constraint adjustments",null,null],[4,"Error","","",null,null],[13,"InvalidInput","","invalid input provided",291,null],[0,"zxdg_surface_v6","wayland_protocols::unstable::xdg_shell::v6::client","desktop user interface surface base interface",null,null],[3,"ZxdgSurfaceV6","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","",null,null],[3,"Implementation","","",null,null],[12,"configure","","suggest a surface change",292,null],[4,"Error","","",null,null],[13,"NotConstructed","","",293,null],[13,"AlreadyConstructed","","",293,null],[13,"UnconfiguredBuffer","","",293,null],[0,"zxdg_toplevel_v6","wayland_protocols::unstable::xdg_shell::v6::client","toplevel surface",null,null],[3,"ZxdgToplevelV6","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","",null,null],[3,"Implementation","","",null,null],[12,"configure","","suggest a surface change",294,null],[12,"close","","surface wants to be closed",294,null],[4,"ResizeEdge","","edge values for resizing",null,null],[13,"None","","",295,null],[13,"Top","","",295,null],[13,"Bottom","","",295,null],[13,"Left","","",295,null],[13,"TopLeft","","",295,null],[13,"BottomLeft","","",295,null],[13,"Right","","",295,null],[13,"TopRight","","",295,null],[13,"BottomRight","","",295,null],[4,"State","","types of state on the surface",null,null],[13,"Maximized","","the surface is maximized",296,null],[13,"Fullscreen","","the surface is fullscreen",296,null],[13,"Resizing","","the surface is being resized",296,null],[13,"Activated","","the surface is now activated",296,null],[0,"zxdg_popup_v6","wayland_protocols::unstable::xdg_shell::v6::client","short-lived, popup surfaces for menus",null,null],[3,"ZxdgPopupV6","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6","",null,null],[3,"Implementation","","",null,null],[12,"configure","","configure the popup surface",297,null],[12,"popup_done","","popup interaction is done",297,null],[4,"Error","","",null,null],[13,"InvalidGrab","","tried to grab after being mapped",298,null],[0,"server","wayland_protocols::unstable::xdg_shell::v6","Server-side API of this protocol",null,null],[0,"zxdg_shell_v6","wayland_protocols::unstable::xdg_shell::v6::server","create desktop-style surfaces",null,null],[3,"ZxdgShellV6","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6","",null,null],[3,"Implementation","","",null,null],[12,"destroy","","destroy xdg_shell",299,null],[12,"create_positioner","","create a positioner object",299,null],[12,"get_xdg_surface","","create a shell surface from a surface",299,null],[12,"pong","","respond to a ping event",299,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",300,null],[13,"DefunctSurfaces","","xdg_shell was destroyed before children",300,null],[13,"NotTheTopmostPopup","","the client tried to map or destroy a non-topmost popup",300,null],[13,"InvalidPopupParent","","the client specified an invalid popup parent surface",300,null],[13,"InvalidSurfaceState","","the client provided an invalid surface state",300,null],[13,"InvalidPositioner","","the client provided an invalid positioner",300,null],[0,"zxdg_positioner_v6","wayland_protocols::unstable::xdg_shell::v6::server","child surface positioner",null,null],[3,"ZxdgPositionerV6","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",null,null],[3,"Anchor","","",null,null],[3,"Gravity","","",null,null],[3,"ConstraintAdjustment","","constraint adjustments",null,null],[3,"Implementation","","",null,null],[12,"destroy","","destroy the xdg_positioner object",301,null],[12,"set_size","","set the size of the to-be positioned rectangle",301,null],[12,"set_anchor_rect","","set the anchor rectangle within the parent surface",301,null],[12,"set_anchor","","set anchor rectangle anchor edges",301,null],[12,"set_gravity","","set child surface gravity",301,null],[12,"set_constraint_adjustment","","set the adjustment to be done when constrained",301,null],[12,"set_offset","","set surface position offset",301,null],[4,"Error","","",null,null],[13,"InvalidInput","","invalid input provided",302,null],[0,"zxdg_surface_v6","wayland_protocols::unstable::xdg_shell::v6::server","desktop user interface surface base interface",null,null],[3,"ZxdgSurfaceV6","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","",null,null],[3,"Implementation","","",null,null],[12,"destroy","","destroy the xdg_surface",303,null],[12,"get_toplevel","","assign the xdg_toplevel surface role",303,null],[12,"get_popup","","assign the xdg_popup surface role",303,null],[12,"set_window_geometry","","set the new window geometry",303,null],[12,"ack_configure","","ack a configure event",303,null],[4,"Error","","",null,null],[13,"NotConstructed","","",304,null],[13,"AlreadyConstructed","","",304,null],[13,"UnconfiguredBuffer","","",304,null],[0,"zxdg_toplevel_v6","wayland_protocols::unstable::xdg_shell::v6::server","toplevel surface",null,null],[3,"ZxdgToplevelV6","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","",null,null],[3,"Implementation","","",null,null],[12,"destroy","","destroy the xdg_toplevel",305,null],[12,"set_parent","","set the parent of this surface",305,null],[12,"set_title","","set surface title",305,null],[12,"set_app_id","","set application ID",305,null],[12,"show_window_menu","","show the window menu",305,null],[12,"move_","","start an interactive move",305,null],[12,"resize","","start an interactive resize",305,null],[12,"set_max_size","","set the maximum size",305,null],[12,"set_min_size","","set the minimum size",305,null],[12,"set_maximized","","maximize the window",305,null],[12,"unset_maximized","","unmaximize the window",305,null],[12,"set_fullscreen","","set the window as fullscreen on a monitor",305,null],[12,"unset_fullscreen","","",305,null],[12,"set_minimized","","set the window as minimized",305,null],[4,"ResizeEdge","","edge values for resizing",null,null],[13,"None","","",306,null],[13,"Top","","",306,null],[13,"Bottom","","",306,null],[13,"Left","","",306,null],[13,"TopLeft","","",306,null],[13,"BottomLeft","","",306,null],[13,"Right","","",306,null],[13,"TopRight","","",306,null],[13,"BottomRight","","",306,null],[4,"State","","types of state on the surface",null,null],[13,"Maximized","","the surface is maximized",307,null],[13,"Fullscreen","","the surface is fullscreen",307,null],[13,"Resizing","","the surface is being resized",307,null],[13,"Activated","","the surface is now activated",307,null],[0,"zxdg_popup_v6","wayland_protocols::unstable::xdg_shell::v6::server","short-lived, popup surfaces for menus",null,null],[3,"ZxdgPopupV6","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_popup_v6","",null,null],[3,"Implementation","","",null,null],[12,"destroy","","remove xdg_popup interface",308,null],[12,"grab","","make the popup take an explicit grab",308,null],[4,"Error","","",null,null],[13,"InvalidGrab","","tried to grab after being mapped",309,null],[11,"ptr","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","",310,null],[11,"from_ptr_new","","",310,null],[11,"from_ptr_initialized","","",310,null],[11,"interface_ptr","","",310,null],[11,"interface_name","","",310,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",310,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",310,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",310,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",310,{"inputs":[{"name":"self"},{"name":"zxdgshellv6"}],"output":{"name":"bool"}}],[11,"set_user_data","","",310,null],[11,"get_user_data","","",310,null],[11,"clone_unchecked","","",310,{"inputs":[{"name":"self"}],"output":{"name":"zxdgshellv6"}}],[11,"__dispatch_msg","","",310,null],[11,"clone","","",290,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",290,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",290,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",290,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",290,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",289,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",289,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"destroy","","destroy xdg_shell",310,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"create_positioner","","create a positioner object",310,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"get_xdg_surface","","create a shell surface from a surface",310,{"inputs":[{"name":"self"},{"name":"wlsurface"}],"output":{"name":"requestresult"}}],[11,"pong","","respond to a ping event",310,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",311,null],[11,"from_ptr_new","","",311,null],[11,"from_ptr_initialized","","",311,null],[11,"interface_ptr","","",311,null],[11,"interface_name","","",311,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",311,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",311,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",311,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",311,{"inputs":[{"name":"self"},{"name":"zxdgpositionerv6"}],"output":{"name":"bool"}}],[11,"set_user_data","","",311,null],[11,"get_user_data","","",311,null],[11,"clone_unchecked","","",311,{"inputs":[{"name":"self"}],"output":{"name":"zxdgpositionerv6"}}],[11,"clone","","",291,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",291,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",291,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",291,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",291,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"eq","","",312,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"bool"}}],[11,"ne","","",312,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"bool"}}],[11,"clone","","",312,{"inputs":[{"name":"self"}],"output":{"name":"anchor"}}],[11,"partial_cmp","","",312,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"option"}}],[11,"lt","","",312,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"bool"}}],[11,"le","","",312,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"bool"}}],[11,"gt","","",312,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"bool"}}],[11,"ge","","",312,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"bool"}}],[11,"cmp","","",312,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"ordering"}}],[11,"hash","","",312,null],[11,"fmt","","",312,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",312,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",312,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",312,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",312,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[18,"None","","the center of the anchor rectangle",312,null],[18,"Top","","the top edge of the anchor rectangle",312,null],[18,"Bottom","","the bottom edge of the anchor rectangle",312,null],[18,"Left","","the left edge of the anchor rectangle",312,null],[18,"Right","","the right edge of the anchor rectangle",312,null],[11,"empty","","Returns an empty set of flags.",312,{"inputs":[],"output":{"name":"anchor"}}],[11,"all","","Returns the set containing all flags.",312,{"inputs":[],"output":{"name":"anchor"}}],[11,"bits","","Returns the raw value of the flags currently stored.",312,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",312,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",312,{"inputs":[{"name":"u32"}],"output":{"name":"anchor"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",312,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",312,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",312,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",312,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",312,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",312,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",312,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",312,{"inputs":[{"name":"self"},{"name":"anchor"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",312,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"anchor"}}],[11,"bitor_assign","","Adds the set of flags.",312,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",312,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"anchor"}}],[11,"bitxor_assign","","Toggles the set of flags.",312,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",312,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"anchor"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",312,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",312,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"anchor"}}],[11,"sub_assign","","Disables all flags enabled in the set.",312,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",312,{"inputs":[{"name":"self"}],"output":{"name":"anchor"}}],[11,"extend","","",312,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",312,{"inputs":[{"name":"t"}],"output":{"name":"anchor"}}],[11,"from_raw","","",312,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",312,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"eq","","",313,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"bool"}}],[11,"ne","","",313,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"bool"}}],[11,"clone","","",313,{"inputs":[{"name":"self"}],"output":{"name":"gravity"}}],[11,"partial_cmp","","",313,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"option"}}],[11,"lt","","",313,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"bool"}}],[11,"le","","",313,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"bool"}}],[11,"gt","","",313,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"bool"}}],[11,"ge","","",313,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"bool"}}],[11,"cmp","","",313,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"ordering"}}],[11,"hash","","",313,null],[11,"fmt","","",313,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",313,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",313,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",313,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",313,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[18,"None","","center over the anchor edge",313,null],[18,"Top","","position above the anchor edge",313,null],[18,"Bottom","","position below the anchor edge",313,null],[18,"Left","","position to the left of the anchor edge",313,null],[18,"Right","","position to the right of the anchor edge",313,null],[11,"empty","","Returns an empty set of flags.",313,{"inputs":[],"output":{"name":"gravity"}}],[11,"all","","Returns the set containing all flags.",313,{"inputs":[],"output":{"name":"gravity"}}],[11,"bits","","Returns the raw value of the flags currently stored.",313,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",313,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",313,{"inputs":[{"name":"u32"}],"output":{"name":"gravity"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",313,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",313,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",313,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",313,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",313,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",313,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",313,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",313,{"inputs":[{"name":"self"},{"name":"gravity"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",313,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"gravity"}}],[11,"bitor_assign","","Adds the set of flags.",313,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",313,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"gravity"}}],[11,"bitxor_assign","","Toggles the set of flags.",313,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",313,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"gravity"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",313,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",313,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"gravity"}}],[11,"sub_assign","","Disables all flags enabled in the set.",313,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",313,{"inputs":[{"name":"self"}],"output":{"name":"gravity"}}],[11,"extend","","",313,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",313,{"inputs":[{"name":"t"}],"output":{"name":"gravity"}}],[11,"from_raw","","",313,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",313,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"eq","","",314,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"ne","","",314,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"clone","","",314,{"inputs":[{"name":"self"}],"output":{"name":"constraintadjustment"}}],[11,"partial_cmp","","",314,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"option"}}],[11,"lt","","",314,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"le","","",314,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"gt","","",314,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"ge","","",314,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"cmp","","",314,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"ordering"}}],[11,"hash","","",314,null],[11,"fmt","","",314,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",314,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",314,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",314,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",314,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[18,"None","","don't move the child surface when constrained",314,null],[18,"SlideX","","move along the x axis until unconstrained",314,null],[18,"SlideY","","move along the y axis until unconstrained",314,null],[18,"FlipX","","invert the anchor and gravity on the x axis",314,null],[18,"FlipY","","invert the anchor and gravity on the y axis",314,null],[18,"ResizeX","","horizontally resize the surface",314,null],[18,"ResizeY","","vertically resize the surface",314,null],[11,"empty","","Returns an empty set of flags.",314,{"inputs":[],"output":{"name":"constraintadjustment"}}],[11,"all","","Returns the set containing all flags.",314,{"inputs":[],"output":{"name":"constraintadjustment"}}],[11,"bits","","Returns the raw value of the flags currently stored.",314,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",314,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",314,{"inputs":[{"name":"u32"}],"output":{"name":"constraintadjustment"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",314,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",314,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",314,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",314,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",314,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",314,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",314,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",314,{"inputs":[{"name":"self"},{"name":"constraintadjustment"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",314,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"constraintadjustment"}}],[11,"bitor_assign","","Adds the set of flags.",314,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",314,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"constraintadjustment"}}],[11,"bitxor_assign","","Toggles the set of flags.",314,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",314,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"constraintadjustment"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",314,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",314,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"constraintadjustment"}}],[11,"sub_assign","","Disables all flags enabled in the set.",314,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",314,{"inputs":[{"name":"self"}],"output":{"name":"constraintadjustment"}}],[11,"extend","","",314,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",314,{"inputs":[{"name":"t"}],"output":{"name":"constraintadjustment"}}],[11,"from_raw","","",314,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",314,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"destroy","","destroy the xdg_positioner object",311,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"set_size","","set the size of the to-be positioned rectangle",311,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"set_anchor_rect","","set the anchor rectangle within the parent surface",311,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"set_anchor","","set anchor rectangle anchor edges",311,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"requestresult"}}],[11,"set_gravity","","set child surface gravity",311,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"requestresult"}}],[11,"set_constraint_adjustment","","set the adjustment to be done when constrained",311,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"set_offset","","set surface position offset",311,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","",315,null],[11,"from_ptr_new","","",315,null],[11,"from_ptr_initialized","","",315,null],[11,"interface_ptr","","",315,null],[11,"interface_name","","",315,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",315,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",315,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",315,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",315,{"inputs":[{"name":"self"},{"name":"zxdgsurfacev6"}],"output":{"name":"bool"}}],[11,"set_user_data","","",315,null],[11,"get_user_data","","",315,null],[11,"clone_unchecked","","",315,{"inputs":[{"name":"self"}],"output":{"name":"zxdgsurfacev6"}}],[11,"__dispatch_msg","","",315,null],[11,"clone","","",293,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",293,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",293,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",293,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",293,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",292,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",292,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"destroy","","destroy the xdg_surface",315,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"get_toplevel","","assign the xdg_toplevel surface role",315,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"get_popup","","assign the xdg_popup surface role",315,{"inputs":[{"name":"self"},{"name":"zxdgsurfacev6"},{"name":"zxdgpositionerv6"}],"output":{"name":"requestresult"}}],[11,"set_window_geometry","","set the new window geometry",315,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"ack_configure","","ack a configure event",315,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","",316,null],[11,"from_ptr_new","","",316,null],[11,"from_ptr_initialized","","",316,null],[11,"interface_ptr","","",316,null],[11,"interface_name","","",316,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",316,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",316,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",316,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",316,{"inputs":[{"name":"self"},{"name":"zxdgtoplevelv6"}],"output":{"name":"bool"}}],[11,"set_user_data","","",316,null],[11,"get_user_data","","",316,null],[11,"clone_unchecked","","",316,{"inputs":[{"name":"self"}],"output":{"name":"zxdgtoplevelv6"}}],[11,"__dispatch_msg","","",316,null],[11,"clone","","",295,{"inputs":[{"name":"self"}],"output":{"name":"resizeedge"}}],[11,"fmt","","",295,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",295,{"inputs":[{"name":"self"},{"name":"resizeedge"}],"output":{"name":"bool"}}],[11,"from_raw","","",295,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",295,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",296,{"inputs":[{"name":"self"}],"output":{"name":"state"}}],[11,"fmt","","",296,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",296,{"inputs":[{"name":"self"},{"name":"state"}],"output":{"name":"bool"}}],[11,"from_raw","","",296,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",296,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",294,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",294,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"destroy","","destroy the xdg_toplevel",316,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"set_parent","","set the parent of this surface",316,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"requestresult"}}],[11,"set_title","","set surface title",316,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"requestresult"}}],[11,"set_app_id","","set application ID",316,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"requestresult"}}],[11,"show_window_menu","","show the window menu",316,{"inputs":[{"name":"self"},{"name":"wlseat"},{"name":"u32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"_move","","start an interactive move",316,{"inputs":[{"name":"self"},{"name":"wlseat"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"resize","","start an interactive resize",316,{"inputs":[{"name":"self"},{"name":"wlseat"},{"name":"u32"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"set_max_size","","set the maximum size",316,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"set_min_size","","set the minimum size",316,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"set_maximized","","maximize the window",316,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"unset_maximized","","unmaximize the window",316,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"set_fullscreen","","set the window as fullscreen on a monitor",316,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"requestresult"}}],[11,"unset_fullscreen","","",316,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"set_minimized","","set the window as minimized",316,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6","",317,null],[11,"from_ptr_new","","",317,null],[11,"from_ptr_initialized","","",317,null],[11,"interface_ptr","","",317,null],[11,"interface_name","","",317,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",317,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",317,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",317,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",317,{"inputs":[{"name":"self"},{"name":"zxdgpopupv6"}],"output":{"name":"bool"}}],[11,"set_user_data","","",317,null],[11,"get_user_data","","",317,null],[11,"clone_unchecked","","",317,{"inputs":[{"name":"self"}],"output":{"name":"zxdgpopupv6"}}],[11,"__dispatch_msg","","",317,null],[11,"clone","","",298,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",298,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",298,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",298,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",298,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",297,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",297,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"destroy","","remove xdg_popup interface",317,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"grab","","make the popup take an explicit grab",317,{"inputs":[{"name":"self"},{"name":"wlseat"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6","",318,null],[11,"from_ptr_new","","",318,null],[11,"from_ptr_initialized","","",318,null],[11,"interface_ptr","","",318,null],[11,"interface_name","","",318,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",318,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",318,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",318,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",318,{"inputs":[{"name":"self"},{"name":"zxdgshellv6"}],"output":{"name":"bool"}}],[11,"set_user_data","","",318,null],[11,"get_user_data","","",318,null],[11,"clone_unchecked","","",318,{"inputs":[{"name":"self"}],"output":{"name":"zxdgshellv6"}}],[11,"__dispatch_msg","","",318,null],[11,"clone","","",300,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",300,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",300,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",300,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",300,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",299,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",299,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"ping","","check if the client is alive",318,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"ptr","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",319,null],[11,"from_ptr_new","","",319,null],[11,"from_ptr_initialized","","",319,null],[11,"interface_ptr","","",319,null],[11,"interface_name","","",319,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",319,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",319,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",319,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",319,{"inputs":[{"name":"self"},{"name":"zxdgpositionerv6"}],"output":{"name":"bool"}}],[11,"set_user_data","","",319,null],[11,"get_user_data","","",319,null],[11,"clone_unchecked","","",319,{"inputs":[{"name":"self"}],"output":{"name":"zxdgpositionerv6"}}],[11,"__dispatch_msg","","",319,null],[11,"clone","","",302,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",302,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",302,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",302,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",302,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"eq","","",320,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"bool"}}],[11,"ne","","",320,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"bool"}}],[11,"clone","","",320,{"inputs":[{"name":"self"}],"output":{"name":"anchor"}}],[11,"partial_cmp","","",320,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"option"}}],[11,"lt","","",320,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"bool"}}],[11,"le","","",320,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"bool"}}],[11,"gt","","",320,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"bool"}}],[11,"ge","","",320,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"bool"}}],[11,"cmp","","",320,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"ordering"}}],[11,"hash","","",320,null],[11,"fmt","","",320,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",320,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",320,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",320,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",320,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[18,"None","","the center of the anchor rectangle",320,null],[18,"Top","","the top edge of the anchor rectangle",320,null],[18,"Bottom","","the bottom edge of the anchor rectangle",320,null],[18,"Left","","the left edge of the anchor rectangle",320,null],[18,"Right","","the right edge of the anchor rectangle",320,null],[11,"empty","","Returns an empty set of flags.",320,{"inputs":[],"output":{"name":"anchor"}}],[11,"all","","Returns the set containing all flags.",320,{"inputs":[],"output":{"name":"anchor"}}],[11,"bits","","Returns the raw value of the flags currently stored.",320,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",320,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",320,{"inputs":[{"name":"u32"}],"output":{"name":"anchor"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",320,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",320,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",320,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",320,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",320,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",320,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",320,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",320,{"inputs":[{"name":"self"},{"name":"anchor"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",320,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"anchor"}}],[11,"bitor_assign","","Adds the set of flags.",320,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",320,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"anchor"}}],[11,"bitxor_assign","","Toggles the set of flags.",320,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",320,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"anchor"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",320,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",320,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"anchor"}}],[11,"sub_assign","","Disables all flags enabled in the set.",320,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",320,{"inputs":[{"name":"self"}],"output":{"name":"anchor"}}],[11,"extend","","",320,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",320,{"inputs":[{"name":"t"}],"output":{"name":"anchor"}}],[11,"from_raw","","",320,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",320,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"eq","","",321,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"bool"}}],[11,"ne","","",321,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"bool"}}],[11,"clone","","",321,{"inputs":[{"name":"self"}],"output":{"name":"gravity"}}],[11,"partial_cmp","","",321,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"option"}}],[11,"lt","","",321,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"bool"}}],[11,"le","","",321,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"bool"}}],[11,"gt","","",321,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"bool"}}],[11,"ge","","",321,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"bool"}}],[11,"cmp","","",321,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"ordering"}}],[11,"hash","","",321,null],[11,"fmt","","",321,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",321,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",321,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",321,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",321,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[18,"None","","center over the anchor edge",321,null],[18,"Top","","position above the anchor edge",321,null],[18,"Bottom","","position below the anchor edge",321,null],[18,"Left","","position to the left of the anchor edge",321,null],[18,"Right","","position to the right of the anchor edge",321,null],[11,"empty","","Returns an empty set of flags.",321,{"inputs":[],"output":{"name":"gravity"}}],[11,"all","","Returns the set containing all flags.",321,{"inputs":[],"output":{"name":"gravity"}}],[11,"bits","","Returns the raw value of the flags currently stored.",321,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",321,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",321,{"inputs":[{"name":"u32"}],"output":{"name":"gravity"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",321,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",321,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",321,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",321,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",321,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",321,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",321,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",321,{"inputs":[{"name":"self"},{"name":"gravity"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",321,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"gravity"}}],[11,"bitor_assign","","Adds the set of flags.",321,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",321,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"gravity"}}],[11,"bitxor_assign","","Toggles the set of flags.",321,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",321,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"gravity"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",321,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",321,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"gravity"}}],[11,"sub_assign","","Disables all flags enabled in the set.",321,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",321,{"inputs":[{"name":"self"}],"output":{"name":"gravity"}}],[11,"extend","","",321,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",321,{"inputs":[{"name":"t"}],"output":{"name":"gravity"}}],[11,"from_raw","","",321,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",321,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"eq","","",322,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"ne","","",322,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"clone","","",322,{"inputs":[{"name":"self"}],"output":{"name":"constraintadjustment"}}],[11,"partial_cmp","","",322,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"option"}}],[11,"lt","","",322,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"le","","",322,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"gt","","",322,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"ge","","",322,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"cmp","","",322,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"ordering"}}],[11,"hash","","",322,null],[11,"fmt","","",322,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",322,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",322,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",322,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",322,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[18,"None","","don't move the child surface when constrained",322,null],[18,"SlideX","","move along the x axis until unconstrained",322,null],[18,"SlideY","","move along the y axis until unconstrained",322,null],[18,"FlipX","","invert the anchor and gravity on the x axis",322,null],[18,"FlipY","","invert the anchor and gravity on the y axis",322,null],[18,"ResizeX","","horizontally resize the surface",322,null],[18,"ResizeY","","vertically resize the surface",322,null],[11,"empty","","Returns an empty set of flags.",322,{"inputs":[],"output":{"name":"constraintadjustment"}}],[11,"all","","Returns the set containing all flags.",322,{"inputs":[],"output":{"name":"constraintadjustment"}}],[11,"bits","","Returns the raw value of the flags currently stored.",322,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",322,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",322,{"inputs":[{"name":"u32"}],"output":{"name":"constraintadjustment"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",322,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",322,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",322,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",322,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",322,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",322,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",322,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",322,{"inputs":[{"name":"self"},{"name":"constraintadjustment"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",322,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"constraintadjustment"}}],[11,"bitor_assign","","Adds the set of flags.",322,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",322,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"constraintadjustment"}}],[11,"bitxor_assign","","Toggles the set of flags.",322,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",322,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"constraintadjustment"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",322,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",322,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"constraintadjustment"}}],[11,"sub_assign","","Disables all flags enabled in the set.",322,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",322,{"inputs":[{"name":"self"}],"output":{"name":"constraintadjustment"}}],[11,"extend","","",322,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",322,{"inputs":[{"name":"t"}],"output":{"name":"constraintadjustment"}}],[11,"from_raw","","",322,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",322,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",301,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",301,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"ptr","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","",323,null],[11,"from_ptr_new","","",323,null],[11,"from_ptr_initialized","","",323,null],[11,"interface_ptr","","",323,null],[11,"interface_name","","",323,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",323,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",323,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",323,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",323,{"inputs":[{"name":"self"},{"name":"zxdgsurfacev6"}],"output":{"name":"bool"}}],[11,"set_user_data","","",323,null],[11,"get_user_data","","",323,null],[11,"clone_unchecked","","",323,{"inputs":[{"name":"self"}],"output":{"name":"zxdgsurfacev6"}}],[11,"__dispatch_msg","","",323,null],[11,"clone","","",304,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",304,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",304,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",304,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",304,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",303,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",303,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"configure","","suggest a surface change",323,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"ptr","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","",324,null],[11,"from_ptr_new","","",324,null],[11,"from_ptr_initialized","","",324,null],[11,"interface_ptr","","",324,null],[11,"interface_name","","",324,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",324,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",324,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",324,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",324,{"inputs":[{"name":"self"},{"name":"zxdgtoplevelv6"}],"output":{"name":"bool"}}],[11,"set_user_data","","",324,null],[11,"get_user_data","","",324,null],[11,"clone_unchecked","","",324,{"inputs":[{"name":"self"}],"output":{"name":"zxdgtoplevelv6"}}],[11,"__dispatch_msg","","",324,null],[11,"clone","","",306,{"inputs":[{"name":"self"}],"output":{"name":"resizeedge"}}],[11,"fmt","","",306,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",306,{"inputs":[{"name":"self"},{"name":"resizeedge"}],"output":{"name":"bool"}}],[11,"from_raw","","",306,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",306,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",307,{"inputs":[{"name":"self"}],"output":{"name":"state"}}],[11,"fmt","","",307,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",307,{"inputs":[{"name":"self"},{"name":"state"}],"output":{"name":"bool"}}],[11,"from_raw","","",307,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",307,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",305,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",305,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"configure","","suggest a surface change",324,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"vec"}],"output":{"name":"eventresult"}}],[11,"close","","surface wants to be closed",324,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"ptr","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_popup_v6","",325,null],[11,"from_ptr_new","","",325,null],[11,"from_ptr_initialized","","",325,null],[11,"interface_ptr","","",325,null],[11,"interface_name","","",325,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",325,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",325,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",325,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",325,{"inputs":[{"name":"self"},{"name":"zxdgpopupv6"}],"output":{"name":"bool"}}],[11,"set_user_data","","",325,null],[11,"get_user_data","","",325,null],[11,"clone_unchecked","","",325,{"inputs":[{"name":"self"}],"output":{"name":"zxdgpopupv6"}}],[11,"__dispatch_msg","","",325,null],[11,"clone","","",309,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",309,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",309,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",309,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",309,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",308,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",308,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"configure","","configure the popup surface",325,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"eventresult"}}],[11,"popup_done","","popup interaction is done",325,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[0,"xwayland_keyboard_grab","wayland_protocols::unstable","Protocol for grabbing the keyboard from Xwayland",null,null],[0,"v1","wayland_protocols::unstable::xwayland_keyboard_grab","",null,null],[0,"client","wayland_protocols::unstable::xwayland_keyboard_grab::v1","Client-side API of this protocol",null,null],[0,"zwp_xwayland_keyboard_grab_manager_v1","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client","context object for keyboard grab manager",null,null],[3,"ZwpXwaylandKeyboardGrabManagerV1","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_manager_v1","",null,null],[0,"zwp_xwayland_keyboard_grab_v1","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client","interface for grabbing the keyboard",null,null],[3,"ZwpXwaylandKeyboardGrabV1","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_v1","",null,null],[0,"server","wayland_protocols::unstable::xwayland_keyboard_grab::v1","Server-side API of this protocol",null,null],[0,"zwp_xwayland_keyboard_grab_manager_v1","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server","context object for keyboard grab manager",null,null],[3,"ZwpXwaylandKeyboardGrabManagerV1","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_manager_v1","",null,null],[3,"Implementation","","",null,null],[12,"destroy","","destroy the keyboard grab manager",326,null],[12,"grab_keyboard","","grab the keyboard to a surface",326,null],[0,"zwp_xwayland_keyboard_grab_v1","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server","interface for grabbing the keyboard",null,null],[3,"ZwpXwaylandKeyboardGrabV1","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_v1","",null,null],[3,"Implementation","","",null,null],[12,"destroy","","destroy the grabbed keyboard object",327,null],[11,"ptr","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_manager_v1","",328,null],[11,"from_ptr_new","","",328,null],[11,"from_ptr_initialized","","",328,null],[11,"interface_ptr","","",328,null],[11,"interface_name","","",328,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",328,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",328,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",328,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",328,{"inputs":[{"name":"self"},{"name":"zwpxwaylandkeyboardgrabmanagerv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",328,null],[11,"get_user_data","","",328,null],[11,"clone_unchecked","","",328,{"inputs":[{"name":"self"}],"output":{"name":"zwpxwaylandkeyboardgrabmanagerv1"}}],[11,"destroy","","destroy the keyboard grab manager",328,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"grab_keyboard","","grab the keyboard to a surface",328,{"inputs":[{"name":"self"},{"name":"wlsurface"},{"name":"wlseat"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_v1","",329,null],[11,"from_ptr_new","","",329,null],[11,"from_ptr_initialized","","",329,null],[11,"interface_ptr","","",329,null],[11,"interface_name","","",329,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",329,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",329,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",329,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",329,{"inputs":[{"name":"self"},{"name":"zwpxwaylandkeyboardgrabv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",329,null],[11,"get_user_data","","",329,null],[11,"clone_unchecked","","",329,{"inputs":[{"name":"self"}],"output":{"name":"zwpxwaylandkeyboardgrabv1"}}],[11,"destroy","","destroy the grabbed keyboard object",329,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_manager_v1","",330,null],[11,"from_ptr_new","","",330,null],[11,"from_ptr_initialized","","",330,null],[11,"interface_ptr","","",330,null],[11,"interface_name","","",330,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",330,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",330,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",330,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",330,{"inputs":[{"name":"self"},{"name":"zwpxwaylandkeyboardgrabmanagerv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",330,null],[11,"get_user_data","","",330,null],[11,"clone_unchecked","","",330,{"inputs":[{"name":"self"}],"output":{"name":"zwpxwaylandkeyboardgrabmanagerv1"}}],[11,"__dispatch_msg","","",330,null],[11,"clone","","",326,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",326,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"ptr","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_v1","",331,null],[11,"from_ptr_new","","",331,null],[11,"from_ptr_initialized","","",331,null],[11,"interface_ptr","","",331,null],[11,"interface_name","","",331,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",331,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",331,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",331,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",331,{"inputs":[{"name":"self"},{"name":"zwpxwaylandkeyboardgrabv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",331,null],[11,"get_user_data","","",331,null],[11,"clone_unchecked","","",331,{"inputs":[{"name":"self"}],"output":{"name":"zwpxwaylandkeyboardgrabv1"}}],[11,"__dispatch_msg","","",331,null],[11,"clone","","",327,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",327,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[0,"presentation_time","wayland_protocols","Presentation time protocol",null,null],[0,"client","wayland_protocols::presentation_time","Client-side API of this protocol",null,null],[0,"wp_presentation","wayland_protocols::presentation_time::client","timed presentation related wl_surface requests",null,null],[3,"WpPresentation","wayland_protocols::presentation_time::client::wp_presentation","",null,null],[3,"Implementation","","",null,null],[12,"clock_id","","clock ID for timestamps",332,null],[4,"Error","","fatal presentation errors",null,null],[13,"InvalidTimestamp","","invalid value in tv_nsec",333,null],[13,"InvalidFlag","","invalid flag",333,null],[0,"wp_presentation_feedback","wayland_protocols::presentation_time::client","presentation time feedback event",null,null],[3,"WpPresentationFeedback","wayland_protocols::presentation_time::client::wp_presentation_feedback","",null,null],[3,"Implementation","","",null,null],[12,"sync_output","","presentation synchronized to this output",334,null],[12,"presented","","the content update was displayed",334,null],[12,"discarded","","the content update was not displayed",334,null],[4,"Kind","","bitmask of flags in presented event",null,null],[13,"Vsync","","presentation was vsync'd",335,null],[13,"HwClock","","hardware provided the presentation timestamp",335,null],[13,"HwCompletion","","hardware signalled the start of the presentation",335,null],[13,"ZeroCopy","","presentation was done zero-copy",335,null],[0,"server","wayland_protocols::presentation_time","Server-side API of this protocol",null,null],[0,"wp_presentation","wayland_protocols::presentation_time::server","timed presentation related wl_surface requests",null,null],[3,"WpPresentation","wayland_protocols::presentation_time::server::wp_presentation","",null,null],[3,"Implementation","","",null,null],[12,"destroy","","unbind from the presentation interface",336,null],[12,"feedback","","request presentation feedback information",336,null],[4,"Error","","fatal presentation errors",null,null],[13,"InvalidTimestamp","","invalid value in tv_nsec",337,null],[13,"InvalidFlag","","invalid flag",337,null],[0,"wp_presentation_feedback","wayland_protocols::presentation_time::server","presentation time feedback event",null,null],[3,"WpPresentationFeedback","wayland_protocols::presentation_time::server::wp_presentation_feedback","",null,null],[4,"Kind","","bitmask of flags in presented event",null,null],[13,"Vsync","","presentation was vsync'd",338,null],[13,"HwClock","","hardware provided the presentation timestamp",338,null],[13,"HwCompletion","","hardware signalled the start of the presentation",338,null],[13,"ZeroCopy","","presentation was done zero-copy",338,null],[0,"viewporter","wayland_protocols","Viewporter protocol",null,null],[0,"client","wayland_protocols::viewporter","Client-side API of this protocol",null,null],[0,"wp_viewporter","wayland_protocols::viewporter::client","surface cropping and scaling",null,null],[3,"WpViewporter","wayland_protocols::viewporter::client::wp_viewporter","",null,null],[4,"Error","","",null,null],[13,"ViewportExists","","the surface already has a viewport object associated",339,null],[0,"wp_viewport","wayland_protocols::viewporter::client","crop and scale interface to a wl_surface",null,null],[3,"WpViewport","wayland_protocols::viewporter::client::wp_viewport","",null,null],[4,"Error","","",null,null],[13,"BadValue","","negative or zero values in width or height",340,null],[13,"BadSize","","destination size is not integer",340,null],[13,"OutOfBuffer","","source rectangle extends outside of the content area",340,null],[13,"NoSurface","","the wl_surface was destroyed",340,null],[0,"server","wayland_protocols::viewporter","Server-side API of this protocol",null,null],[0,"wp_viewporter","wayland_protocols::viewporter::server","surface cropping and scaling",null,null],[3,"WpViewporter","wayland_protocols::viewporter::server::wp_viewporter","",null,null],[3,"Implementation","","",null,null],[12,"destroy","","unbind from the cropping and scaling interface",341,null],[12,"get_viewport","","extend surface interface for crop and scale",341,null],[4,"Error","","",null,null],[13,"ViewportExists","","the surface already has a viewport object associated",342,null],[0,"wp_viewport","wayland_protocols::viewporter::server","crop and scale interface to a wl_surface",null,null],[3,"WpViewport","wayland_protocols::viewporter::server::wp_viewport","",null,null],[3,"Implementation","","",null,null],[12,"destroy","","remove scaling and cropping from the surface",343,null],[12,"set_source","","set the source rectangle for cropping",343,null],[12,"set_destination","","set the surface size for scaling",343,null],[4,"Error","","",null,null],[13,"BadValue","","negative or zero values in width or height",344,null],[13,"BadSize","","destination size is not integer",344,null],[13,"OutOfBuffer","","source rectangle extends outside of the content area",344,null],[13,"NoSurface","","the wl_surface was destroyed",344,null],[11,"ptr","wayland_protocols::presentation_time::client::wp_presentation","",345,null],[11,"from_ptr_new","","",345,null],[11,"from_ptr_initialized","","",345,null],[11,"interface_ptr","","",345,null],[11,"interface_name","","",345,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",345,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",345,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",345,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",345,{"inputs":[{"name":"self"},{"name":"wppresentation"}],"output":{"name":"bool"}}],[11,"set_user_data","","",345,null],[11,"get_user_data","","",345,null],[11,"clone_unchecked","","",345,{"inputs":[{"name":"self"}],"output":{"name":"wppresentation"}}],[11,"__dispatch_msg","","",345,null],[11,"clone","","",333,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",333,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",333,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",333,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",333,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",332,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",332,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"destroy","","unbind from the presentation interface",345,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"feedback","","request presentation feedback information",345,{"inputs":[{"name":"self"},{"name":"wlsurface"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::presentation_time::client::wp_presentation_feedback","",346,null],[11,"from_ptr_new","","",346,null],[11,"from_ptr_initialized","","",346,null],[11,"interface_ptr","","",346,null],[11,"interface_name","","",346,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",346,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",346,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",346,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",346,{"inputs":[{"name":"self"},{"name":"wppresentationfeedback"}],"output":{"name":"bool"}}],[11,"set_user_data","","",346,null],[11,"get_user_data","","",346,null],[11,"clone_unchecked","","",346,{"inputs":[{"name":"self"}],"output":{"name":"wppresentationfeedback"}}],[11,"__dispatch_msg","","",346,null],[11,"clone","","",335,{"inputs":[{"name":"self"}],"output":{"name":"kind"}}],[11,"fmt","","",335,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",335,{"inputs":[{"name":"self"},{"name":"kind"}],"output":{"name":"bool"}}],[11,"from_raw","","",335,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",335,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",334,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",334,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"ptr","wayland_protocols::presentation_time::server::wp_presentation","",347,null],[11,"from_ptr_new","","",347,null],[11,"from_ptr_initialized","","",347,null],[11,"interface_ptr","","",347,null],[11,"interface_name","","",347,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",347,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",347,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",347,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",347,{"inputs":[{"name":"self"},{"name":"wppresentation"}],"output":{"name":"bool"}}],[11,"set_user_data","","",347,null],[11,"get_user_data","","",347,null],[11,"clone_unchecked","","",347,{"inputs":[{"name":"self"}],"output":{"name":"wppresentation"}}],[11,"__dispatch_msg","","",347,null],[11,"clone","","",337,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",337,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",337,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",337,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",337,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",336,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",336,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"clock_id","","clock ID for timestamps",347,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"ptr","wayland_protocols::presentation_time::server::wp_presentation_feedback","",348,null],[11,"from_ptr_new","","",348,null],[11,"from_ptr_initialized","","",348,null],[11,"interface_ptr","","",348,null],[11,"interface_name","","",348,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",348,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",348,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",348,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",348,{"inputs":[{"name":"self"},{"name":"wppresentationfeedback"}],"output":{"name":"bool"}}],[11,"set_user_data","","",348,null],[11,"get_user_data","","",348,null],[11,"clone_unchecked","","",348,{"inputs":[{"name":"self"}],"output":{"name":"wppresentationfeedback"}}],[11,"clone","","",338,{"inputs":[{"name":"self"}],"output":{"name":"kind"}}],[11,"fmt","","",338,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",338,{"inputs":[{"name":"self"},{"name":"kind"}],"output":{"name":"bool"}}],[11,"from_raw","","",338,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",338,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"sync_output","","presentation synchronized to this output",348,{"inputs":[{"name":"self"},{"name":"wloutput"}],"output":{"name":"eventresult"}}],[11,"presented","","the content update was displayed",348,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"discarded","","the content update was not displayed",348,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"ptr","wayland_protocols::viewporter::client::wp_viewporter","",349,null],[11,"from_ptr_new","","",349,null],[11,"from_ptr_initialized","","",349,null],[11,"interface_ptr","","",349,null],[11,"interface_name","","",349,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",349,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",349,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",349,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",349,{"inputs":[{"name":"self"},{"name":"wpviewporter"}],"output":{"name":"bool"}}],[11,"set_user_data","","",349,null],[11,"get_user_data","","",349,null],[11,"clone_unchecked","","",349,{"inputs":[{"name":"self"}],"output":{"name":"wpviewporter"}}],[11,"clone","","",339,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",339,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",339,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",339,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",339,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"destroy","","unbind from the cropping and scaling interface",349,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"get_viewport","","extend surface interface for crop and scale",349,{"inputs":[{"name":"self"},{"name":"wlsurface"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::viewporter::client::wp_viewport","",350,null],[11,"from_ptr_new","","",350,null],[11,"from_ptr_initialized","","",350,null],[11,"interface_ptr","","",350,null],[11,"interface_name","","",350,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",350,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",350,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",350,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",350,{"inputs":[{"name":"self"},{"name":"wpviewport"}],"output":{"name":"bool"}}],[11,"set_user_data","","",350,null],[11,"get_user_data","","",350,null],[11,"clone_unchecked","","",350,{"inputs":[{"name":"self"}],"output":{"name":"wpviewport"}}],[11,"clone","","",340,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",340,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",340,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",340,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",340,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"destroy","","remove scaling and cropping from the surface",350,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"set_source","","set the source rectangle for cropping",350,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"requestresult"}}],[11,"set_destination","","set the surface size for scaling",350,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::viewporter::server::wp_viewporter","",351,null],[11,"from_ptr_new","","",351,null],[11,"from_ptr_initialized","","",351,null],[11,"interface_ptr","","",351,null],[11,"interface_name","","",351,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",351,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",351,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",351,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",351,{"inputs":[{"name":"self"},{"name":"wpviewporter"}],"output":{"name":"bool"}}],[11,"set_user_data","","",351,null],[11,"get_user_data","","",351,null],[11,"clone_unchecked","","",351,{"inputs":[{"name":"self"}],"output":{"name":"wpviewporter"}}],[11,"__dispatch_msg","","",351,null],[11,"clone","","",342,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",342,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",342,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",342,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",342,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",341,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",341,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"ptr","wayland_protocols::viewporter::server::wp_viewport","",352,null],[11,"from_ptr_new","","",352,null],[11,"from_ptr_initialized","","",352,null],[11,"interface_ptr","","",352,null],[11,"interface_name","","",352,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",352,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",352,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",352,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",352,{"inputs":[{"name":"self"},{"name":"wpviewport"}],"output":{"name":"bool"}}],[11,"set_user_data","","",352,null],[11,"get_user_data","","",352,null],[11,"clone_unchecked","","",352,{"inputs":[{"name":"self"}],"output":{"name":"wpviewport"}}],[11,"__dispatch_msg","","",352,null],[11,"clone","","",344,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",344,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",344,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",344,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",344,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",343,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",343,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}]],"paths":[[4,"Error"],[4,"FitMethod"],[3,"Implementation"],[4,"Error"],[4,"FitMethod"],[3,"ZwwBackgroundV1"],[3,"ZwwBackgroundV1"],[4,"Error"],[3,"Implementation"],[4,"Error"],[3,"ZwwBackgroundV2"],[3,"ZwwBackgroundV2"],[4,"Error"],[4,"Position"],[3,"Implementation"],[3,"Implementation"],[4,"Error"],[4,"Position"],[3,"Implementation"],[3,"ZwwDockManagerV1"],[3,"ZwwDockV1"],[3,"ZwwDockManagerV1"],[3,"ZwwDockV1"],[4,"Error"],[4,"Position"],[3,"Implementation"],[3,"Implementation"],[4,"Error"],[4,"Position"],[3,"Implementation"],[3,"ZwwDockManagerV2"],[3,"ZwwDockV2"],[3,"ZwwDockManagerV2"],[3,"ZwwDockV2"],[3,"Implementation"],[4,"Error"],[3,"Implementation"],[4,"Error"],[3,"ZwwLauncherMenuV1"],[3,"ZwwLauncherMenuV1"],[3,"Implementation"],[4,"Error"],[4,"Error"],[3,"Implementation"],[4,"Error"],[3,"Implementation"],[4,"Error"],[3,"ZwwNotificationAreaV1"],[3,"ZwwNotificationV1"],[3,"ZwwNotificationAreaV1"],[3,"ZwwNotificationV1"],[3,"Implementation"],[4,"Error"],[3,"Implementation"],[4,"Error"],[3,"Implementation"],[4,"Error"],[3,"Implementation"],[4,"Error"],[3,"ZwwWindowSwitcherV1"],[3,"ZwwWindowSwitcherWindowV1"],[3,"ZwwWindowSwitcherV1"],[3,"ZwwWindowSwitcherWindowV1"],[3,"Implementation"],[4,"Capability"],[4,"PresentMethod"],[4,"Error"],[3,"Implementation"],[3,"Implementation"],[4,"Capability"],[4,"PresentMethod"],[4,"Error"],[3,"ZwpFullscreenShellV1"],[3,"ZwpFullscreenShellModeFeedbackV1"],[3,"ZwpFullscreenShellV1"],[3,"ZwpFullscreenShellModeFeedbackV1"],[3,"Implementation"],[3,"Implementation"],[3,"ZwpIdleInhibitManagerV1"],[3,"ZwpIdleInhibitorV1"],[3,"ZwpIdleInhibitManagerV1"],[3,"ZwpIdleInhibitorV1"],[3,"Implementation"],[3,"Implementation"],[4,"Position"],[3,"Implementation"],[3,"Implementation"],[3,"Implementation"],[4,"Position"],[3,"ZwpInputMethodContextV1"],[3,"ZwpInputMethodV1"],[3,"ZwpInputPanelV1"],[3,"ZwpInputPanelSurfaceV1"],[3,"ZwpInputMethodContextV1"],[3,"ZwpInputMethodV1"],[3,"ZwpInputPanelV1"],[3,"ZwpInputPanelSurfaceV1"],[4,"Error"],[3,"Implementation"],[3,"Implementation"],[4,"Error"],[3,"Implementation"],[3,"ZwpKeyboardShortcutsInhibitManagerV1"],[3,"ZwpKeyboardShortcutsInhibitorV1"],[3,"ZwpKeyboardShortcutsInhibitManagerV1"],[3,"ZwpKeyboardShortcutsInhibitorV1"],[3,"Implementation"],[3,"Implementation"],[4,"Error"],[4,"Flags"],[3,"Implementation"],[3,"Implementation"],[4,"Error"],[4,"Flags"],[3,"ZwpLinuxDmabufV1"],[3,"ZwpLinuxBufferParamsV1"],[3,"ZwpLinuxDmabufV1"],[3,"ZwpLinuxBufferParamsV1"],[4,"Error"],[4,"Lifetime"],[3,"Implementation"],[3,"Implementation"],[3,"Implementation"],[4,"Error"],[4,"Lifetime"],[3,"Implementation"],[3,"Implementation"],[3,"ZwpPointerConstraintsV1"],[3,"ZwpLockedPointerV1"],[3,"ZwpConfinedPointerV1"],[3,"ZwpPointerConstraintsV1"],[3,"ZwpLockedPointerV1"],[3,"ZwpConfinedPointerV1"],[3,"Implementation"],[3,"Implementation"],[3,"Implementation"],[3,"Implementation"],[3,"Implementation"],[3,"ZwpPointerGesturesV1"],[3,"ZwpPointerGestureSwipeV1"],[3,"ZwpPointerGesturePinchV1"],[3,"ZwpPointerGesturesV1"],[3,"ZwpPointerGestureSwipeV1"],[3,"ZwpPointerGesturePinchV1"],[3,"Implementation"],[3,"Implementation"],[3,"Implementation"],[3,"ZwpRelativePointerManagerV1"],[3,"ZwpRelativePointerV1"],[3,"ZwpRelativePointerManagerV1"],[3,"ZwpRelativePointerV1"],[3,"Implementation"],[3,"Implementation"],[4,"Type"],[4,"Capability"],[4,"ButtonState"],[4,"Error"],[3,"Implementation"],[3,"Implementation"],[3,"Implementation"],[3,"Implementation"],[4,"Type"],[4,"Capability"],[4,"ButtonState"],[4,"Error"],[3,"Implementation"],[3,"ZwpTabletManagerV1"],[3,"ZwpTabletSeatV1"],[3,"ZwpTabletToolV1"],[3,"ZwpTabletV1"],[3,"ZwpTabletManagerV1"],[3,"ZwpTabletSeatV1"],[3,"ZwpTabletToolV1"],[3,"ZwpTabletV1"],[3,"Implementation"],[3,"Implementation"],[4,"Type"],[4,"Capability"],[4,"ButtonState"],[4,"Error"],[3,"Implementation"],[3,"Implementation"],[4,"Source"],[3,"Implementation"],[4,"Source"],[3,"Implementation"],[3,"Implementation"],[4,"ButtonState"],[3,"Implementation"],[3,"Implementation"],[3,"Implementation"],[4,"Type"],[4,"Capability"],[4,"ButtonState"],[4,"Error"],[3,"Implementation"],[3,"Implementation"],[4,"Source"],[3,"Implementation"],[4,"Source"],[3,"Implementation"],[3,"Implementation"],[4,"ButtonState"],[3,"ZwpTabletManagerV2"],[3,"ZwpTabletSeatV2"],[3,"ZwpTabletToolV2"],[3,"ZwpTabletV2"],[3,"ZwpTabletPadRingV2"],[3,"ZwpTabletPadStripV2"],[3,"ZwpTabletPadGroupV2"],[3,"ZwpTabletPadV2"],[3,"ZwpTabletManagerV2"],[3,"ZwpTabletSeatV2"],[3,"ZwpTabletToolV2"],[3,"ZwpTabletV2"],[3,"ZwpTabletPadRingV2"],[3,"ZwpTabletPadStripV2"],[3,"ZwpTabletPadGroupV2"],[3,"ZwpTabletPadV2"],[3,"Implementation"],[4,"ContentHint"],[4,"ContentPurpose"],[4,"PreeditStyle"],[4,"TextDirection"],[3,"Implementation"],[4,"ContentHint"],[4,"ContentPurpose"],[4,"PreeditStyle"],[4,"TextDirection"],[3,"Implementation"],[3,"ZwpTextInputV1"],[3,"ZwpTextInputManagerV1"],[3,"ZwpTextInputV1"],[3,"ZwpTextInputManagerV1"],[3,"Implementation"],[3,"Implementation"],[3,"Implementation"],[3,"Implementation"],[3,"Implementation"],[3,"Implementation"],[3,"ZxdgExporterV1"],[3,"ZxdgImporterV1"],[3,"ZxdgExportedV1"],[3,"ZxdgImportedV1"],[3,"ZxdgExporterV1"],[3,"ZxdgImporterV1"],[3,"ZxdgExportedV1"],[3,"ZxdgImportedV1"],[3,"Implementation"],[3,"Implementation"],[3,"Implementation"],[3,"Implementation"],[3,"Implementation"],[3,"Implementation"],[3,"ZxdgExporterV2"],[3,"ZxdgImporterV2"],[3,"ZxdgExportedV2"],[3,"ZxdgImportedV2"],[3,"ZxdgExporterV2"],[3,"ZxdgImporterV2"],[3,"ZxdgExportedV2"],[3,"ZxdgImportedV2"],[3,"Implementation"],[3,"Implementation"],[3,"Implementation"],[3,"ZxdgOutputManagerV1"],[3,"ZxdgOutputV1"],[3,"ZxdgOutputManagerV1"],[3,"ZxdgOutputV1"],[3,"Implementation"],[4,"Version"],[4,"Error"],[3,"Implementation"],[4,"ResizeEdge"],[4,"State"],[3,"Implementation"],[3,"Implementation"],[4,"Version"],[4,"Error"],[3,"Implementation"],[4,"ResizeEdge"],[4,"State"],[3,"Implementation"],[3,"XdgShell"],[3,"XdgSurface"],[3,"XdgPopup"],[3,"XdgShell"],[3,"XdgSurface"],[3,"XdgPopup"],[3,"Implementation"],[4,"Error"],[4,"Error"],[3,"Implementation"],[4,"Error"],[3,"Implementation"],[4,"ResizeEdge"],[4,"State"],[3,"Implementation"],[4,"Error"],[3,"Implementation"],[4,"Error"],[3,"Implementation"],[4,"Error"],[3,"Implementation"],[4,"Error"],[3,"Implementation"],[4,"ResizeEdge"],[4,"State"],[3,"Implementation"],[4,"Error"],[3,"ZxdgShellV6"],[3,"ZxdgPositionerV6"],[3,"Anchor"],[3,"Gravity"],[3,"ConstraintAdjustment"],[3,"ZxdgSurfaceV6"],[3,"ZxdgToplevelV6"],[3,"ZxdgPopupV6"],[3,"ZxdgShellV6"],[3,"ZxdgPositionerV6"],[3,"Anchor"],[3,"Gravity"],[3,"ConstraintAdjustment"],[3,"ZxdgSurfaceV6"],[3,"ZxdgToplevelV6"],[3,"ZxdgPopupV6"],[3,"Implementation"],[3,"Implementation"],[3,"ZwpXwaylandKeyboardGrabManagerV1"],[3,"ZwpXwaylandKeyboardGrabV1"],[3,"ZwpXwaylandKeyboardGrabManagerV1"],[3,"ZwpXwaylandKeyboardGrabV1"],[3,"Implementation"],[4,"Error"],[3,"Implementation"],[4,"Kind"],[3,"Implementation"],[4,"Error"],[4,"Kind"],[4,"Error"],[4,"Error"],[3,"Implementation"],[4,"Error"],[3,"Implementation"],[4,"Error"],[3,"WpPresentation"],[3,"WpPresentationFeedback"],[3,"WpPresentation"],[3,"WpPresentationFeedback"],[3,"WpViewporter"],[3,"WpViewport"],[3,"WpViewporter"],[3,"WpViewport"]]};
searchIndex["wayland_scanner"] = {"doc":"Wayland scanner crate","items":[[4,"Side","wayland_scanner","Side to generate",null,null],[13,"Client","","wayland client applications",0,null],[13,"Server","","wayland compositors",0,null],[5,"generate_interfaces","","Generate the interfaces for a protocol",null,{"inputs":[{"name":"p1"},{"name":"p2"}],"output":null}],[5,"generate_code","","Generate the code for a protocol",null,{"inputs":[{"name":"p1"},{"name":"p2"},{"name":"side"}],"output":null}],[5,"generate_interfaces_streams","","Generate the interfaces for a protocol from/to IO streams",null,{"inputs":[{"name":"p1"},{"name":"p2"}],"output":null}],[5,"generate_code_streams","","Generate the code for a protocol from/to IO streams",null,{"inputs":[{"name":"p1"},{"name":"p2"},{"name":"side"}],"output":null}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"side"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"side"}],"output":{"name":"bool"}}]],"paths":[[4,"Side"]]};
searchIndex["wayland_server"] = {"doc":"Server-side Wayland connector","items":[[3,"State","wayland_server","A token store",null,null],[3,"StateProxy","","A Proxy representing a `Store` with ongoing borrows",null,null],[3,"StateToken","","A token for accessing the store contents",null,null],[3,"Client","","A wayland client connected to your server",null,null],[3,"Display","","A wayland socket",null,null],[3,"EventLoop","","",null,null],[3,"EventLoopHandle","","Handle to an event loop",null,null],[3,"Global","","A handle to a global object",null,null],[4,"RegisterStatus","","Status of a registration attempt of a resource.",null,null],[13,"Registered","","The resource was properly registered to this event loop & handler.",0,null],[13,"Unmanaged","","The resource was not registered because it is not managed by `wayland-server`.",0,null],[13,"Dead","","The resource was not registered because it is already destroyed.",0,null],[4,"EventResult","","Possible outcome of the call of a event on a resource",null,null],[13,"Sent","","Message has been buffered and will be sent to client",1,null],[13,"Destroyed","","This resource is already destroyed, request has been ignored",1,null],[4,"Liveness","","Represents the state of liveness of a wayland object",null,null],[13,"Alive","","This object is alive and events can be sent to it",2,null],[13,"Dead","","This object is dead, sending it events will do nothing and return and error.",2,null],[13,"Unmanaged","","This object is not managed by `wayland-server`, you can send it events but this might crash the program if it was actually dead.",2,null],[5,"create_display","","Create a new display",null,null],[5,"resource_is_registered","","Checks if a resource is registered with a given implementation on an event loop",null,null],[0,"protocol_interfaces","","Interfaces for the core protocol",null,null],[7,"wl_display_requests","wayland_server::protocol_interfaces","",null,null],[7,"wl_display_events","","",null,null],[7,"wl_display_interface","","",null,null],[7,"wl_registry_requests","","",null,null],[7,"wl_registry_events","","",null,null],[7,"wl_registry_interface","","",null,null],[7,"wl_callback_events","","",null,null],[7,"wl_callback_interface","","",null,null],[7,"wl_compositor_requests","","",null,null],[7,"wl_compositor_interface","","",null,null],[7,"wl_shm_pool_requests","","",null,null],[7,"wl_shm_pool_interface","","",null,null],[7,"wl_shm_requests","","",null,null],[7,"wl_shm_events","","",null,null],[7,"wl_shm_interface","","",null,null],[7,"wl_buffer_requests","","",null,null],[7,"wl_buffer_events","","",null,null],[7,"wl_buffer_interface","","",null,null],[7,"wl_data_offer_requests","","",null,null],[7,"wl_data_offer_events","","",null,null],[7,"wl_data_offer_interface","","",null,null],[7,"wl_data_source_requests","","",null,null],[7,"wl_data_source_events","","",null,null],[7,"wl_data_source_interface","","",null,null],[7,"wl_data_device_requests","","",null,null],[7,"wl_data_device_events","","",null,null],[7,"wl_data_device_interface","","",null,null],[7,"wl_data_device_manager_requests","","",null,null],[7,"wl_data_device_manager_interface","","",null,null],[7,"wl_shell_requests","","",null,null],[7,"wl_shell_interface","","",null,null],[7,"wl_shell_surface_requests","","",null,null],[7,"wl_shell_surface_events","","",null,null],[7,"wl_shell_surface_interface","","",null,null],[7,"wl_surface_requests","","",null,null],[7,"wl_surface_events","","",null,null],[7,"wl_surface_interface","","",null,null],[7,"wl_seat_requests","","",null,null],[7,"wl_seat_events","","",null,null],[7,"wl_seat_interface","","",null,null],[7,"wl_pointer_requests","","",null,null],[7,"wl_pointer_events","","",null,null],[7,"wl_pointer_interface","","",null,null],[7,"wl_keyboard_requests","","",null,null],[7,"wl_keyboard_events","","",null,null],[7,"wl_keyboard_interface","","",null,null],[7,"wl_touch_requests","","",null,null],[7,"wl_touch_events","","",null,null],[7,"wl_touch_interface","","",null,null],[7,"wl_output_requests","","",null,null],[7,"wl_output_events","","",null,null],[7,"wl_output_interface","","",null,null],[7,"wl_region_requests","","",null,null],[7,"wl_region_interface","","",null,null],[7,"wl_subcompositor_requests","","",null,null],[7,"wl_subcompositor_interface","","",null,null],[7,"wl_subsurface_requests","","",null,null],[7,"wl_subsurface_interface","","",null,null],[0,"protocol","wayland_server","The wayland core protocol",null,null],[0,"wl_callback","wayland_server::protocol","callback object",null,null],[3,"WlCallback","wayland_server::protocol::wl_callback","",null,null],[0,"wl_compositor","wayland_server::protocol","the compositor singleton",null,null],[3,"WlCompositor","wayland_server::protocol::wl_compositor","",null,null],[3,"Implementation","","",null,null],[12,"create_surface","","create new surface",3,null],[12,"create_region","","create new region",3,null],[0,"wl_shm_pool","wayland_server::protocol","a shared memory pool",null,null],[3,"WlShmPool","wayland_server::protocol::wl_shm_pool","",null,null],[3,"Implementation","","",null,null],[12,"create_buffer","","create a buffer from the pool",4,null],[12,"destroy","","destroy the pool",4,null],[12,"resize","","change the size of the pool mapping",4,null],[0,"wl_shm","wayland_server::protocol","shared memory support",null,null],[3,"WlShm","wayland_server::protocol::wl_shm","",null,null],[3,"Implementation","","",null,null],[12,"create_pool","","create a shm pool",5,null],[4,"Error","","wl_shm error values",null,null],[13,"InvalidFormat","","buffer format is not known",6,null],[13,"InvalidStride","","invalid size or stride during pool or buffer creation",6,null],[13,"InvalidFd","","mmapping the file descriptor failed",6,null],[4,"Format","","pixel formats",null,null],[13,"Argb8888","","32-bit ARGB format, [31:0] A:R:G:B 8:8:8:8 little endian",7,null],[13,"Xrgb8888","","32-bit RGB format, [31:0] x:R:G:B 8:8:8:8 little endian",7,null],[13,"C8","","8-bit color index format, [7:0] C",7,null],[13,"Rgb332","","8-bit RGB format, [7:0] R:G:B 3:3:2",7,null],[13,"Bgr233","","8-bit BGR format, [7:0] B:G:R 2:3:3",7,null],[13,"Xrgb4444","","16-bit xRGB format, [15:0] x:R:G:B 4:4:4:4 little endian",7,null],[13,"Xbgr4444","","16-bit xBGR format, [15:0] x:B:G:R 4:4:4:4 little endian",7,null],[13,"Rgbx4444","","16-bit RGBx format, [15:0] R:G:B:x 4:4:4:4 little endian",7,null],[13,"Bgrx4444","","16-bit BGRx format, [15:0] B:G:R:x 4:4:4:4 little endian",7,null],[13,"Argb4444","","16-bit ARGB format, [15:0] A:R:G:B 4:4:4:4 little endian",7,null],[13,"Abgr4444","","16-bit ABGR format, [15:0] A:B:G:R 4:4:4:4 little endian",7,null],[13,"Rgba4444","","16-bit RBGA format, [15:0] R:G:B:A 4:4:4:4 little endian",7,null],[13,"Bgra4444","","16-bit BGRA format, [15:0] B:G:R:A 4:4:4:4 little endian",7,null],[13,"Xrgb1555","","16-bit xRGB format, [15:0] x:R:G:B 1:5:5:5 little endian",7,null],[13,"Xbgr1555","","16-bit xBGR 1555 format, [15:0] x:B:G:R 1:5:5:5 little endian",7,null],[13,"Rgbx5551","","16-bit RGBx 5551 format, [15:0] R:G:B:x 5:5:5:1 little endian",7,null],[13,"Bgrx5551","","16-bit BGRx 5551 format, [15:0] B:G:R:x 5:5:5:1 little endian",7,null],[13,"Argb1555","","16-bit ARGB 1555 format, [15:0] A:R:G:B 1:5:5:5 little endian",7,null],[13,"Abgr1555","","16-bit ABGR 1555 format, [15:0] A:B:G:R 1:5:5:5 little endian",7,null],[13,"Rgba5551","","16-bit RGBA 5551 format, [15:0] R:G:B:A 5:5:5:1 little endian",7,null],[13,"Bgra5551","","16-bit BGRA 5551 format, [15:0] B:G:R:A 5:5:5:1 little endian",7,null],[13,"Rgb565","","16-bit RGB 565 format, [15:0] R:G:B 5:6:5 little endian",7,null],[13,"Bgr565","","16-bit BGR 565 format, [15:0] B:G:R 5:6:5 little endian",7,null],[13,"Rgb888","","24-bit RGB format, [23:0] R:G:B little endian",7,null],[13,"Bgr888","","24-bit BGR format, [23:0] B:G:R little endian",7,null],[13,"Xbgr8888","","32-bit xBGR format, [31:0] x:B:G:R 8:8:8:8 little endian",7,null],[13,"Rgbx8888","","32-bit RGBx format, [31:0] R:G:B:x 8:8:8:8 little endian",7,null],[13,"Bgrx8888","","32-bit BGRx format, [31:0] B:G:R:x 8:8:8:8 little endian",7,null],[13,"Abgr8888","","32-bit ABGR format, [31:0] A:B:G:R 8:8:8:8 little endian",7,null],[13,"Rgba8888","","32-bit RGBA format, [31:0] R:G:B:A 8:8:8:8 little endian",7,null],[13,"Bgra8888","","32-bit BGRA format, [31:0] B:G:R:A 8:8:8:8 little endian",7,null],[13,"Xrgb2101010","","32-bit xRGB format, [31:0] x:R:G:B 2:10:10:10 little endian",7,null],[13,"Xbgr2101010","","32-bit xBGR format, [31:0] x:B:G:R 2:10:10:10 little endian",7,null],[13,"Rgbx1010102","","32-bit RGBx format, [31:0] R:G:B:x 10:10:10:2 little endian",7,null],[13,"Bgrx1010102","","32-bit BGRx format, [31:0] B:G:R:x 10:10:10:2 little endian",7,null],[13,"Argb2101010","","32-bit ARGB format, [31:0] A:R:G:B 2:10:10:10 little endian",7,null],[13,"Abgr2101010","","32-bit ABGR format, [31:0] A:B:G:R 2:10:10:10 little endian",7,null],[13,"Rgba1010102","","32-bit RGBA format, [31:0] R:G:B:A 10:10:10:2 little endian",7,null],[13,"Bgra1010102","","32-bit BGRA format, [31:0] B:G:R:A 10:10:10:2 little endian",7,null],[13,"Yuyv","","packed YCbCr format, [31:0] Cr0:Y1:Cb0:Y0 8:8:8:8 little endian",7,null],[13,"Yvyu","","packed YCbCr format, [31:0] Cb0:Y1:Cr0:Y0 8:8:8:8 little endian",7,null],[13,"Uyvy","","packed YCbCr format, [31:0] Y1:Cr0:Y0:Cb0 8:8:8:8 little endian",7,null],[13,"Vyuy","","packed YCbCr format, [31:0] Y1:Cb0:Y0:Cr0 8:8:8:8 little endian",7,null],[13,"Ayuv","","packed AYCbCr format, [31:0] A:Y:Cb:Cr 8:8:8:8 little endian",7,null],[13,"Nv12","","2 plane YCbCr Cr:Cb format, 2x2 subsampled Cr:Cb plane",7,null],[13,"Nv21","","2 plane YCbCr Cb:Cr format, 2x2 subsampled Cb:Cr plane",7,null],[13,"Nv16","","2 plane YCbCr Cr:Cb format, 2x1 subsampled Cr:Cb plane",7,null],[13,"Nv61","","2 plane YCbCr Cb:Cr format, 2x1 subsampled Cb:Cr plane",7,null],[13,"Yuv410","","3 plane YCbCr format, 4x4 subsampled Cb (1) and Cr (2) planes",7,null],[13,"Yvu410","","3 plane YCbCr format, 4x4 subsampled Cr (1) and Cb (2) planes",7,null],[13,"Yuv411","","3 plane YCbCr format, 4x1 subsampled Cb (1) and Cr (2) planes",7,null],[13,"Yvu411","","3 plane YCbCr format, 4x1 subsampled Cr (1) and Cb (2) planes",7,null],[13,"Yuv420","","3 plane YCbCr format, 2x2 subsampled Cb (1) and Cr (2) planes",7,null],[13,"Yvu420","","3 plane YCbCr format, 2x2 subsampled Cr (1) and Cb (2) planes",7,null],[13,"Yuv422","","3 plane YCbCr format, 2x1 subsampled Cb (1) and Cr (2) planes",7,null],[13,"Yvu422","","3 plane YCbCr format, 2x1 subsampled Cr (1) and Cb (2) planes",7,null],[13,"Yuv444","","3 plane YCbCr format, non-subsampled Cb (1) and Cr (2) planes",7,null],[13,"Yvu444","","3 plane YCbCr format, non-subsampled Cr (1) and Cb (2) planes",7,null],[0,"wl_buffer","wayland_server::protocol","content for a wl_surface",null,null],[3,"WlBuffer","wayland_server::protocol::wl_buffer","",null,null],[3,"Implementation","","",null,null],[12,"destroy","","destroy a buffer",8,null],[0,"wl_data_offer","wayland_server::protocol","offer to transfer data",null,null],[3,"WlDataOffer","wayland_server::protocol::wl_data_offer","",null,null],[3,"Implementation","","",null,null],[12,"accept","","accept one of the offered mime types",9,null],[12,"receive","","request that the data is transferred",9,null],[12,"destroy","","destroy data offer",9,null],[12,"finish","","the offer will no longer be used",9,null],[12,"set_actions","","set the available/preferred drag-and-drop actions",9,null],[4,"Error","","",null,null],[13,"InvalidFinish","","finish request was called untimely",10,null],[13,"InvalidActionMask","","action mask contains invalid values",10,null],[13,"InvalidAction","","action argument has an invalid value",10,null],[13,"InvalidOffer","","offer doesn't accept this request",10,null],[0,"wl_data_source","wayland_server::protocol","offer to transfer data",null,null],[3,"WlDataSource","wayland_server::protocol::wl_data_source","",null,null],[3,"Implementation","","",null,null],[12,"offer","","add an offered mime type",11,null],[12,"destroy","","destroy the data source",11,null],[12,"set_actions","","set the available drag-and-drop actions",11,null],[4,"Error","","",null,null],[13,"InvalidActionMask","","action mask contains invalid values",12,null],[13,"InvalidSource","","source doesn't accept this request",12,null],[0,"wl_data_device","wayland_server::protocol","data transfer device",null,null],[3,"WlDataDevice","wayland_server::protocol::wl_data_device","",null,null],[3,"Implementation","","",null,null],[12,"start_drag","","start drag-and-drop operation",13,null],[12,"set_selection","","copy data to the selection",13,null],[12,"release","","destroy data device",13,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",14,null],[0,"wl_data_device_manager","wayland_server::protocol","data transfer interface",null,null],[3,"WlDataDeviceManager","wayland_server::protocol::wl_data_device_manager","",null,null],[3,"DndAction","","drag and drop actions",null,null],[3,"Implementation","","",null,null],[12,"create_data_source","","create a new data source",15,null],[12,"get_data_device","","create a new data device",15,null],[0,"wl_shell","wayland_server::protocol","create desktop-style surfaces",null,null],[3,"WlShell","wayland_server::protocol::wl_shell","",null,null],[3,"Implementation","","",null,null],[12,"get_shell_surface","","create a shell surface from a surface",16,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",17,null],[0,"wl_shell_surface","wayland_server::protocol","desktop-style metadata interface",null,null],[3,"WlShellSurface","wayland_server::protocol::wl_shell_surface","",null,null],[3,"Resize","","edge values for resizing",null,null],[3,"Transient","","details of transient behaviour",null,null],[3,"Implementation","","",null,null],[12,"pong","","respond to a ping event",18,null],[12,"move_","","start an interactive move",18,null],[12,"resize","","start an interactive resize",18,null],[12,"set_toplevel","","make the surface a toplevel surface",18,null],[12,"set_transient","","make the surface a transient surface",18,null],[12,"set_fullscreen","","make the surface a fullscreen surface",18,null],[12,"set_popup","","make the surface a popup surface",18,null],[12,"set_maximized","","make the surface a maximized surface",18,null],[12,"set_title","","set surface title",18,null],[12,"set_class","","set surface class",18,null],[4,"FullscreenMethod","","different method to set the surface fullscreen",null,null],[13,"Default","","no preference, apply default policy",19,null],[13,"Scale","","scale, preserve the surface's aspect ratio and center on output",19,null],[13,"Driver","","switch output mode to the smallest mode that can fit the surface, add black borders to compensate size mismatch",19,null],[13,"Fill","","no upscaling, center on output and add black borders to compensate size mismatch",19,null],[0,"wl_surface","wayland_server::protocol","an onscreen surface",null,null],[3,"WlSurface","wayland_server::protocol::wl_surface","",null,null],[3,"Implementation","","",null,null],[12,"destroy","","delete surface",20,null],[12,"attach","","set the surface contents",20,null],[12,"damage","","mark part of the surface damaged",20,null],[12,"frame","","request a frame throttling hint",20,null],[12,"set_opaque_region","","set opaque region",20,null],[12,"set_input_region","","set input region",20,null],[12,"commit","","commit pending surface state",20,null],[12,"set_buffer_transform","","sets the buffer transformation",20,null],[12,"set_buffer_scale","","sets the buffer scaling factor",20,null],[12,"damage_buffer","","mark part of the surface damaged using buffer coordinates",20,null],[4,"Error","","wl_surface error values",null,null],[13,"InvalidScale","","buffer scale value is invalid",21,null],[13,"InvalidTransform","","buffer transform value is invalid",21,null],[0,"wl_seat","wayland_server::protocol","group of input devices",null,null],[3,"WlSeat","wayland_server::protocol::wl_seat","",null,null],[3,"Capability","","seat capability bitmask",null,null],[3,"Implementation","","",null,null],[12,"get_pointer","","return pointer object",22,null],[12,"get_keyboard","","return keyboard object",22,null],[12,"get_touch","","return touch object",22,null],[12,"release","","release the seat object",22,null],[0,"wl_pointer","wayland_server::protocol","pointer input device",null,null],[3,"WlPointer","wayland_server::protocol::wl_pointer","",null,null],[3,"Implementation","","",null,null],[12,"set_cursor","","set the pointer surface",23,null],[12,"release","","release the pointer object",23,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",24,null],[4,"ButtonState","","physical button state",null,null],[13,"Released","","the button is not pressed",25,null],[13,"Pressed","","the button is pressed",25,null],[4,"Axis","","axis types",null,null],[13,"VerticalScroll","","vertical axis",26,null],[13,"HorizontalScroll","","horizontal axis",26,null],[4,"AxisSource","","axis source types",null,null],[13,"Wheel","","a physical wheel",27,null],[13,"Finger","","finger on a touch surface",27,null],[13,"Continuous","","continuous coordinate space",27,null],[0,"wl_keyboard","wayland_server::protocol","keyboard input device",null,null],[3,"WlKeyboard","wayland_server::protocol::wl_keyboard","",null,null],[3,"Implementation","","",null,null],[12,"release","","release the keyboard object",28,null],[4,"KeymapFormat","","keyboard mapping format",null,null],[13,"NoKeymap","","no keymap; client must understand how to interpret the raw keycode",29,null],[13,"XkbV1","","libxkbcommon compatible; to determine the xkb keycode, clients must add 8 to the key event keycode",29,null],[4,"KeyState","","physical key state",null,null],[13,"Released","","key is not pressed",30,null],[13,"Pressed","","key is pressed",30,null],[0,"wl_touch","wayland_server::protocol","touchscreen input device",null,null],[3,"WlTouch","wayland_server::protocol::wl_touch","",null,null],[3,"Implementation","","",null,null],[12,"release","","release the touch object",31,null],[0,"wl_output","wayland_server::protocol","compositor output region",null,null],[3,"WlOutput","wayland_server::protocol::wl_output","",null,null],[3,"Mode","","mode information",null,null],[3,"Implementation","","",null,null],[12,"release","","release the output object",32,null],[4,"Subpixel","","subpixel geometry information",null,null],[13,"Unknown","","unknown geometry",33,null],[13,"None","","no geometry",33,null],[13,"HorizontalRgb","","horizontal RGB",33,null],[13,"HorizontalBgr","","horizontal BGR",33,null],[13,"VerticalRgb","","vertical RGB",33,null],[13,"VerticalBgr","","vertical BGR",33,null],[4,"Transform","","transform from framebuffer to output",null,null],[13,"Normal","","no transform",34,null],[13,"_90","","90 degrees counter-clockwise",34,null],[13,"_180","","180 degrees counter-clockwise",34,null],[13,"_270","","270 degrees counter-clockwise",34,null],[13,"Flipped","","180 degree flip around a vertical axis",34,null],[13,"Flipped90","","flip and rotate 90 degrees counter-clockwise",34,null],[13,"Flipped180","","flip and rotate 180 degrees counter-clockwise",34,null],[13,"Flipped270","","flip and rotate 270 degrees counter-clockwise",34,null],[0,"wl_region","wayland_server::protocol","region interface",null,null],[3,"WlRegion","wayland_server::protocol::wl_region","",null,null],[3,"Implementation","","",null,null],[12,"destroy","","destroy region",35,null],[12,"add","","add rectangle to region",35,null],[12,"subtract","","subtract rectangle from region",35,null],[0,"wl_subcompositor","wayland_server::protocol","sub-surface compositing",null,null],[3,"WlSubcompositor","wayland_server::protocol::wl_subcompositor","",null,null],[3,"Implementation","","",null,null],[12,"destroy","","unbind from the subcompositor interface",36,null],[12,"get_subsurface","","give a surface the role sub-surface",36,null],[4,"Error","","",null,null],[13,"BadSurface","","the to-be sub-surface is invalid",37,null],[0,"wl_subsurface","wayland_server::protocol","sub-surface interface to a wl_surface",null,null],[3,"WlSubsurface","wayland_server::protocol::wl_subsurface","",null,null],[3,"Implementation","","",null,null],[12,"destroy","","remove sub-surface interface",38,null],[12,"set_position","","reposition the sub-surface",38,null],[12,"place_above","","restack the sub-surface",38,null],[12,"place_below","","restack the sub-surface",38,null],[12,"set_sync","","set sub-surface to synchronized mode",38,null],[12,"set_desync","","set sub-surface to desynchronized mode",38,null],[4,"Error","","",null,null],[13,"BadSurface","","wl_surface is not a sibling or the parent",39,null],[11,"ptr","wayland_server","Get a pointer to the C wl_client object",40,null],[11,"post_no_memory","","Post a \"no memory\" message to the client",40,{"inputs":[{"name":"self"}],"output":null}],[11,"from_ptr","","Create a client object from a pointer",40,null],[11,"add_socket","","Add a listening socket to this display",41,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"ioresult"}}],[11,"add_socket_auto","","Add an automatically named listening socket to this display",41,{"inputs":[{"name":"self"}],"output":{"name":"ioresult"}}],[11,"add_socket_from","","Add existing listening socket to this display",41,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"ioresult"}}],[11,"add_socket_fd","","Add existing listening socket to this display from a raw file descriptor",41,{"inputs":[{"name":"self"},{"name":"rawfd"}],"output":{"name":"ioresult"}}],[11,"flush_clients","","Flush events to the clients",41,{"inputs":[{"name":"self"}],"output":null}],[11,"drop","","",41,{"inputs":[{"name":"self"}],"output":null}],[11,"destroy","","Destroy the associated global object.",42,{"inputs":[{"name":"self"}],"output":null}],[11,"register","","Register a resource to this event loop.",43,null],[11,"stop_loop","","Stop looping",43,{"inputs":[{"name":"self"}],"output":null}],[11,"state","","Get an handle to the internal state",43,{"inputs":[{"name":"self"}],"output":{"name":"state"}}],[11,"add_fd_event_source","","Add a File Descriptor event source to this event loop",43,{"inputs":[{"name":"self"},{"name":"rawfd"},{"name":"fdeventsourceimpl"},{"name":"id"},{"name":"fdinterest"}],"output":{"name":"ioresult"}}],[11,"add_timer_event_source","","Add a timer event source to this event loop",43,{"inputs":[{"name":"self"},{"name":"timereventsourceimpl"},{"name":"id"}],"output":{"name":"ioresult"}}],[11,"add_signal_event_source","","Add a signal event source to this event loop",43,{"inputs":[{"name":"self"},{"name":"signaleventsourceimpl"},{"name":"id"},{"name":"signal"}],"output":{"name":"ioresult"}}],[11,"add_idle_event_source","","Add an idle event source to this event loop",43,{"inputs":[{"name":"self"},{"name":"idleeventsourceimpl"},{"name":"id"}],"output":{"name":"idleeventsource"}}],[11,"register_global","","Register a global object to the display.",43,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"globalcallback"},{"name":"id"}],"output":{"name":"global"}}],[11,"new","","Create a new EventLoop",44,{"inputs":[],"output":{"name":"eventloop"}}],[11,"dispatch","","Dispatch pending requests to their respective handlers",44,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"ioresult"}}],[11,"run","","Runs the event loop",44,{"inputs":[{"name":"self"}],"output":{"name":"ioresult"}}],[11,"deref","","",44,{"inputs":[{"name":"self"}],"output":{"name":"eventloophandle"}}],[11,"deref_mut","","",44,{"inputs":[{"name":"self"}],"output":{"name":"eventloophandle"}}],[11,"drop","","",44,{"inputs":[{"name":"self"}],"output":null}],[0,"sources","","Secondary event sources",null,null],[3,"FdEventSource","wayland_server::sources","fd_event_source",null,null],[3,"FdEventSourceImpl","","Implementation for FD events",null,null],[12,"ready","","The FD is ready to be read/written",45,null],[12,"error","","An error occured with this FD",45,null],[3,"FdInterest","","Flags to register interest on a file descriptor",null,null],[3,"IdleEventSource","","Idle event source",null,null],[3,"SignalEventSource","","signal_event_source",null,null],[3,"TimerEventSource","","timer_event_source",null,null],[6,"IdleEventSourceImpl","","The idle-throttled callback",null,null],[6,"SignalEventSourceImpl","","A signal has been received",null,null],[6,"TimerEventSourceImpl","","Called when the countdown reaches 0",null,null],[11,"ptr","wayland_server::protocol::wl_callback","",46,null],[11,"from_ptr_new","","",46,null],[11,"from_ptr_initialized","","",46,null],[11,"interface_ptr","","",46,null],[11,"interface_name","","",46,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",46,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",46,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",46,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",46,{"inputs":[{"name":"self"},{"name":"wlcallback"}],"output":{"name":"bool"}}],[11,"set_user_data","","",46,null],[11,"get_user_data","","",46,null],[11,"clone_unchecked","","",46,{"inputs":[{"name":"self"}],"output":{"name":"wlcallback"}}],[11,"done","","done event",46,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"ptr","wayland_server::protocol::wl_compositor","",47,null],[11,"from_ptr_new","","",47,null],[11,"from_ptr_initialized","","",47,null],[11,"interface_ptr","","",47,null],[11,"interface_name","","",47,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",47,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",47,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",47,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",47,{"inputs":[{"name":"self"},{"name":"wlcompositor"}],"output":{"name":"bool"}}],[11,"set_user_data","","",47,null],[11,"get_user_data","","",47,null],[11,"clone_unchecked","","",47,{"inputs":[{"name":"self"}],"output":{"name":"wlcompositor"}}],[11,"__dispatch_msg","","",47,null],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"ptr","wayland_server::protocol::wl_shm_pool","",48,null],[11,"from_ptr_new","","",48,null],[11,"from_ptr_initialized","","",48,null],[11,"interface_ptr","","",48,null],[11,"interface_name","","",48,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",48,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",48,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",48,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",48,{"inputs":[{"name":"self"},{"name":"wlshmpool"}],"output":{"name":"bool"}}],[11,"set_user_data","","",48,null],[11,"get_user_data","","",48,null],[11,"clone_unchecked","","",48,{"inputs":[{"name":"self"}],"output":{"name":"wlshmpool"}}],[11,"__dispatch_msg","","",48,null],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"ptr","wayland_server::protocol::wl_shm","",49,null],[11,"from_ptr_new","","",49,null],[11,"from_ptr_initialized","","",49,null],[11,"interface_ptr","","",49,null],[11,"interface_name","","",49,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",49,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",49,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",49,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",49,{"inputs":[{"name":"self"},{"name":"wlshm"}],"output":{"name":"bool"}}],[11,"set_user_data","","",49,null],[11,"get_user_data","","",49,null],[11,"clone_unchecked","","",49,{"inputs":[{"name":"self"}],"output":{"name":"wlshm"}}],[11,"__dispatch_msg","","",49,null],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",6,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",6,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",6,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"format"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",7,{"inputs":[{"name":"self"},{"name":"format"}],"output":{"name":"bool"}}],[11,"from_raw","","",7,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",7,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"format","","pixel format description",49,{"inputs":[{"name":"self"},{"name":"format"}],"output":{"name":"eventresult"}}],[11,"ptr","wayland_server::protocol::wl_buffer","",50,null],[11,"from_ptr_new","","",50,null],[11,"from_ptr_initialized","","",50,null],[11,"interface_ptr","","",50,null],[11,"interface_name","","",50,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",50,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",50,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",50,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",50,{"inputs":[{"name":"self"},{"name":"wlbuffer"}],"output":{"name":"bool"}}],[11,"set_user_data","","",50,null],[11,"get_user_data","","",50,null],[11,"clone_unchecked","","",50,{"inputs":[{"name":"self"}],"output":{"name":"wlbuffer"}}],[11,"__dispatch_msg","","",50,null],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",8,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"release","","compositor releases buffer",50,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"ptr","wayland_server::protocol::wl_data_offer","",51,null],[11,"from_ptr_new","","",51,null],[11,"from_ptr_initialized","","",51,null],[11,"interface_ptr","","",51,null],[11,"interface_name","","",51,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",51,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",51,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",51,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",51,{"inputs":[{"name":"self"},{"name":"wldataoffer"}],"output":{"name":"bool"}}],[11,"set_user_data","","",51,null],[11,"get_user_data","","",51,null],[11,"clone_unchecked","","",51,{"inputs":[{"name":"self"}],"output":{"name":"wldataoffer"}}],[11,"__dispatch_msg","","",51,null],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",10,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",10,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",10,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",9,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"offer","","advertise offered mime type",51,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"eventresult"}}],[11,"source_actions","","notify the source-side available actions",51,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"action","","notify the selected action",51,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"ptr","wayland_server::protocol::wl_data_source","",52,null],[11,"from_ptr_new","","",52,null],[11,"from_ptr_initialized","","",52,null],[11,"interface_ptr","","",52,null],[11,"interface_name","","",52,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",52,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",52,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",52,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",52,{"inputs":[{"name":"self"},{"name":"wldatasource"}],"output":{"name":"bool"}}],[11,"set_user_data","","",52,null],[11,"get_user_data","","",52,null],[11,"clone_unchecked","","",52,{"inputs":[{"name":"self"}],"output":{"name":"wldatasource"}}],[11,"__dispatch_msg","","",52,null],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",12,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",12,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",12,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",11,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"target","","a target accepts an offered mime type",52,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"eventresult"}}],[11,"send","","send the data",52,{"inputs":[{"name":"self"},{"name":"string"},{"name":"rawfd"}],"output":{"name":"eventresult"}}],[11,"cancelled","","selection was cancelled",52,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"dnd_drop_performed","","the drag-and-drop operation physically finished",52,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"dnd_finished","","the drag-and-drop operation concluded",52,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"action","","notify the selected action",52,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"ptr","wayland_server::protocol::wl_data_device","",53,null],[11,"from_ptr_new","","",53,null],[11,"from_ptr_initialized","","",53,null],[11,"interface_ptr","","",53,null],[11,"interface_name","","",53,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",53,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",53,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",53,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",53,{"inputs":[{"name":"self"},{"name":"wldatadevice"}],"output":{"name":"bool"}}],[11,"set_user_data","","",53,null],[11,"get_user_data","","",53,null],[11,"clone_unchecked","","",53,{"inputs":[{"name":"self"}],"output":{"name":"wldatadevice"}}],[11,"__dispatch_msg","","",53,null],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",14,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",14,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",14,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",13,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"data_offer","","introduce a new wl_data_offer",53,{"inputs":[{"name":"self"},{"name":"wldataoffer"}],"output":{"name":"eventresult"}}],[11,"enter","","initiate drag-and-drop session",53,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"wlsurface"},{"name":"f64"},{"name":"f64"},{"name":"option"}],"output":{"name":"eventresult"}}],[11,"leave","","end drag-and-drop session",53,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"motion","","drag-and-drop session motion",53,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"f64"},{"name":"f64"}],"output":{"name":"eventresult"}}],[11,"drop","","end drag-and-drop session successfully",53,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"selection","","advertise new selection",53,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"eventresult"}}],[11,"ptr","wayland_server::protocol::wl_data_device_manager","",54,null],[11,"from_ptr_new","","",54,null],[11,"from_ptr_initialized","","",54,null],[11,"interface_ptr","","",54,null],[11,"interface_name","","",54,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",54,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",54,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",54,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",54,{"inputs":[{"name":"self"},{"name":"wldatadevicemanager"}],"output":{"name":"bool"}}],[11,"set_user_data","","",54,null],[11,"get_user_data","","",54,null],[11,"clone_unchecked","","",54,{"inputs":[{"name":"self"}],"output":{"name":"wldatadevicemanager"}}],[11,"__dispatch_msg","","",54,null],[11,"eq","","",55,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"bool"}}],[11,"ne","","",55,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"bool"}}],[11,"clone","","",55,{"inputs":[{"name":"self"}],"output":{"name":"dndaction"}}],[11,"partial_cmp","","",55,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"option"}}],[11,"lt","","",55,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"bool"}}],[11,"le","","",55,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"bool"}}],[11,"gt","","",55,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"bool"}}],[11,"ge","","",55,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"bool"}}],[11,"cmp","","",55,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"ordering"}}],[11,"hash","","",55,null],[11,"fmt","","",55,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",55,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",55,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",55,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",55,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[18,"None","","no action",55,null],[18,"Copy","","copy action",55,null],[18,"Move","","move action",55,null],[18,"Ask","","ask action",55,null],[11,"empty","","Returns an empty set of flags.",55,{"inputs":[],"output":{"name":"dndaction"}}],[11,"all","","Returns the set containing all flags.",55,{"inputs":[],"output":{"name":"dndaction"}}],[11,"bits","","Returns the raw value of the flags currently stored.",55,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",55,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",55,{"inputs":[{"name":"u32"}],"output":{"name":"dndaction"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",55,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",55,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",55,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",55,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",55,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",55,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",55,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",55,{"inputs":[{"name":"self"},{"name":"dndaction"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",55,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"dndaction"}}],[11,"bitor_assign","","Adds the set of flags.",55,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",55,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"dndaction"}}],[11,"bitxor_assign","","Toggles the set of flags.",55,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",55,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"dndaction"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",55,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",55,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"dndaction"}}],[11,"sub_assign","","Disables all flags enabled in the set.",55,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",55,{"inputs":[{"name":"self"}],"output":{"name":"dndaction"}}],[11,"extend","","",55,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",55,{"inputs":[{"name":"t"}],"output":{"name":"dndaction"}}],[11,"from_raw","","",55,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",55,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",15,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"ptr","wayland_server::protocol::wl_shell","",56,null],[11,"from_ptr_new","","",56,null],[11,"from_ptr_initialized","","",56,null],[11,"interface_ptr","","",56,null],[11,"interface_name","","",56,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",56,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",56,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",56,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",56,{"inputs":[{"name":"self"},{"name":"wlshell"}],"output":{"name":"bool"}}],[11,"set_user_data","","",56,null],[11,"get_user_data","","",56,null],[11,"clone_unchecked","","",56,{"inputs":[{"name":"self"}],"output":{"name":"wlshell"}}],[11,"__dispatch_msg","","",56,null],[11,"clone","","",17,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",17,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",17,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",17,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",16,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"ptr","wayland_server::protocol::wl_shell_surface","",57,null],[11,"from_ptr_new","","",57,null],[11,"from_ptr_initialized","","",57,null],[11,"interface_ptr","","",57,null],[11,"interface_name","","",57,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",57,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",57,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",57,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",57,{"inputs":[{"name":"self"},{"name":"wlshellsurface"}],"output":{"name":"bool"}}],[11,"set_user_data","","",57,null],[11,"get_user_data","","",57,null],[11,"clone_unchecked","","",57,{"inputs":[{"name":"self"}],"output":{"name":"wlshellsurface"}}],[11,"__dispatch_msg","","",57,null],[11,"eq","","",58,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"bool"}}],[11,"ne","","",58,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"bool"}}],[11,"clone","","",58,{"inputs":[{"name":"self"}],"output":{"name":"resize"}}],[11,"partial_cmp","","",58,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"option"}}],[11,"lt","","",58,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"bool"}}],[11,"le","","",58,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"bool"}}],[11,"gt","","",58,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"bool"}}],[11,"ge","","",58,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"bool"}}],[11,"cmp","","",58,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"ordering"}}],[11,"hash","","",58,null],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[18,"None","","no edge",58,null],[18,"Top","","top edge",58,null],[18,"Bottom","","bottom edge",58,null],[18,"Left","","left edge",58,null],[18,"TopLeft","","top and left edges",58,null],[18,"BottomLeft","","bottom and left edges",58,null],[18,"Right","","right edge",58,null],[18,"TopRight","","top and right edges",58,null],[18,"BottomRight","","bottom and right edges",58,null],[11,"empty","","Returns an empty set of flags.",58,{"inputs":[],"output":{"name":"resize"}}],[11,"all","","Returns the set containing all flags.",58,{"inputs":[],"output":{"name":"resize"}}],[11,"bits","","Returns the raw value of the flags currently stored.",58,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",58,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",58,{"inputs":[{"name":"u32"}],"output":{"name":"resize"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",58,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",58,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",58,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",58,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",58,{"inputs":[{"name":"self"},{"name":"resize"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",58,{"inputs":[{"name":"self"},{"name":"resize"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",58,{"inputs":[{"name":"self"},{"name":"resize"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",58,{"inputs":[{"name":"self"},{"name":"resize"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",58,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"resize"}}],[11,"bitor_assign","","Adds the set of flags.",58,{"inputs":[{"name":"self"},{"name":"resize"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",58,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"resize"}}],[11,"bitxor_assign","","Toggles the set of flags.",58,{"inputs":[{"name":"self"},{"name":"resize"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",58,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"resize"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",58,{"inputs":[{"name":"self"},{"name":"resize"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",58,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"resize"}}],[11,"sub_assign","","Disables all flags enabled in the set.",58,{"inputs":[{"name":"self"},{"name":"resize"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",58,{"inputs":[{"name":"self"}],"output":{"name":"resize"}}],[11,"extend","","",58,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",58,{"inputs":[{"name":"t"}],"output":{"name":"resize"}}],[11,"from_raw","","",58,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",58,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"eq","","",59,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"bool"}}],[11,"ne","","",59,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"bool"}}],[11,"clone","","",59,{"inputs":[{"name":"self"}],"output":{"name":"transient"}}],[11,"partial_cmp","","",59,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"option"}}],[11,"lt","","",59,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"bool"}}],[11,"le","","",59,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"bool"}}],[11,"gt","","",59,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"bool"}}],[11,"ge","","",59,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"bool"}}],[11,"cmp","","",59,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"ordering"}}],[11,"hash","","",59,null],[11,"fmt","","",59,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",59,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",59,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",59,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",59,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[18,"Inactive","","do not set keyboard focus",59,null],[11,"empty","","Returns an empty set of flags.",59,{"inputs":[],"output":{"name":"transient"}}],[11,"all","","Returns the set containing all flags.",59,{"inputs":[],"output":{"name":"transient"}}],[11,"bits","","Returns the raw value of the flags currently stored.",59,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",59,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",59,{"inputs":[{"name":"u32"}],"output":{"name":"transient"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",59,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",59,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",59,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",59,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",59,{"inputs":[{"name":"self"},{"name":"transient"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",59,{"inputs":[{"name":"self"},{"name":"transient"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",59,{"inputs":[{"name":"self"},{"name":"transient"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",59,{"inputs":[{"name":"self"},{"name":"transient"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",59,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"transient"}}],[11,"bitor_assign","","Adds the set of flags.",59,{"inputs":[{"name":"self"},{"name":"transient"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",59,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"transient"}}],[11,"bitxor_assign","","Toggles the set of flags.",59,{"inputs":[{"name":"self"},{"name":"transient"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",59,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"transient"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",59,{"inputs":[{"name":"self"},{"name":"transient"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",59,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"transient"}}],[11,"sub_assign","","Disables all flags enabled in the set.",59,{"inputs":[{"name":"self"},{"name":"transient"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",59,{"inputs":[{"name":"self"}],"output":{"name":"transient"}}],[11,"extend","","",59,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",59,{"inputs":[{"name":"t"}],"output":{"name":"transient"}}],[11,"from_raw","","",59,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",59,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"fullscreenmethod"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",19,{"inputs":[{"name":"self"},{"name":"fullscreenmethod"}],"output":{"name":"bool"}}],[11,"from_raw","","",19,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",19,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",18,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"ping","","ping client",57,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"configure","","suggest resize",57,{"inputs":[{"name":"self"},{"name":"resize"},{"name":"i32"},{"name":"i32"}],"output":{"name":"eventresult"}}],[11,"popup_done","","popup interaction is done",57,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"ptr","wayland_server::protocol::wl_surface","",60,null],[11,"from_ptr_new","","",60,null],[11,"from_ptr_initialized","","",60,null],[11,"interface_ptr","","",60,null],[11,"interface_name","","",60,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",60,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",60,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",60,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",60,{"inputs":[{"name":"self"},{"name":"wlsurface"}],"output":{"name":"bool"}}],[11,"set_user_data","","",60,null],[11,"get_user_data","","",60,null],[11,"clone_unchecked","","",60,{"inputs":[{"name":"self"}],"output":{"name":"wlsurface"}}],[11,"__dispatch_msg","","",60,null],[11,"clone","","",21,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",21,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",21,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",21,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",20,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"enter","","surface enters an output",60,{"inputs":[{"name":"self"},{"name":"wloutput"}],"output":{"name":"eventresult"}}],[11,"leave","","surface leaves an output",60,{"inputs":[{"name":"self"},{"name":"wloutput"}],"output":{"name":"eventresult"}}],[11,"ptr","wayland_server::protocol::wl_seat","",61,null],[11,"from_ptr_new","","",61,null],[11,"from_ptr_initialized","","",61,null],[11,"interface_ptr","","",61,null],[11,"interface_name","","",61,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",61,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",61,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",61,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",61,{"inputs":[{"name":"self"},{"name":"wlseat"}],"output":{"name":"bool"}}],[11,"set_user_data","","",61,null],[11,"get_user_data","","",61,null],[11,"clone_unchecked","","",61,{"inputs":[{"name":"self"}],"output":{"name":"wlseat"}}],[11,"__dispatch_msg","","",61,null],[11,"eq","","",62,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"ne","","",62,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"clone","","",62,{"inputs":[{"name":"self"}],"output":{"name":"capability"}}],[11,"partial_cmp","","",62,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"option"}}],[11,"lt","","",62,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"le","","",62,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"gt","","",62,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"ge","","",62,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"cmp","","",62,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"ordering"}}],[11,"hash","","",62,null],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[18,"Pointer","","the seat has pointer devices",62,null],[18,"Keyboard","","the seat has one or more keyboards",62,null],[18,"Touch","","the seat has touch devices",62,null],[11,"empty","","Returns an empty set of flags.",62,{"inputs":[],"output":{"name":"capability"}}],[11,"all","","Returns the set containing all flags.",62,{"inputs":[],"output":{"name":"capability"}}],[11,"bits","","Returns the raw value of the flags currently stored.",62,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",62,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",62,{"inputs":[{"name":"u32"}],"output":{"name":"capability"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",62,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",62,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",62,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",62,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",62,{"inputs":[{"name":"self"},{"name":"capability"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",62,{"inputs":[{"name":"self"},{"name":"capability"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",62,{"inputs":[{"name":"self"},{"name":"capability"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",62,{"inputs":[{"name":"self"},{"name":"capability"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",62,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"capability"}}],[11,"bitor_assign","","Adds the set of flags.",62,{"inputs":[{"name":"self"},{"name":"capability"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",62,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"capability"}}],[11,"bitxor_assign","","Toggles the set of flags.",62,{"inputs":[{"name":"self"},{"name":"capability"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",62,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"capability"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",62,{"inputs":[{"name":"self"},{"name":"capability"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",62,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"capability"}}],[11,"sub_assign","","Disables all flags enabled in the set.",62,{"inputs":[{"name":"self"},{"name":"capability"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",62,{"inputs":[{"name":"self"}],"output":{"name":"capability"}}],[11,"extend","","",62,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",62,{"inputs":[{"name":"t"}],"output":{"name":"capability"}}],[11,"from_raw","","",62,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",62,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",22,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",22,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"capabilities","","seat capabilities changed",61,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"eventresult"}}],[11,"name","","unique identifier for this seat",61,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"eventresult"}}],[11,"ptr","wayland_server::protocol::wl_pointer","",63,null],[11,"from_ptr_new","","",63,null],[11,"from_ptr_initialized","","",63,null],[11,"interface_ptr","","",63,null],[11,"interface_name","","",63,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",63,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",63,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",63,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",63,{"inputs":[{"name":"self"},{"name":"wlpointer"}],"output":{"name":"bool"}}],[11,"set_user_data","","",63,null],[11,"get_user_data","","",63,null],[11,"clone_unchecked","","",63,{"inputs":[{"name":"self"}],"output":{"name":"wlpointer"}}],[11,"__dispatch_msg","","",63,null],[11,"clone","","",24,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",24,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",24,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",24,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",25,{"inputs":[{"name":"self"}],"output":{"name":"buttonstate"}}],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",25,{"inputs":[{"name":"self"},{"name":"buttonstate"}],"output":{"name":"bool"}}],[11,"from_raw","","",25,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",25,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",26,{"inputs":[{"name":"self"}],"output":{"name":"axis"}}],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",26,{"inputs":[{"name":"self"},{"name":"axis"}],"output":{"name":"bool"}}],[11,"from_raw","","",26,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",26,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",27,{"inputs":[{"name":"self"}],"output":{"name":"axissource"}}],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",27,{"inputs":[{"name":"self"},{"name":"axissource"}],"output":{"name":"bool"}}],[11,"from_raw","","",27,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",27,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",23,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",23,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"enter","","enter event",63,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"wlsurface"},{"name":"f64"},{"name":"f64"}],"output":{"name":"eventresult"}}],[11,"leave","","leave event",63,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"wlsurface"}],"output":{"name":"eventresult"}}],[11,"motion","","pointer motion event",63,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"f64"},{"name":"f64"}],"output":{"name":"eventresult"}}],[11,"button","","pointer button event",63,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"buttonstate"}],"output":{"name":"eventresult"}}],[11,"axis","","axis event",63,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"axis"},{"name":"f64"}],"output":{"name":"eventresult"}}],[11,"frame","","end of a pointer event sequence",63,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"axis_source","","axis source event",63,{"inputs":[{"name":"self"},{"name":"axissource"}],"output":{"name":"eventresult"}}],[11,"axis_stop","","axis stop event",63,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"axis"}],"output":{"name":"eventresult"}}],[11,"axis_discrete","","axis click event",63,{"inputs":[{"name":"self"},{"name":"axis"},{"name":"i32"}],"output":{"name":"eventresult"}}],[11,"ptr","wayland_server::protocol::wl_keyboard","",64,null],[11,"from_ptr_new","","",64,null],[11,"from_ptr_initialized","","",64,null],[11,"interface_ptr","","",64,null],[11,"interface_name","","",64,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",64,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",64,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",64,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",64,{"inputs":[{"name":"self"},{"name":"wlkeyboard"}],"output":{"name":"bool"}}],[11,"set_user_data","","",64,null],[11,"get_user_data","","",64,null],[11,"clone_unchecked","","",64,{"inputs":[{"name":"self"}],"output":{"name":"wlkeyboard"}}],[11,"__dispatch_msg","","",64,null],[11,"clone","","",29,{"inputs":[{"name":"self"}],"output":{"name":"keymapformat"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",29,{"inputs":[{"name":"self"},{"name":"keymapformat"}],"output":{"name":"bool"}}],[11,"from_raw","","",29,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",29,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",30,{"inputs":[{"name":"self"}],"output":{"name":"keystate"}}],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",30,{"inputs":[{"name":"self"},{"name":"keystate"}],"output":{"name":"bool"}}],[11,"from_raw","","",30,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",30,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",28,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",28,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"keymap","","keyboard mapping",64,{"inputs":[{"name":"self"},{"name":"keymapformat"},{"name":"rawfd"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"enter","","enter event",64,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"wlsurface"},{"name":"vec"}],"output":{"name":"eventresult"}}],[11,"leave","","leave event",64,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"wlsurface"}],"output":{"name":"eventresult"}}],[11,"key","","key event",64,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"keystate"}],"output":{"name":"eventresult"}}],[11,"modifiers","","modifier and group state",64,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"repeat_info","","repeat rate and delay",64,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"eventresult"}}],[11,"ptr","wayland_server::protocol::wl_touch","",65,null],[11,"from_ptr_new","","",65,null],[11,"from_ptr_initialized","","",65,null],[11,"interface_ptr","","",65,null],[11,"interface_name","","",65,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",65,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",65,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",65,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",65,{"inputs":[{"name":"self"},{"name":"wltouch"}],"output":{"name":"bool"}}],[11,"set_user_data","","",65,null],[11,"get_user_data","","",65,null],[11,"clone_unchecked","","",65,{"inputs":[{"name":"self"}],"output":{"name":"wltouch"}}],[11,"__dispatch_msg","","",65,null],[11,"clone","","",31,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",31,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"down","","touch down event and beginning of a touch sequence",65,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"wlsurface"},{"name":"i32"},{"name":"f64"},{"name":"f64"}],"output":{"name":"eventresult"}}],[11,"up","","end of a touch event sequence",65,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"i32"}],"output":{"name":"eventresult"}}],[11,"motion","","update of touch point coordinates",65,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"i32"},{"name":"f64"},{"name":"f64"}],"output":{"name":"eventresult"}}],[11,"frame","","end of touch frame event",65,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"cancel","","touch session cancelled",65,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"ptr","wayland_server::protocol::wl_output","",66,null],[11,"from_ptr_new","","",66,null],[11,"from_ptr_initialized","","",66,null],[11,"interface_ptr","","",66,null],[11,"interface_name","","",66,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",66,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",66,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",66,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",66,{"inputs":[{"name":"self"},{"name":"wloutput"}],"output":{"name":"bool"}}],[11,"set_user_data","","",66,null],[11,"get_user_data","","",66,null],[11,"clone_unchecked","","",66,{"inputs":[{"name":"self"}],"output":{"name":"wloutput"}}],[11,"__dispatch_msg","","",66,null],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"subpixel"}}],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",33,{"inputs":[{"name":"self"},{"name":"subpixel"}],"output":{"name":"bool"}}],[11,"from_raw","","",33,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",33,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",34,{"inputs":[{"name":"self"}],"output":{"name":"transform"}}],[11,"fmt","","",34,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",34,{"inputs":[{"name":"self"},{"name":"transform"}],"output":{"name":"bool"}}],[11,"from_raw","","",34,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",34,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"eq","","",67,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"ne","","",67,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"clone","","",67,{"inputs":[{"name":"self"}],"output":{"name":"mode"}}],[11,"partial_cmp","","",67,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"option"}}],[11,"lt","","",67,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"le","","",67,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"gt","","",67,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"ge","","",67,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"cmp","","",67,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"ordering"}}],[11,"hash","","",67,null],[11,"fmt","","",67,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",67,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",67,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",67,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",67,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[18,"Current","","indicates this is the current mode",67,null],[18,"Preferred","","indicates this is the preferred mode",67,null],[11,"empty","","Returns an empty set of flags.",67,{"inputs":[],"output":{"name":"mode"}}],[11,"all","","Returns the set containing all flags.",67,{"inputs":[],"output":{"name":"mode"}}],[11,"bits","","Returns the raw value of the flags currently stored.",67,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",67,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",67,{"inputs":[{"name":"u32"}],"output":{"name":"mode"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",67,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",67,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",67,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",67,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",67,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",67,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",67,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",67,{"inputs":[{"name":"self"},{"name":"mode"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",67,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"mode"}}],[11,"bitor_assign","","Adds the set of flags.",67,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",67,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"mode"}}],[11,"bitxor_assign","","Toggles the set of flags.",67,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",67,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"mode"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",67,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",67,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"mode"}}],[11,"sub_assign","","Disables all flags enabled in the set.",67,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",67,{"inputs":[{"name":"self"}],"output":{"name":"mode"}}],[11,"extend","","",67,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",67,{"inputs":[{"name":"t"}],"output":{"name":"mode"}}],[11,"from_raw","","",67,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",67,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",32,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",32,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"geometry","","properties of the output",66,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"subpixel"},{"name":"string"},{"name":"string"},{"name":"transform"}],"output":{"name":"eventresult"}}],[11,"mode","","advertise available modes for the output",66,{"inputs":[{"name":"self"},{"name":"mode"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"eventresult"}}],[11,"done","","sent all information about output",66,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"scale","","output scaling properties",66,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"eventresult"}}],[11,"ptr","wayland_server::protocol::wl_region","",68,null],[11,"from_ptr_new","","",68,null],[11,"from_ptr_initialized","","",68,null],[11,"interface_ptr","","",68,null],[11,"interface_name","","",68,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",68,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",68,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",68,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",68,{"inputs":[{"name":"self"},{"name":"wlregion"}],"output":{"name":"bool"}}],[11,"set_user_data","","",68,null],[11,"get_user_data","","",68,null],[11,"clone_unchecked","","",68,{"inputs":[{"name":"self"}],"output":{"name":"wlregion"}}],[11,"__dispatch_msg","","",68,null],[11,"clone","","",35,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",35,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"ptr","wayland_server::protocol::wl_subcompositor","",69,null],[11,"from_ptr_new","","",69,null],[11,"from_ptr_initialized","","",69,null],[11,"interface_ptr","","",69,null],[11,"interface_name","","",69,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",69,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",69,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",69,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",69,{"inputs":[{"name":"self"},{"name":"wlsubcompositor"}],"output":{"name":"bool"}}],[11,"set_user_data","","",69,null],[11,"get_user_data","","",69,null],[11,"clone_unchecked","","",69,{"inputs":[{"name":"self"}],"output":{"name":"wlsubcompositor"}}],[11,"__dispatch_msg","","",69,null],[11,"clone","","",37,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",37,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",37,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",37,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",37,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",36,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",36,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[11,"ptr","wayland_server::protocol::wl_subsurface","",70,null],[11,"from_ptr_new","","",70,null],[11,"from_ptr_initialized","","",70,null],[11,"interface_ptr","","",70,null],[11,"interface_name","","",70,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",70,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",70,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",70,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",70,{"inputs":[{"name":"self"},{"name":"wlsubsurface"}],"output":{"name":"bool"}}],[11,"set_user_data","","",70,null],[11,"get_user_data","","",70,null],[11,"clone_unchecked","","",70,{"inputs":[{"name":"self"}],"output":{"name":"wlsubsurface"}}],[11,"__dispatch_msg","","",70,null],[11,"clone","","",39,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",39,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",39,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",39,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",38,{"inputs":[{"name":"self"}],"output":{"name":"implementation"}}],[11,"eq","","",38,{"inputs":[{"name":"self"},{"name":"implementation"}],"output":{"name":"bool"}}],[0,"sys","wayland_server","Reexports of types and objects from wayland-sys",null,null],[6,"GlobalCallback","","Callback function called when a global is instanciated by a client",null,null],[8,"Resource","","Common routines for wayland resource objects.",null,null],[10,"ptr","","Pointer to the underlying wayland proxy object",71,null],[10,"from_ptr_new","","Create an instance from a wayland pointer",71,null],[10,"from_ptr_initialized","","Create an instance from a wayland pointer",71,null],[10,"interface_ptr","","Pointer to the interface representation",71,null],[10,"interface_name","","Internal wayland name of this interface",71,{"inputs":[],"output":{"name":"str"}}],[10,"supported_version","","Max version of this interface supported",71,{"inputs":[],"output":{"name":"u32"}}],[10,"version","","Current version of the interface this resource is instantiated with",71,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"status","","Check if the resource behind this handle is actually still alive",71,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[10,"equals","","Check of two handles are actually the same wayland object",71,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[10,"set_user_data","","Set a pointer associated as user data on this resource",71,null],[10,"get_user_data","","Get the pointer associated as user data on this resource",71,null],[11,"post_error","","Posts a protocol error to this resource",71,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"string"}],"output":null}],[11,"clone","","Clone this resource handle",71,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"clone_unchecked","","Unsafely clone this resource handle",71,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"same_client_as","","Checks wether this resource and the other are from the same client",71,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"bool"}}],[8,"Implementable","","Common trait for wayland objects that can be registered to an EventQueue",null,null],[16,"Implementation","","The type containing the implementation for the event callbacks",72,null],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"expect","","Assert that result is successfull and extract the value.",1,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"t"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"liveness"}],"output":{"name":"bool"}}],[11,"new","","Create a new store",73,{"inputs":[],"output":{"name":"store"}}],[11,"insert","","Insert a new value in this store",73,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"token"}}],[11,"get","","Access value previously inserted in this store",73,{"inputs":[{"name":"self"},{"name":"token"}],"output":{"name":"v"}}],[11,"get_mut","","Mutably access value previously inserted in this store",73,{"inputs":[{"name":"self"},{"name":"token"}],"output":{"name":"v"}}],[11,"remove","","Remove a value previously inserted in this store",73,{"inputs":[{"name":"self"},{"name":"token"}],"output":{"name":"v"}}],[11,"with_value","","Create a sub-scope with access to a value",73,{"inputs":[{"name":"self"},{"name":"token"},{"name":"f"}],"output":{"name":"t"}}],[11,"as_proxy","","See this `Store` as a `StoreProxy` with no ongoing borrow",73,{"inputs":[{"name":"self"}],"output":{"name":"storeproxy"}}],[11,"from","","",74,{"inputs":[{"name":"store"}],"output":{"name":"storeproxy"}}],[11,"from","","",74,{"inputs":[{"name":"storeproxy"}],"output":{"name":"storeproxy"}}],[11,"clone","","",75,{"inputs":[{"name":"self"}],"output":{"name":"token"}}],[11,"insert","","Insert a new value in the proxified store",74,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"token"}}],[11,"get","","Access value previously inserted in the proxified store",74,{"inputs":[{"name":"self"},{"name":"token"}],"output":{"name":"v"}}],[11,"get_mut","","Mutably access value previously inserted in the proxified store",74,{"inputs":[{"name":"self"},{"name":"token"}],"output":{"name":"v"}}],[11,"remove","","Remove a value previously inserted in the proxified store",74,{"inputs":[{"name":"self"},{"name":"token"}],"output":{"name":"v"}}],[11,"with_value","","Create a sub-scope with access to a value",74,{"inputs":[{"name":"self"},{"name":"token"},{"name":"f"}],"output":{"name":"t"}}],[11,"valid","","Check wether this token is still valid",75,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"eq","wayland_server::sources","",76,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":{"name":"bool"}}],[11,"ne","","",76,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":{"name":"bool"}}],[11,"clone","","",76,{"inputs":[{"name":"self"}],"output":{"name":"fdinterest"}}],[11,"partial_cmp","","",76,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":{"name":"option"}}],[11,"lt","","",76,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":{"name":"bool"}}],[11,"le","","",76,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":{"name":"bool"}}],[11,"gt","","",76,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":{"name":"bool"}}],[11,"ge","","",76,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":{"name":"bool"}}],[11,"cmp","","",76,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":{"name":"ordering"}}],[11,"hash","","",76,null],[11,"fmt","","",76,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",76,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",76,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",76,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",76,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[18,"READ","","Interest to be notified when the file descriptor is readable",76,null],[18,"WRITE","","Interest to be notified when the file descriptor is writable",76,null],[11,"empty","","Returns an empty set of flags.",76,{"inputs":[],"output":{"name":"fdinterest"}}],[11,"all","","Returns the set containing all flags.",76,{"inputs":[],"output":{"name":"fdinterest"}}],[11,"bits","","Returns the raw value of the flags currently stored.",76,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",76,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",76,{"inputs":[{"name":"u32"}],"output":{"name":"fdinterest"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",76,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",76,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",76,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",76,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",76,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",76,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",76,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",76,{"inputs":[{"name":"self"},{"name":"fdinterest"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",76,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":{"name":"fdinterest"}}],[11,"bitor_assign","","Adds the set of flags.",76,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",76,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":{"name":"fdinterest"}}],[11,"bitxor_assign","","Toggles the set of flags.",76,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",76,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":{"name":"fdinterest"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",76,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",76,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":{"name":"fdinterest"}}],[11,"sub_assign","","Disables all flags enabled in the set.",76,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",76,{"inputs":[{"name":"self"}],"output":{"name":"fdinterest"}}],[11,"extend","","",76,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",76,{"inputs":[{"name":"t"}],"output":{"name":"fdinterest"}}],[11,"update_mask","","Change the registered interest for this FD",77,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":null}],[11,"remove","","Remove this event source from its event loop",77,{"inputs":[{"name":"self"}],"output":{"name":"id"}}],[11,"set_delay_ms","","Set the delay of this timer",78,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"remove","","Remove this event source from its event loop",78,{"inputs":[{"name":"self"}],"output":{"name":"id"}}],[11,"remove","","Remove this event source from its event loop",79,{"inputs":[{"name":"self"}],"output":{"name":"id"}}],[11,"remove","","Remove this event source from its event loop",80,{"inputs":[{"name":"self"}],"output":{"name":"id"}}]],"paths":[[4,"RegisterStatus"],[4,"EventResult"],[4,"Liveness"],[3,"Implementation"],[3,"Implementation"],[3,"Implementation"],[4,"Error"],[4,"Format"],[3,"Implementation"],[3,"Implementation"],[4,"Error"],[3,"Implementation"],[4,"Error"],[3,"Implementation"],[4,"Error"],[3,"Implementation"],[3,"Implementation"],[4,"Error"],[3,"Implementation"],[4,"FullscreenMethod"],[3,"Implementation"],[4,"Error"],[3,"Implementation"],[3,"Implementation"],[4,"Error"],[4,"ButtonState"],[4,"Axis"],[4,"AxisSource"],[3,"Implementation"],[4,"KeymapFormat"],[4,"KeyState"],[3,"Implementation"],[3,"Implementation"],[4,"Subpixel"],[4,"Transform"],[3,"Implementation"],[3,"Implementation"],[4,"Error"],[3,"Implementation"],[4,"Error"],[3,"Client"],[3,"Display"],[3,"Global"],[3,"EventLoopHandle"],[3,"EventLoop"],[3,"FdEventSourceImpl"],[3,"WlCallback"],[3,"WlCompositor"],[3,"WlShmPool"],[3,"WlShm"],[3,"WlBuffer"],[3,"WlDataOffer"],[3,"WlDataSource"],[3,"WlDataDevice"],[3,"WlDataDeviceManager"],[3,"DndAction"],[3,"WlShell"],[3,"WlShellSurface"],[3,"Resize"],[3,"Transient"],[3,"WlSurface"],[3,"WlSeat"],[3,"Capability"],[3,"WlPointer"],[3,"WlKeyboard"],[3,"WlTouch"],[3,"WlOutput"],[3,"Mode"],[3,"WlRegion"],[3,"WlSubcompositor"],[3,"WlSubsurface"],[8,"Resource"],[8,"Implementable"],[3,"State"],[3,"StateProxy"],[3,"StateToken"],[3,"FdInterest"],[3,"FdEventSource"],[3,"TimerEventSource"],[3,"SignalEventSource"],[3,"IdleEventSource"]]};
searchIndex["wayland_sys"] = {"doc":"FFI bindings to the wayland system libraries.","items":[[6,"gid_t","wayland_sys","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[0,"common","","Various types and functions that are used by both the client and the server libraries.",null,null],[3,"wl_message","wayland_sys::common","",null,null],[12,"name","","",0,null],[12,"signature","","",0,null],[12,"types","","",0,null],[3,"wl_interface","","",null,null],[12,"name","","",1,null],[12,"version","","",1,null],[12,"request_count","","",1,null],[12,"requests","","",1,null],[12,"event_count","","",1,null],[12,"events","","",1,null],[3,"wl_list","","",null,null],[12,"prev","","",2,null],[12,"next","","",2,null],[3,"wl_array","","",null,null],[12,"size","","",3,null],[12,"alloc","","",3,null],[12,"data","","",3,null],[3,"wl_argument","","",null,null],[5,"wl_fixed_to_double","","",null,{"inputs":[{"name":"wl_fixed_t"}],"output":{"name":"f64"}}],[5,"wl_fixed_from_double","","",null,{"inputs":[{"name":"f64"}],"output":{"name":"wl_fixed_t"}}],[5,"wl_fixed_to_int","","",null,{"inputs":[{"name":"wl_fixed_t"}],"output":{"name":"i32"}}],[5,"wl_fixed_from_int","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"wl_fixed_t"}}],[6,"wl_fixed_t","","",null,null],[6,"wl_dispatcher_func_t","","",null,null],[6,"wl_log_func_t","","",null,null],[0,"client","wayland_sys","Bindings to the client library `libwayland-client.so`",null,null],[3,"WaylandClient","wayland_sys::client","",null,null],[12,"wl_display_connect_to_fd","","",4,null],[12,"wl_display_connect","","",4,null],[12,"wl_display_disconnect","","",4,null],[12,"wl_display_get_fd","","",4,null],[12,"wl_display_roundtrip","","",4,null],[12,"wl_display_read_events","","",4,null],[12,"wl_display_prepare_read","","",4,null],[12,"wl_display_cancel_read","","",4,null],[12,"wl_display_dispatch","","",4,null],[12,"wl_display_dispatch_pending","","",4,null],[12,"wl_display_get_error","","",4,null],[12,"wl_display_get_protocol_error","","",4,null],[12,"wl_display_flush","","",4,null],[12,"wl_event_queue_destroy","","",4,null],[12,"wl_display_create_queue","","",4,null],[12,"wl_display_roundtrip_queue","","",4,null],[12,"wl_display_prepare_read_queue","","",4,null],[12,"wl_display_dispatch_queue","","",4,null],[12,"wl_display_dispatch_queue_pending","","",4,null],[12,"wl_proxy_create","","",4,null],[12,"wl_proxy_destroy","","",4,null],[12,"wl_proxy_add_listener","","",4,null],[12,"wl_proxy_get_listener","","",4,null],[12,"wl_proxy_add_dispatcher","","",4,null],[12,"wl_proxy_marshal_array_constructor","","",4,null],[12,"wl_proxy_marshal_array_constructor_versioned","","",4,null],[12,"wl_proxy_marshal_array","","",4,null],[12,"wl_proxy_set_user_data","","",4,null],[12,"wl_proxy_get_user_data","","",4,null],[12,"wl_proxy_get_id","","",4,null],[12,"wl_proxy_get_class","","",4,null],[12,"wl_proxy_set_queue","","",4,null],[12,"wl_proxy_get_version","","",4,null],[12,"wl_log_set_handler_client","","",4,null],[12,"wl_list_init","","",4,null],[12,"wl_list_insert","","",4,null],[12,"wl_list_remove","","",4,null],[12,"wl_list_length","","",4,null],[12,"wl_list_empty","","",4,null],[12,"wl_list_insert_list","","",4,null],[12,"wl_array_init","","",4,null],[12,"wl_array_release","","",4,null],[12,"wl_array_add","","",4,null],[12,"wl_array_copy","","",4,null],[12,"wl_proxy_marshal_constructor","","",4,null],[12,"wl_proxy_marshal_constructor_versioned","","",4,null],[12,"wl_proxy_marshal","","",4,null],[3,"WAYLAND_CLIENT_OPTION","","",null,null],[3,"WAYLAND_CLIENT_HANDLE","","",null,null],[4,"wl_proxy","","",null,null],[4,"wl_display","","",null,null],[4,"wl_event_queue","","",null,null],[5,"is_lib_available","","",null,{"inputs":[],"output":{"name":"bool"}}],[11,"open","","",4,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"deref","","",5,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"initialize","","",5,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",6,{"inputs":[{"name":"self"}],"output":{"name":"waylandclient"}}],[11,"initialize","","",6,{"inputs":[{"name":"self"}],"output":null}],[0,"server","wayland_sys","Bindings to the client library `libwayland-server.so`",null,null],[3,"wl_listener","wayland_sys::server","",null,null],[12,"link","","",7,null],[12,"notify","","",7,null],[3,"wl_signal","","",null,null],[12,"listener_list","","",8,null],[3,"WaylandServer","","",null,null],[12,"wl_client_flush","","",9,null],[12,"wl_client_destroy","","",9,null],[12,"wl_client_get_display","","",9,null],[12,"wl_client_get_credentials","","",9,null],[12,"wl_client_get_object","","",9,null],[12,"wl_client_add_destroy_listener","","",9,null],[12,"wl_client_get_destroy_listener","","",9,null],[12,"wl_client_post_no_memory","","",9,null],[12,"wl_resource_create","","",9,null],[12,"wl_client_create","","",9,null],[12,"wl_display_create","","",9,null],[12,"wl_display_destroy","","",9,null],[12,"wl_display_get_serial","","",9,null],[12,"wl_display_next_serial","","",9,null],[12,"wl_display_add_socket","","",9,null],[12,"wl_display_add_socket_auto","","",9,null],[12,"wl_display_add_socket_fd","","",9,null],[12,"wl_display_add_shm_format","","",9,null],[12,"wl_display_get_event_loop","","",9,null],[12,"wl_display_terminate","","",9,null],[12,"wl_display_run","","",9,null],[12,"wl_display_flush_clients","","",9,null],[12,"wl_display_add_destroy_listener","","",9,null],[12,"wl_display_get_destroy_listener","","",9,null],[12,"wl_global_create","","",9,null],[12,"wl_display_init_shm","","",9,null],[12,"wl_event_loop_create","","",9,null],[12,"wl_event_loop_destroy","","",9,null],[12,"wl_event_loop_add_fd","","",9,null],[12,"wl_event_loop_add_timer","","",9,null],[12,"wl_event_loop_add_signal","","",9,null],[12,"wl_event_loop_dispatch","","",9,null],[12,"wl_event_loop_dispatch_idle","","",9,null],[12,"wl_event_loop_add_idle","","",9,null],[12,"wl_event_loop_get_fd","","",9,null],[12,"wl_event_loop_add_destroy_listener","","",9,null],[12,"wl_event_loop_get_destroy_listener","","",9,null],[12,"wl_event_source_fd_update","","",9,null],[12,"wl_event_source_timer_update","","",9,null],[12,"wl_event_source_remove","","",9,null],[12,"wl_event_source_check","","",9,null],[12,"wl_global_destroy","","",9,null],[12,"wl_resource_post_event_array","","",9,null],[12,"wl_resource_queue_event_array","","",9,null],[12,"wl_resource_post_no_memory","","",9,null],[12,"wl_resource_set_implementation","","",9,null],[12,"wl_resource_set_dispatcher","","",9,null],[12,"wl_resource_destroy","","",9,null],[12,"wl_resource_get_client","","",9,null],[12,"wl_resource_get_id","","",9,null],[12,"wl_resource_get_link","","",9,null],[12,"wl_resource_from_link","","",9,null],[12,"wl_resource_find_for_client","","",9,null],[12,"wl_resource_set_user_data","","",9,null],[12,"wl_resource_get_user_data","","",9,null],[12,"wl_resource_get_version","","",9,null],[12,"wl_resource_set_destructor","","",9,null],[12,"wl_resource_instance_of","","",9,null],[12,"wl_resource_add_destroy_listener","","",9,null],[12,"wl_resource_get_destroy_listener","","",9,null],[12,"wl_shm_buffer_begin_access","","",9,null],[12,"wl_shm_buffer_end_access","","",9,null],[12,"wl_shm_buffer_get","","",9,null],[12,"wl_shm_buffer_get_data","","",9,null],[12,"wl_shm_buffer_get_stride","","",9,null],[12,"wl_shm_buffer_get_format","","",9,null],[12,"wl_shm_buffer_get_width","","",9,null],[12,"wl_shm_buffer_get_height","","",9,null],[12,"wl_log_set_handler_server","","",9,null],[12,"wl_list_init","","",9,null],[12,"wl_list_insert","","",9,null],[12,"wl_list_remove","","",9,null],[12,"wl_list_length","","",9,null],[12,"wl_list_empty","","",9,null],[12,"wl_list_insert_list","","",9,null],[12,"wl_array_init","","",9,null],[12,"wl_array_release","","",9,null],[12,"wl_array_add","","",9,null],[12,"wl_array_copy","","",9,null],[12,"wl_resource_post_event","","",9,null],[12,"wl_resource_queue_event","","",9,null],[12,"wl_resource_post_error","","",9,null],[3,"WAYLAND_SERVER_OPTION","","",null,null],[3,"WAYLAND_SERVER_HANDLE","","",null,null],[4,"wl_client","","",null,null],[4,"wl_display","","",null,null],[4,"wl_event_loop","","",null,null],[4,"wl_event_source","","",null,null],[4,"wl_global","","",null,null],[4,"wl_resource","","",null,null],[4,"wl_shm_buffer","","",null,null],[5,"is_lib_available","","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"signal","","",null,null],[5,"wl_signal_init","wayland_sys::server::signal","",null,null],[5,"wl_signal_add","","",null,null],[5,"wl_signal_get","","",null,null],[5,"wl_signal_emit","","",null,null],[6,"wl_event_loop_fd_func_t","wayland_sys::server","",null,null],[6,"wl_event_loop_timer_func_t","","",null,null],[6,"wl_event_loop_signal_func_t","","",null,null],[6,"wl_event_loop_idle_func_t","","",null,null],[6,"wl_global_bind_func_t","","",null,null],[6,"wl_notify_func_t","","",null,null],[6,"wl_resource_destroy_func_t","","",null,null],[11,"open","","",9,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"deref","","",10,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"initialize","","",10,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",11,{"inputs":[{"name":"self"}],"output":{"name":"waylandserver"}}],[11,"initialize","","",11,{"inputs":[{"name":"self"}],"output":null}],[0,"egl","wayland_sys","Bindings to the EGL library `libwayland-egl.so`",null,null],[3,"WaylandEgl","wayland_sys::egl","",null,null],[12,"wl_egl_window_create","","",12,null],[12,"wl_egl_window_destroy","","",12,null],[12,"wl_egl_window_resize","","",12,null],[12,"wl_egl_window_get_attached_size","","",12,null],[3,"WAYLAND_EGL_OPTION","","",null,null],[3,"WAYLAND_EGL_HANDLE","","",null,null],[4,"wl_egl_window","","",null,null],[5,"is_lib_available","","",null,{"inputs":[],"output":{"name":"bool"}}],[11,"open","","",12,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"deref","","",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"initialize","","",13,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",14,{"inputs":[{"name":"self"}],"output":{"name":"waylandegl"}}],[11,"initialize","","",14,{"inputs":[{"name":"self"}],"output":null}],[0,"cursor","wayland_sys","Bindings to the `wayland-cursor.so` library",null,null],[3,"wl_cursor_image","wayland_sys::cursor","",null,null],[12,"width","","actual width",15,null],[12,"height","","actual height",15,null],[12,"hotspot_x","","hot spot x (must be inside image)",15,null],[12,"hotspot_y","","hot spot y (must be inside image)",15,null],[12,"delay","","animation delay to next frame",15,null],[3,"wl_cursor","","",null,null],[12,"image_count","","",16,null],[12,"images","","",16,null],[12,"name","","",16,null],[3,"WaylandCursor","","",null,null],[12,"wl_cursor_theme_load","","",17,null],[12,"wl_cursor_theme_destroy","","",17,null],[12,"wl_cursor_theme_get_cursor","","",17,null],[12,"wl_cursor_image_get_buffer","","",17,null],[12,"wl_cursor_frame","","",17,null],[12,"wl_cursor_frame_and_duration","","",17,null],[3,"WAYLAND_CURSOR_OPTION","","",null,null],[3,"WAYLAND_CURSOR_HANDLE","","",null,null],[4,"wl_cursor_theme","","",null,null],[5,"is_lib_available","","",null,{"inputs":[],"output":{"name":"bool"}}],[11,"open","","",17,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"deref","","",18,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"initialize","","",18,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",19,{"inputs":[{"name":"self"}],"output":{"name":"waylandcursor"}}],[11,"initialize","","",19,{"inputs":[{"name":"self"}],"output":null}],[7,"RUST_MANAGED","wayland_sys","Magic pointer for wayland objects managed by wayland-client or wayland-server",null,null],[14,"ffi_dispatch","","",null,null]],"paths":[[3,"wl_message"],[3,"wl_interface"],[3,"wl_list"],[3,"wl_array"],[3,"WaylandClient"],[3,"WAYLAND_CLIENT_OPTION"],[3,"WAYLAND_CLIENT_HANDLE"],[3,"wl_listener"],[3,"wl_signal"],[3,"WaylandServer"],[3,"WAYLAND_SERVER_OPTION"],[3,"WAYLAND_SERVER_HANDLE"],[3,"WaylandEgl"],[3,"WAYLAND_EGL_OPTION"],[3,"WAYLAND_EGL_HANDLE"],[3,"wl_cursor_image"],[3,"wl_cursor"],[3,"WaylandCursor"],[3,"WAYLAND_CURSOR_OPTION"],[3,"WAYLAND_CURSOR_HANDLE"]]};
initSearch(searchIndex);
